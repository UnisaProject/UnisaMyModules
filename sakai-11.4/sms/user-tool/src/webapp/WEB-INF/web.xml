<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee  http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" 
		version="2.4">
	<display-name>sakai.sms.user</display-name>
	<description>Sakai SMS user facing tool</description>

  <context-param>
    <param-name>resourceurlbase</param-name>
    <param-value>/sms-user-tool/</param-value>
  </context-param>

  <!-- Configure standard Spring application contexts. Be sure to mention
    rsf config files first, so any overrides may be processed. The first two
    config files are loaded from inside the rsfutil.jar  -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:conf/rsf-config.xml,
      classpath:conf/blank-applicationContext.xml,
      classpath:conf/components-applicationContext.xml,

      <!-- Sakai -->
      classpath:conf/sakai-applicationContext.xml,
      classpath:conf/sakaiComponents-applicationContext.xml,
	  classpath:conf/sakai-entitybroker-applicationContext.xml,
	  
	   /WEB-INF/applicationContext.xml
     </param-value>
  </context-param>
  
  <!-- Configure "resource scope" Spring application contexts (RSAC).
     Be sure to mention rsf config files first, so any overrides may be
    processed -->
  <context-param>
    <param-name>requestContextConfigLocation</param-name>
    <param-value>classpath:conf/rsf-requestscope-config.xml,
                  classpath:conf/blank-requestContext.xml,
                  classpath:conf/components-requestContext.xml,
                  
                  <!--  Sakai -->
                  classpath:conf/sakai-requestContext.xml,
                  classpath:conf/sakaiComponents-requestContext.xml,
				  classpath:conf/sakai-entitybroker-requestContext.xml,
				  
				  /WEB-INF/requestContext.xml
                 </param-value>
  </context-param>
	
  <!--
    The Sakai Request Handler - standard stanza. Do NOT apply the sakai 
    request filter to anything that falls outside the "mapped path", in this
    instance, /faces/*. Anything that falls outside this path (interpreted
    as a resource URL) will be handled directly by the container (Tomcat).
  -->
  <filter>
    <filter-name>sakai.request</filter-name>
    <filter-class>org.sakaiproject.util.RequestFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>sakai.request</filter-name>
   	<servlet-name>sakai.sms.user</servlet-name>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
  </filter-mapping>


  	<!-- Sakai listeners -->
	<listener>
		<listener-class>org.sakaiproject.util.ToolListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.sakaiproject.util.SakaiContextLoaderListener</listener-class>
	</listener>
	
  	<!-- tool servlet -->
	<servlet>
		<!-- servlet name must match tool.id in tools xml file -->
		<servlet-name>sakai.sms.user</servlet-name>
		<servlet-class>org.sakaiproject.rsf.servlet.ReasonableSakaiServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>sakai.sms.user</servlet-name>
		<url-pattern>/faces/*</url-pattern>
	</servlet-mapping>  
 
</web-app>
