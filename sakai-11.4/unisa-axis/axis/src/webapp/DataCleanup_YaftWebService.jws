import java.sql.Types;
import org.apache.commons.collections.map.ListOrderedMap;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;

import java.io.*;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.xml.parsers.*;
import javax.xml.transform.*;
import javax.xml.transform.dom.*;
import javax.xml.transform.stream.*;
import java.net.URL;
import java.net.HttpURLConnection;
import java.net.URLConnection;
import java.net.URLEncoder;


import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.stream.StreamSource;


import org.w3c.dom.*;

import org.apache.axis.AxisFault;
import org.apache.axis.utils.JavaUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.jdbc.core.JdbcTemplate;

import org.sakaiproject.component.cover.ServerConfigurationService;
import org.sakaiproject.component.cover.ComponentManager;
import org.sakaiproject.email.api.EmailService;
import org.sakaiproject.email.api.Attachment;
import org.sakaiproject.email.api.RecipientType;
import org.sakaiproject.event.cover.UsageSessionService;
import org.sakaiproject.event.api.UsageSession;

import za.ac.unisa.lms.db.StudentSystemDAO;
import za.ac.unisa.lms.db.SakaiDAO;


/**
This webservice is used to delete old data from old sites
tool: Sakai Management

Sonette start with webservice 8 June 2017
*/
public class DataCleanup_YaftWebService {

	/* ----------------------------------------------------------------------------------------------------------------- */
	private EmailService emailService;

	/* ----------------------------------------------------------------------------------------------------------------- */
	// QUERIES
    
    
    // ----- -----------------------------------------------
    // ----- retrieve forums per site YAFT_FORUM
    String RETRIEVE_FORUMS_PER_SITE = " select FORUM_ID from yaft_forum where site_id= ?";

	/* ----------------------------------------------------------------------------------------------------------------- */
	/** Actual method to do the site management data cleanup
		Input:
		1) year
		2) semester period
    */
	public String dataCleanupPerYearSemester(String academicYear, String semesterPeriod )throws AxisFault {
	
		// ----- variables
		StringBuffer yearSemester = new StringBuffer();
    	StringBuffer result = new StringBuffer();
    	String serverUrl = ServerConfigurationService.getString("serverUrl");
	
		// ----- Set yearSemester YY-S1
	    yearSemester.append(academicYear.substring(2,4));
    	yearSemester.append('-');
    	yearSemester.append(semesterPeriod);
		
		// ----- get serverUrl (myDev, myQa, myUnisa or localhost)
		if (serverUrl.equals("http://localhost:8080")) {
			serverUrl = "https://mydev.unisa.ac.za";
		} 
		serverUrl = "http://163.200.82.234:8020/portal";
	
	
		// ----- Retrieve forums where data must be deleted
		String SELECT_SAKAI_REALM = " SELECT REALM_KEY "+
                     			" FROM   SAKAI_REALM"+
                     			" WHERE  REALM_KEY=10078"; // hard code for testing 
                     			//" WHERE  to_char(modifiedon,'YYYY') = ?"; 
		 


	} // end of DataCleanupPerYearSemester	
	
	/* ----------------------------------------------------------------------------------------------------------------- */
	/** Actual method to do the site management data cleanup
		Input:
		1) Site id
    */
	public String dataCleanupPerSite(String siteId )throws AxisFault {
	
		// ----- variables
		StringBuffer siteId = new StringBuffer();
    	StringBuffer result = new StringBuffer();
    	String serverUrl = ServerConfigurationService.getString("serverUrl");
	
		// ----- get serverUrl (myDev, myQa, myUnisa or localhost)
		if (serverUrl.equals("http://localhost:8080")) {
			serverUrl = "https://mydev.unisa.ac.za";
		} 
		serverUrl = "http://163.200.82.234:8020/portal";
	
	
		// ----- -----------------------------------------------
		// ----- retrieve forums for the site that must be deleted RETRIEVE_FORUMS_PER_SITE
		JdbcTemplate jdt1 = new JdbcTemplate(new SakaiDAO().getDataSource());
		try {
               
            List recordsForums = jdt1.queryForList(RETRIEVE_FORUMS_PER_SITE,
                       new Object[] {siteId.toString()});

			Iterator recordsForums_it = recordsForums.iterator();
					
			// ----- For each site retrieved
			while (recordsForums_it.hasNext()) {
				ListOrderedMap record_Forum = (ListOrderedMap) recordsForums_it.next();
					
				StringBuffer forumId = new StringBuffer();
				forumId.append(record_Forum.get("FORUM_ID").toString());
		
			} // end of while
		} catch (Exception e) { // end of try (RETRIEVE_FORUMS_PER_SITE)
			System.out.println("***** Data_Cleanup_SakaiSiteManagement: delete from table SAKAI_SITE_PROPERTY error "+e);
		} //jdt_Delete1.update
		
		// ----- -----------------------------------------------
		// ----- delete from table SAKAI_SITE_HISTORY
		JdbcTemplate jdt_Delete2 = new JdbcTemplate(new SakaiDAO().getDataSource());
		try {
			jdt_Delete2.update(DELETE_SAKAI_SITE_HIST,
			new Object[] {siteId.toString()});
		} catch (Exception e) { //jdt_Delete2
			System.out.println("***** Data_Cleanup_SakaiSiteManagement: delete from table SAKAI_SITE_HISTORY error "+e);
			//result.append("<br> ----- delete from table SAKAI_SITE_HISTORY ERROR ----- ");
			//result.append(siteId.toString());
			//result.append(e);
		} //jdt_Delete.update	


	} // end of dataCleanupSite	
	

} // end of DataCleanup_YaftWebService