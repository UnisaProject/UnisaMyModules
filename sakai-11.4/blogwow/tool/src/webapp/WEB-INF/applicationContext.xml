<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <!-- handles configuration of internationalization messages -->
   <bean id="messageLocator" class="uk.org.ponder.springutil.SpringMessageLocator">
      <property name="messageSource">
         <bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
            <property name="basename">
               <value>WEB-INF/bundle/messages</value>
            </property>
            <property name="cacheSeconds">
               <value>10</value>
            </property>
         </bean>
      </property>
      <property name="localeGetter" ref="requestLocaleProxy" />
   </bean>

   <!-- Override the default style of user messages -->
   <bean id="messageTemplateContributor" parent="templateContributorParent">
      <property name="baseDirectory" value="component-templates/" />
      <property name="templateNames" value="Messages,Navbar" />
   </bean>

   <!-- For security purposes, only beans listed in the comma separated value list
      may be the target of EL operations coming in over the request -->
   <bean parent="requestAddressibleParent">
      <property name="value" value="BlogLocator,EntryLocator,CommentLocator" />
   </bean>

   <!-- Control the location of the html templates (default: content/templates/) -->
   <bean id="templateResolverStrategy" parent="CRITemplateResolverStrategy">
      <property name="baseDirectory" value="templates/" />
   </bean>

   <!-- Override this definition from RSF-evolvers, to reflect the fact we are
      serving the RSF components templates from our own webapp (as provided using
      the "partial WAR" build strategy -->
   <bean id="componentsTemplateResourceBase" class="java.lang.String">
      <constructor-arg value="/" />
   </bean>

   <!-- view param inferrer beans to handle entity urls -->
   <bean class="org.sakaiproject.blogwow.tool.inferrer.BlogRSSInferrer" />

   <bean class="org.sakaiproject.blogwow.tool.inferrer.BlogGroupRSSInferrer" />
   
   <bean class="org.sakaiproject.blogwow.tool.inferrer.BlogGroupInferrer" />

   <bean class="org.sakaiproject.blogwow.tool.inferrer.BlogInferrer" />

   <bean class="org.sakaiproject.blogwow.tool.inferrer.BlogEntryInferrer">
      <property name="entryLogic" ref="org.sakaiproject.blogwow.logic.EntryLogic" />
   </bean>


   <bean id="MugshotGenerator" class="org.sakaiproject.blogwow.tool.beans.MugshotGenerator">
      <property name="mugshotImages">
         <list>
            <value>../images/user.png</value>
            <value>../images/user_gray.png</value>
            <value>../images/user_green.png</value>
            <value>../images/user_orange.png</value>
            <value>../images/user_red.png</value>
         </list>
      </property>
   </bean>

   <!-- added to propogate errors -->
   <bean id="redirectOnLevel1Error" class="uk.org.ponder.springutil.BooleanFactory">
       <property name="value" value="false" />
   </bean>

   <bean id="fatalErrorHandler"
       class="uk.org.ponder.rsf.processor.support.DefaultFatalErrorHandler">
       <property name="propagatedExceptions" value="java.lang.Throwable" />
   </bean>

   <bean parent="alterationWrapperParent">
       <property name="value">
           <bean parent="RSACBridgeProxy">
               <property name="targetBeanName" value="allErrorsAllowable" />
           </bean>
       </property>
   </bean>


</beans>