## sakai.properties - the bbb-tool extension
# This file is the default for providing bbb-tool configuration and placeholder values for Sakai.

## NOTE: Recommend that you use this as a reference copy of the configuration to be appended to sakai.properties
##       but append this to your actual config settings into a local.properties or security.properties file
##       (sort of like apache webserver does it)
##       `sudo cat default.sakai.properties >> $CATALINA_HOME/sakai/sakai.properties`

## NOTE: All properties in this files should be commented out AND should include a comment indicating the default value and a sample value

# ########################################################################
# BBB-TOOL
# ########################################################################

## Required settings
# The BigBlueButton server API endpoint
# DEFAULT: http://test-install.blindsidenetworks.com/bigbluebutton/
# bbb.url=

# The BigBlueButton shared secret
# DEFAULT: 8cd8ef52e8e101574e400365b55e11a6
# bbb.salt=

## Optional settings
# Whether the browser window of BBB should be automatically closed after logging out of a meeting.
# If false, the configured bigbluebutton.web.loggedOutUrl from BigBlueButton will be used instead.
# DEFAULT: true
# bbb.autocloseMeetingWindow=

# Time - in milliseconds - to periodically check the API version of the configured BigBlueButton server.
# This is useful for performing BBB upgrades without having to restart Sakai.
# DEFAULT: 0 (disabled)
# bbb.versionCheckInterval

# Optional text to be displayed on the tool main page.
# bbb.notice.text=

# Message level in which the text will be displayed (BBB-37). Valid values: info, warn, success
# DEFAULT: info
# bbb.notice.level=

# List (comma separated) of default permissions for role ROLE. Will only be applied if no bbb.* permission is defined on site (BBB-45).
# bbb.default.permissions.ROLE=

# If set (and not 'none'), meeting owner will be added to new meetings by default, with specified BBB role (BBB-45). Valid values: none, moderator, attendee.
# DEFAULT: moderator
# bbb.default.participants.owner=

# If set (and not 'none'), all site participants will be added to new meetings by default, with specified BBB role (BBB-45). Valid values: none, moderator, attendee.
# DEFAULT: none
# bbb.default.participants.all_users=

# Auto-refresh interval for updating meeting status, expressed in milliseconds. When the value is set to 0 the auto-refresh is turned off.
# DEFAULT: 0
# bbb.autorefresh.meetings=

# Auto-refresh interval for updating recording list and and info, expressed in milliseconds. When the value is set to 0 the auto-refresh is turned off.
# DEFAULT: 0
# bbb.autorefresh.recordings=

# Establishes the maximum length for the meeting description. Since the description is also used as a welcome message in the BigBlueButton client,
# this is an important parameter as this limit should be less than the one set up for query strings on a GET request in the BigBlueButton server
# or any web server working as intermediary between Sakai and BigBlueButton.
# DEFAULT: 2048
# bbb.descriptionmaxlength=

# Defines the type of box that is going to be used in the UI for setting up the description.
# The values can be [fckeditor|ckeditor|plaintext]
# DEFAULT: fckeditor
# bbb.descriptiontype=

# Set up to [true|false] to enable or disable the recording capability for all meetings.
# When enabled, its setting can be changed for each meeting using the Add/Edit user interface.
# This parameter replaces the bbb.recording parameter introduced in 1.0.7.
# DEFAULT: true
# bbb.recording.enabled=

# Set up to [true|false] to show or hide the 'recording' checkbox for meetings when created/edited.
# This feature can be used to enforce recordings for all meetings (by setting enabled and default to true and, editable to false),
# however this will not enforce recordings for meetings created before this change.
# DEFAULT: true
# bbb.recording.editable=

# Set up to [true|false] the default 'recording' setting for the meetings when created.
# When a meeting has this setting enabled, the sessions will be created with recording capabilities.
# DEFAULT: false
# bbb.recording.default=

# Set up to [true|false] to enable or disable the duration capability for all meetings. When enabled, its value can be changed for each meeting using the Add/Edit user interface.
# DEFAULT: false
# bbb.duration.enabled=

# The default duration, expressed in numeric format, for the meetings when created.
# The maximum duration for a meeting is counted in minutes since the first user joins the session and all users are kicked out once the limit is reached.
# If its value is 0 no limit will be set.
# DEFAULT: 120
# bbb.duration.default=

# Set up to [true|false] to enable or disable the waiting for moderator capability for all meetings.
# When enabled, its value can be changed for each meeting using the Add/Edit user interface.
# DEFAULT: true
# bbb.waitmoderator.enabled=

# Set up to [true|false] to show or hide the 'wait for moderator' checkbox for meetings when created/edited.
# This feature can be used to enforce 'wait for moderator' for all meetings (by setting enabled and default to true and, editable to false),
# however this will not enforce 'wait for moderator' for meetings created before this change.
# DEFAULT: true
# bbb.waitmoderator.editable=

# Set up to [true|false] the default 'wait for moderator' setting for the meetings when created.
# When a meeting has this setting enabled, all users in the viewer role will not be able to join the session until a user with the moderator role joins.
# DEFAULT: true
# bbb.waitmoderator.default=

# Set up to [true|false] to enable or disable the 'multiple sessions allowed' capability for all meetings.
# When enabled, its value can be changed for each meeting using the Add/Edit user interface.
# DEFAULT: false
# bbb.multiplesessionsallowed.enabled=

# Set up to [true|false] to show or hide the 'multiple sessions allowed' checkbox for meetings when created/edited.
# This feature can be used to enforce 'multiple sessions allowed' for all meetings (by setting enabled and default to true, and editable to false),
# however this will not enforce 'multiple sessions allowed' for meetings created before this change.
# DEFAULT: true
# bbb.multiplesessionsallowed.editable=

# Set up to [true|false] the default 'multiple sessions allowed' setting for the meetings when created.
# When a meeting has this setting enabled, users will be able to join the same sessions in multiple tabs.
# DEFAULT: false
# bbb.multiplesessionsallowed.default=

# Set up to [true|false] to enable or disable the 'preupload presentation' capability for all meetings.
# When enabled, presentations can be preuploaded to the meeting if a file is chosen in the Add/Edit user interface.
# DEFAULT: true
# bbb.preuploadpresentation.enabled=

# Set up to [true|false] to enable or disable the 'group sessions' capability for all meetings.
# When enabled, its value can be changed for each meeting using the Add/Edit user interface.
# DEFAULT: true
# bbb.groupsessions.enabled=

# Set up to [true|false] to show or hide the 'group sessions' checkbox for meetings when created/edited.
# This feature can be used to enforce 'group sessions' for all meetings (by setting enabled and default to true, and editable to false),
# however this will not enforce 'group sessions' for meetings created before this change.
# DEFAULT: true
# bbb.groupsessions.editable=

# Set up to [true|false] the default 'group sessions' setting for the meetings when created.
# When a meeting has this setting enabled, users will be able to join group-only sessions for the meeting.
# DEFAULT: false
# bbb.groupsessions.default=

## Special settings
# ################################################################################################################################################ #
# BigBlueButton can be extended in many different ways. A common way to gain some extra capabilities is by adding ruby scripts that are executed
# while the recording is processed http://docs.bigbluebutton.org/dev/recording.html#post-scripts.
# Common uses for this are: sending messages when the recording is ready, gattering information that may be used for analitycs etc.
# Although these features are not standard, there are a few minor tweaks that can be enabled by configuration in Sakai so BigBlueButton
# administrators can implement actions over extra information received through the meta parameters.
# ################################################################################################################################################ #

# Send a messages through Sakai when the recording is ready.
# When enabled, a meta_bn-recording-ready-url parameter is included as part of the create request. It contains an URL that can be used by BigBlueButton
# as a callback endpoint. The request is a POST message JWT encoded and signed with the shared secret. If the meetingId passed as part of the payload
# matches a meeting in Sakai, the bbb-tool sends a message to all the users enrolled in the site.
# DEFAULT: false
# bbb.recordingready.enabled=

# Include the user.user_id or user.eid in the join URL when the users join the session in BigBlueButton. The
# This feature has to be explicitly enabled otherwise the recordingstats.userid is ignored and no user id is included.
# DEFAULT: false
# bbb.recordingstats.enabled=

# The default value for userid is the Sakai user.eid but also the user_id could be used instead.
# DEFAULT: eid [eid|user_id]
# bbb.recordingstats.userid=

# Set up to [true|false] a filter to be applied to recording formats when the BBB server provides more than one
# DEFAULT: true
# bbb.recordingformatfilter.enabled=

# List (comma separated) of recording formats that will be whitelisted.
# The whitelisted formats are shown to all the users who have permissions to view recordings. All the other formats
# are considered as Extra Formats and have to be enabled per role through the permissions.
# DEFAULT: presentation,video
# bbb.recordingformatfilter.whitelist=
