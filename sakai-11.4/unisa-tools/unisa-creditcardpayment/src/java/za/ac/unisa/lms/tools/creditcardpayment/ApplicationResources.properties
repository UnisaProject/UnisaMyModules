#headings
page.heading = Credit Card Payments
page.noSubmittion = Please do not submit more than one payment. Your first payment is still being processed.
page.warning = Please do not click 'Pay now' more than once. It could result in duplicate payments.

#sub headings (group_headings)
page.studentinfo = Student Personal Details
page.applicantinfo = Applicant Personal Details
#page.paymentinfo = Current Student Account and Payment Details
page.paymentinfo = Payment Details
page.accountinfo = Current Student Account Details
page.cardinfo = Credit Card Details

page.input.info1 = You can make a direct online credit card payment via the bank for a specific account.<BR/>PLEASE NOTE: You need a <strong>valid email address</strong> to complete the payment process.<BR/> 
page.input.info2 = Please enter a valid student number or application reference number and choose Continue.
page.input.info3 = Please check your qualification, change it if necessary and choose Continue.
page.required.instruction = Required items marked with
page.libfinebalance=Library fine balance on this account :
page.libfinefeetopay.amount=Library Fine Amount you wish to pay:

# fields on page

page.studentNr = Student number:
page.applyNr = Application reference number:
page.studentApplyNr = Student / Application reference number:
page.qualCode = Qualification code:
page.name = Name:
page.regstatus = Registration status:
page.email = E-mail address:
page.email.info = Payment receipts will be sent to this e-mail address.
page.library = Access to Unisa campuses:
page.matric = Matriculation board fee:
page.matric.info = (Issuing of complete or conditional exemption certificates by the Matriculation Board)
page.balance = Study fee balance on this account:
page.studyfee.amount = Study fee amount you wish to pay:
page.minimum.due = Amount already outstanding on study fee account:
page.minimum.regfee = Minimum amount due to enable registration:
page.full.amount = Pay this account in full:
page.threeGDataBundle=3G Data bundle

page.cc.number = Credit card number:
page.cc.holder = Credit card holder's name:
page.cc.oncard = (As printed on card)
page.cc.expiry = Expiry date:
page.budget = Budget option:
page.cvv = CVV security no:
page.total = Total amount being paid:

page.payment.result = 
page.required.instruction = Required items marked with
# applications for student number payments
page.apply.info1= Complete the personal and credit card details below and choose Pay now.
page.apply.amount = Application fee:

# non-TP and RG cc payment 
page.nontp.info1= Complete the personal, payment and credit card details below and choose Pay now.
page.totalamount.info = (This amount should include library, matriculation and study fees as specified above)

# TP payment
page.full.amount.info= (Includes the outstanding balance and registration fees on the account)
page.minimumdue.info= (Amount should be paid in full to receive services)
page.minimum.info= (Includes any outstanding fees and miscellaneous fees such as library access, matriculation, foreign levy, prescribed books etc.)
page.tp.totalamount.info = (Amount can  be less than R
page.required.payment = The following fees have to be paid if amounts are indicated:
page.library.info = (As requested by you at registration)
page.smartcard.info1 = Cancel the
page.smartcard.info2 = library fee: I choose not to pay the library fee as requested by me at registration and accept that without a library card I will not have access to the Muckleneuk campus library.
page.threeGDataBundle.info1=Cancel the
page.threeGDataBundle.info2=library fee: I choose not to pay the 3G Data Bundle fee.
page.logoutMessage=You have been logged out  of the Web Credit Card Payment  Application.For  Logging in again
page.headinglogout=Logged Out

page.qual = Qualification:
page.studentName = Name
page.email = E-mail address:

# buttons
button.save=Submit
button.continue=Continue
button.continue2=SimulateNodeFailure
button.continue3=SimulateNodeFailureWithRemedy
button.cancel=Cancel
button.back=Back
button.display=Display
button.clear=Clear
button.paynow = Pay now
button.payanother = Make another payment
button.payment = Back to Financial Details
button.logout=Close Payment Page


#key mappings
input=input
confirm=confirm
other=other
studentInput = studentInput
logout=logout

# Error messages for Validator framework validations
errors.studentNumber=Student number
errors.inputYear=Year 
errors.required={0} is required.
errors.minlength={0} cannot be less than {1} characters.
errors.maxlength={0} cannot be greater than {1} characters.
errors.invalid={0} is invalid.
errors.byte={0} must be a byte.
errors.short={0} must be a short.
errors.integer={0} must be numeric.
errors.long={0} must be numeric.   
errors.float={0} must be a float.
errors.double={0} must be a double.
errors.date={0} is not a date.
errors.range={0} is not in the range {1} through {2}.
errors.creditcard={0} is not a valid credit card number.
errors.email={0} is an invalid e-mail address.
error.coolgenerror={0}
error.inputYearMinValue=Year must be greater that 2002
error.studentnumber=Student number not valid. Please enter a valid student number
error.studentaccount=Student account not found.

# Messages
message.generalmessage={0}
error.coolgenerror = {0}
errors.message ={0}
#links
link.clickHere=Click here
# Action Mapping for DisplayFinancialDetailsAction
input=input
displayPreviousFinancialDetailsInput=displayPreviousFinancialDetailsInput
displayFinancialDetails=displayFinancialDetails
displayPreviousFinancialDetails=displayPreviousFinancialDetails
simulateFailureWithRemedy=simulateFailureWithRemedy
simulateFailure=simulateFailure



