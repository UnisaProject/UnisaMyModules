package Excdq01h;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                            CA Gen r8
//
//           Copyright (c) 2012 CA. All rights reserved.
//
//    Name: EXCDQ01S_OA                      Date: 2012/05/15
//    User: Tanderw                          Time: 15:10:33
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen80.vwrt.*;
import com.ca.gen80.vwrt.types.*;
import com.ca.gen80.vwrt.vdf.*;
import com.ca.gen80.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: EXCDQ01S_OA
 **/
public class EXCDQ01S_OA extends ViewBase implements IExportView, Serializable
{
  static VDF localVdf = null;
  
  // Entity View: OUT
  //        Type: WS_DEPARTMENT
  /**
   * Attribute missing flag for: OutWsDepartmentCode
   **/
  public char OutWsDepartmentCode_AS;
  /**
   * Dynamic attribute for: OutWsDepartmentCode
   **/
  public DynamicAttr OutWsDepartmentCode_AT;
  /**
   * Attribute for: OutWsDepartmentCode
   **/
  public short OutWsDepartmentCode;
  /**
   * Attribute missing flag for: OutWsDepartmentCollegeCode
   **/
  public char OutWsDepartmentCollegeCode_AS;
  /**
   * Dynamic attribute for: OutWsDepartmentCollegeCode
   **/
  public DynamicAttr OutWsDepartmentCollegeCode_AT;
  /**
   * Attribute for: OutWsDepartmentCollegeCode
   **/
  public short OutWsDepartmentCollegeCode;
  /**
   * Attribute missing flag for: OutWsDepartmentSchoolCode
   **/
  public char OutWsDepartmentSchoolCode_AS;
  /**
   * Dynamic attribute for: OutWsDepartmentSchoolCode
   **/
  public DynamicAttr OutWsDepartmentSchoolCode_AT;
  /**
   * Attribute for: OutWsDepartmentSchoolCode
   **/
  public short OutWsDepartmentSchoolCode;
  // Repeating GV:  OUT_EXAM_GROUP
  //     Repeats: 400 times
  /**
   * Repeating group view count
   **/
  public int OutExamGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutExamGroup_AC[] = new char[400];
  // Entity View: OUT_G
  //        Type: EXAM_PAPER_DETAILS
  /**
   * Attribute missing flag for: OutGExamPaperDetailsExamYear
   **/
  public char OutGExamPaperDetailsExamYear_AS[] = new char[400];
  /**
   * Dynamic attribute for: OutGExamPaperDetailsExamYear
   **/
  public DynamicAttr OutGExamPaperDetailsExamYear_AT[] = new DynamicAttr[400];
  /**
   * Attribute for: OutGExamPaperDetailsExamYear
   **/
  public short OutGExamPaperDetailsExamYear[] = new short[400];
  /**
   * Attribute missing flag for: OutGExamPaperDetailsMkStudyUnitCode
   **/
  public char OutGExamPaperDetailsMkStudyUnitCode_AS[] = new char[400];
  /**
   * Dynamic attribute for: OutGExamPaperDetailsMkStudyUnitCode
   **/
  public DynamicAttr OutGExamPaperDetailsMkStudyUnitCode_AT[] = new DynamicAttr[
    400];
  /**
   * Attribute for: OutGExamPaperDetailsMkStudyUnitCode
   **/
  public String OutGExamPaperDetailsMkStudyUnitCode[] = new String[400];
  /**
   * Attribute missing flag for: OutGExamPaperDetailsNr
   **/
  public char OutGExamPaperDetailsNr_AS[] = new char[400];
  /**
   * Dynamic attribute for: OutGExamPaperDetailsNr
   **/
  public DynamicAttr OutGExamPaperDetailsNr_AT[] = new DynamicAttr[400];
  /**
   * Attribute for: OutGExamPaperDetailsNr
   **/
  public short OutGExamPaperDetailsNr[] = new short[400];
  // Entity View: OUT_G
  //        Type: EXAM_PERIOD_DATE
  /**
   * Attribute missing flag for: OutGExamPeriodDateMkExamPeriodCode
   **/
  public char OutGExamPeriodDateMkExamPeriodCode_AS[] = new char[400];
  /**
   * Dynamic attribute for: OutGExamPeriodDateMkExamPeriodCode
   **/
  public DynamicAttr OutGExamPeriodDateMkExamPeriodCode_AT[] = new DynamicAttr[
    400];
  /**
   * Attribute for: OutGExamPeriodDateMkExamPeriodCode
   **/
  public short OutGExamPeriodDateMkExamPeriodCode[] = new short[400];
  // Entity View: OUT
  //        Type: WS_STUDY_UNIT
  /**
   * Attribute missing flag for: OutWsStudyUnitCode
   **/
  public char OutWsStudyUnitCode_AS;
  /**
   * Dynamic attribute for: OutWsStudyUnitCode
   **/
  public DynamicAttr OutWsStudyUnitCode_AT;
  /**
   * Attribute for: OutWsStudyUnitCode
   **/
  public String OutWsStudyUnitCode;
  /**
   * Attribute missing flag for: OutWsStudyUnitEngLongDescription
   **/
  public char OutWsStudyUnitEngLongDescription_AS;
  /**
   * Dynamic attribute for: OutWsStudyUnitEngLongDescription
   **/
  public DynamicAttr OutWsStudyUnitEngLongDescription_AT;
  /**
   * Attribute for: OutWsStudyUnitEngLongDescription
   **/
  public String OutWsStudyUnitEngLongDescription;
  // Entity View: OUT
  //        Type: EXAM_PAPER_DETAILS
  /**
   * Attribute missing flag for: OutExamPaperDetailsExamYear
   **/
  public char OutExamPaperDetailsExamYear_AS;
  /**
   * Dynamic attribute for: OutExamPaperDetailsExamYear
   **/
  public DynamicAttr OutExamPaperDetailsExamYear_AT;
  /**
   * Attribute for: OutExamPaperDetailsExamYear
   **/
  public short OutExamPaperDetailsExamYear;
  /**
   * Attribute missing flag for: OutExamPaperDetailsMkStudyUnitCode
   **/
  public char OutExamPaperDetailsMkStudyUnitCode_AS;
  /**
   * Dynamic attribute for: OutExamPaperDetailsMkStudyUnitCode
   **/
  public DynamicAttr OutExamPaperDetailsMkStudyUnitCode_AT;
  /**
   * Attribute for: OutExamPaperDetailsMkStudyUnitCode
   **/
  public String OutExamPaperDetailsMkStudyUnitCode;
  /**
   * Attribute missing flag for: OutExamPaperDetailsNr
   **/
  public char OutExamPaperDetailsNr_AS;
  /**
   * Dynamic attribute for: OutExamPaperDetailsNr
   **/
  public DynamicAttr OutExamPaperDetailsNr_AT;
  /**
   * Attribute for: OutExamPaperDetailsNr
   **/
  public short OutExamPaperDetailsNr;
  /**
   * Attribute missing flag for: OutExamPaperDetailsNrOfPages
   **/
  public char OutExamPaperDetailsNrOfPages_AS;
  /**
   * Dynamic attribute for: OutExamPaperDetailsNrOfPages
   **/
  public DynamicAttr OutExamPaperDetailsNrOfPages_AT;
  /**
   * Attribute for: OutExamPaperDetailsNrOfPages
   **/
  public short OutExamPaperDetailsNrOfPages;
  /**
   * Attribute missing flag for: OutExamPaperDetailsDurationHours
   **/
  public char OutExamPaperDetailsDurationHours_AS;
  /**
   * Dynamic attribute for: OutExamPaperDetailsDurationHours
   **/
  public DynamicAttr OutExamPaperDetailsDurationHours_AT;
  /**
   * Attribute for: OutExamPaperDetailsDurationHours
   **/
  public short OutExamPaperDetailsDurationHours;
  /**
   * Attribute missing flag for: OutExamPaperDetailsDurationMinutes
   **/
  public char OutExamPaperDetailsDurationMinutes_AS;
  /**
   * Dynamic attribute for: OutExamPaperDetailsDurationMinutes
   **/
  public DynamicAttr OutExamPaperDetailsDurationMinutes_AT;
  /**
   * Attribute for: OutExamPaperDetailsDurationMinutes
   **/
  public short OutExamPaperDetailsDurationMinutes;
  // Entity View: OUT
  //        Type: EXAM_PERIOD_DATE
  /**
   * Attribute missing flag for: OutExamPeriodDateMkExamPeriodCode
   **/
  public char OutExamPeriodDateMkExamPeriodCode_AS;
  /**
   * Dynamic attribute for: OutExamPeriodDateMkExamPeriodCode
   **/
  public DynamicAttr OutExamPeriodDateMkExamPeriodCode_AT;
  /**
   * Attribute for: OutExamPeriodDateMkExamPeriodCode
   **/
  public short OutExamPeriodDateMkExamPeriodCode;
  /**
   * Attribute missing flag for: OutExamPeriodDateMarkreadingCode
   **/
  public char OutExamPeriodDateMarkreadingCode_AS;
  /**
   * Dynamic attribute for: OutExamPeriodDateMarkreadingCode
   **/
  public DynamicAttr OutExamPeriodDateMarkreadingCode_AT;
  /**
   * Attribute for: OutExamPeriodDateMarkreadingCode
   **/
  public String OutExamPeriodDateMarkreadingCode;
  /**
   * Attribute missing flag for: OutExamPeriodDateScriptMarkTot
   **/
  public char OutExamPeriodDateScriptMarkTot_AS;
  /**
   * Dynamic attribute for: OutExamPeriodDateScriptMarkTot
   **/
  public DynamicAttr OutExamPeriodDateScriptMarkTot_AT;
  /**
   * Attribute for: OutExamPeriodDateScriptMarkTot
   **/
  public short OutExamPeriodDateScriptMarkTot;
  /**
   * Attribute missing flag for: OutExamPeriodDateMarkreadTot
   **/
  public char OutExamPeriodDateMarkreadTot_AS;
  /**
   * Dynamic attribute for: OutExamPeriodDateMarkreadTot
   **/
  public DynamicAttr OutExamPeriodDateMarkreadTot_AT;
  /**
   * Attribute for: OutExamPeriodDateMarkreadTot
   **/
  public short OutExamPeriodDateMarkreadTot;
  /**
   * Attribute missing flag for: OutExamPeriodDatePaperMarkTot
   **/
  public char OutExamPeriodDatePaperMarkTot_AS;
  /**
   * Dynamic attribute for: OutExamPeriodDatePaperMarkTot
   **/
  public DynamicAttr OutExamPeriodDatePaperMarkTot_AT;
  /**
   * Attribute for: OutExamPeriodDatePaperMarkTot
   **/
  public short OutExamPeriodDatePaperMarkTot;
  /**
   * Attribute missing flag for: OutExamPeriodDateDate
   **/
  public char OutExamPeriodDateDate_AS;
  /**
   * Dynamic attribute for: OutExamPeriodDateDate
   **/
  public DynamicAttr OutExamPeriodDateDate_AT;
  /**
   * Attribute for: OutExamPeriodDateDate
   **/
  public int OutExamPeriodDateDate;
  /**
   * Attribute missing flag for: OutExamPeriodDateStartingTime
   **/
  public char OutExamPeriodDateStartingTime_AS;
  /**
   * Dynamic attribute for: OutExamPeriodDateStartingTime
   **/
  public DynamicAttr OutExamPeriodDateStartingTime_AT;
  /**
   * Attribute for: OutExamPeriodDateStartingTime
   **/
  public int OutExamPeriodDateStartingTime;
  // Entity View: OUT
  //        Type: CSF_CLIENT_SERVER_COMMUNICATIONS
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsReturnCode
   **/
  public char OutCsfClientServerCommunicationsReturnCode_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsReturnCode
   **/
  public DynamicAttr OutCsfClientServerCommunicationsReturnCode_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsReturnCode
   **/
  public short OutCsfClientServerCommunicationsReturnCode;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerVersionNumber
   **/
  public char OutCsfClientServerCommunicationsServerVersionNumber_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerVersionNumber
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerVersionNumber_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerVersionNumber
   **/
  public short OutCsfClientServerCommunicationsServerVersionNumber;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerRevisionNumber
   **/
  public char OutCsfClientServerCommunicationsServerRevisionNumber_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsServerRevisionNumber
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerRevisionNumber_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerRevisionNumber
   **/
  public short OutCsfClientServerCommunicationsServerRevisionNumber;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerDevelopmentPhase
   **/
  public char OutCsfClientServerCommunicationsServerDevelopmentPhase_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsServerDevelopmentPhase
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerDevelopmentPhase_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerDevelopmentPhase
   **/
  public String OutCsfClientServerCommunicationsServerDevelopmentPhase;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsAction
   **/
  public char OutCsfClientServerCommunicationsAction_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsAction
   **/
  public DynamicAttr OutCsfClientServerCommunicationsAction_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsAction
   **/
  public String OutCsfClientServerCommunicationsAction;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsClientIsGuiFlag
   **/
  public char OutCsfClientServerCommunicationsClientIsGuiFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsClientIsGuiFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsClientIsGuiFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsClientIsGuiFlag
   **/
  public String OutCsfClientServerCommunicationsClientIsGuiFlag;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsServerDate
   **/
  public char OutCsfClientServerCommunicationsServerDate_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerDate
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerDate_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerDate
   **/
  public int OutCsfClientServerCommunicationsServerDate;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsServerTime
   **/
  public char OutCsfClientServerCommunicationsServerTime_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerTime
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerTime_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerTime
   **/
  public int OutCsfClientServerCommunicationsServerTime;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerTimestamp
   **/
  public char OutCsfClientServerCommunicationsServerTimestamp_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerTimestamp
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerTimestamp_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerTimestamp
   **/
  public String OutCsfClientServerCommunicationsServerTimestamp;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerTransactionCode
   **/
  public char OutCsfClientServerCommunicationsServerTransactionCode_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsServerTransactionCode
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerTransactionCode_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerTransactionCode
   **/
  public String OutCsfClientServerCommunicationsServerTransactionCode;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsServerUserId
   **/
  public char OutCsfClientServerCommunicationsServerUserId_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerUserId
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerUserId_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerUserId
   **/
  public String OutCsfClientServerCommunicationsServerUserId;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerRollbackFlag
   **/
  public char OutCsfClientServerCommunicationsServerRollbackFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerRollbackFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerRollbackFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerRollbackFlag
   **/
  public String OutCsfClientServerCommunicationsServerRollbackFlag;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsActionsPendingFlag
   **/
  public char OutCsfClientServerCommunicationsActionsPendingFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsActionsPendingFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsActionsPendingFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsActionsPendingFlag
   **/
  public String OutCsfClientServerCommunicationsActionsPendingFlag;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsClientVersionNumber
   **/
  public char OutCsfClientServerCommunicationsClientVersionNumber_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsClientVersionNumber
   **/
  public DynamicAttr OutCsfClientServerCommunicationsClientVersionNumber_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsClientVersionNumber
   **/
  public short OutCsfClientServerCommunicationsClientVersionNumber;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsClientRevisionNumber
   **/
  public char OutCsfClientServerCommunicationsClientRevisionNumber_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsClientRevisionNumber
   **/
  public DynamicAttr OutCsfClientServerCommunicationsClientRevisionNumber_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsClientRevisionNumber
   **/
  public short OutCsfClientServerCommunicationsClientRevisionNumber;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsClientDevelopmentPhase
   **/
  public char OutCsfClientServerCommunicationsClientDevelopmentPhase_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsClientDevelopmentPhase
   **/
  public DynamicAttr OutCsfClientServerCommunicationsClientDevelopmentPhase_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsClientDevelopmentPhase
   **/
  public String OutCsfClientServerCommunicationsClientDevelopmentPhase;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsListLinkFlag
   **/
  public char OutCsfClientServerCommunicationsListLinkFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsListLinkFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsListLinkFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsListLinkFlag
   **/
  public String OutCsfClientServerCommunicationsListLinkFlag;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsCancelFlag
   **/
  public char OutCsfClientServerCommunicationsCancelFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsCancelFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsCancelFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsCancelFlag
   **/
  public String OutCsfClientServerCommunicationsCancelFlag;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsMaintLinkFlag
   **/
  public char OutCsfClientServerCommunicationsMaintLinkFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsMaintLinkFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsMaintLinkFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsMaintLinkFlag
   **/
  public String OutCsfClientServerCommunicationsMaintLinkFlag;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsForceDatabaseRead
   **/
  public char OutCsfClientServerCommunicationsForceDatabaseRead_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsForceDatabaseRead
   **/
  public DynamicAttr OutCsfClientServerCommunicationsForceDatabaseRead_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsForceDatabaseRead
   **/
  public String OutCsfClientServerCommunicationsForceDatabaseRead;
  // Entity View: OUT
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: OutCsfStringsString500
   **/
  public char OutCsfStringsString500_AS;
  /**
   * Dynamic attribute for: OutCsfStringsString500
   **/
  public DynamicAttr OutCsfStringsString500_AT;
  /**
   * Attribute for: OutCsfStringsString500
   **/
  public String OutCsfStringsString500;
  // Repeating GV:  OUT_EXAMINERS_GROUP
  //     Repeats: 30 times
  /**
   * Repeating group view count
   **/
  public int OutExaminersGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutExaminersGroup_AC[] = new char[30];
  // Entity View: OUT_G
  //        Type: WS_EXAMINER
  /**
   * Attribute missing flag for: OutGWsExaminerSurname
   **/
  public char OutGWsExaminerSurname_AS[] = new char[30];
  /**
   * Dynamic attribute for: OutGWsExaminerSurname
   **/
  public DynamicAttr OutGWsExaminerSurname_AT[] = new DynamicAttr[30];
  /**
   * Attribute for: OutGWsExaminerSurname
   **/
  public String OutGWsExaminerSurname[] = new String[30];
  /**
   * Attribute missing flag for: OutGWsExaminerInitials
   **/
  public char OutGWsExaminerInitials_AS[] = new char[30];
  /**
   * Dynamic attribute for: OutGWsExaminerInitials
   **/
  public DynamicAttr OutGWsExaminerInitials_AT[] = new DynamicAttr[30];
  /**
   * Attribute for: OutGWsExaminerInitials
   **/
  public String OutGWsExaminerInitials[] = new String[30];
  /**
   * Attribute missing flag for: OutGWsExaminerTitle
   **/
  public char OutGWsExaminerTitle_AS[] = new char[30];
  /**
   * Dynamic attribute for: OutGWsExaminerTitle
   **/
  public DynamicAttr OutGWsExaminerTitle_AT[] = new DynamicAttr[30];
  /**
   * Attribute for: OutGWsExaminerTitle
   **/
  public String OutGWsExaminerTitle[] = new String[30];
  // Entity View: OUT_G_EXAMINER_TYPE
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: OutGExaminerTypeCsfStringsString3
   **/
  public char OutGExaminerTypeCsfStringsString3_AS[] = new char[30];
  /**
   * Dynamic attribute for: OutGExaminerTypeCsfStringsString3
   **/
  public DynamicAttr OutGExaminerTypeCsfStringsString3_AT[] = new DynamicAttr[
    30];
  /**
   * Attribute for: OutGExaminerTypeCsfStringsString3
   **/
  public String OutGExaminerTypeCsfStringsString3[] = new String[30];
  // Entity View: OUT_G
  //        Type: WS_EDUCATIONAL_INSTITUTION
  /**
   * Attribute missing flag for: OutGWsEducationalInstitutionEngName
   **/
  public char OutGWsEducationalInstitutionEngName_AS[] = new char[30];
  /**
   * Dynamic attribute for: OutGWsEducationalInstitutionEngName
   **/
  public DynamicAttr OutGWsEducationalInstitutionEngName_AT[] = new DynamicAttr[
    30];
  /**
   * Attribute for: OutGWsEducationalInstitutionEngName
   **/
  public String OutGWsEducationalInstitutionEngName[] = new String[30];
  // Repeating GV:  OUT_EQUIVALENT_GROUP
  //     Repeats: 20 times
  /**
   * Repeating group view count
   **/
  public int OutEquivalentGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutEquivalentGroup_AC[] = new char[20];
  // Entity View: OUT_G_EQUIVALENT
  //        Type: WS_EXAM_EQUIVALENTS
  /**
   * Attribute missing flag for: 
    OutGEquivalentWsExamEquivalentsWsEquivalentCode
   **/
  public char OutGEquivalentWsExamEquivalentsWsEquivalentCode_AS[] = new char[
    20];
  /**
   * Dynamic attribute for: OutGEquivalentWsExamEquivalentsWsEquivalentCode
   **/
  public DynamicAttr OutGEquivalentWsExamEquivalentsWsEquivalentCode_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutGEquivalentWsExamEquivalentsWsEquivalentCode
   **/
  public String OutGEquivalentWsExamEquivalentsWsEquivalentCode[] = new String[
    20];
  // Entity View: OUT_G
  //        Type: WS_UNIQUE_ASSIGNMENT
  /**
   * Attribute missing flag for: OutGWsUniqueAssignmentUniqueNr
   **/
  public char OutGWsUniqueAssignmentUniqueNr_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutGWsUniqueAssignmentUniqueNr
   **/
  public DynamicAttr OutGWsUniqueAssignmentUniqueNr_AT[] = new DynamicAttr[20];
  /**
   * Attribute for: OutGWsUniqueAssignmentUniqueNr
   **/
  public int OutGWsUniqueAssignmentUniqueNr[] = new int[20];
  // Entity View: OUT_G_EQUIVALENT
  //        Type: EXAM_PERIOD_DATE
  /**
   * Attribute missing flag for: OutGEquivalentExamPeriodDateDate
   **/
  public char OutGEquivalentExamPeriodDateDate_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutGEquivalentExamPeriodDateDate
   **/
  public DynamicAttr OutGEquivalentExamPeriodDateDate_AT[] = new DynamicAttr[20]
    ;
  /**
   * Attribute for: OutGEquivalentExamPeriodDateDate
   **/
  public int OutGEquivalentExamPeriodDateDate[] = new int[20];
  /**
   * Attribute missing flag for: OutGEquivalentExamPeriodDateDurationDays
   **/
  public char OutGEquivalentExamPeriodDateDurationDays_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutGEquivalentExamPeriodDateDurationDays
   **/
  public DynamicAttr OutGEquivalentExamPeriodDateDurationDays_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutGEquivalentExamPeriodDateDurationDays
   **/
  public short OutGEquivalentExamPeriodDateDurationDays[] = new short[20];
  /**
   * Attribute missing flag for: OutGEquivalentExamPeriodDateDurationHours
   **/
  public char OutGEquivalentExamPeriodDateDurationHours_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutGEquivalentExamPeriodDateDurationHours
   **/
  public DynamicAttr OutGEquivalentExamPeriodDateDurationHours_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutGEquivalentExamPeriodDateDurationHours
   **/
  public short OutGEquivalentExamPeriodDateDurationHours[] = new short[20];
  /**
   * Attribute missing flag for: OutGEquivalentExamPeriodDateDurationMinutes
   **/
  public char OutGEquivalentExamPeriodDateDurationMinutes_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutGEquivalentExamPeriodDateDurationMinutes
   **/
  public DynamicAttr OutGEquivalentExamPeriodDateDurationMinutes_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutGEquivalentExamPeriodDateDurationMinutes
   **/
  public short OutGEquivalentExamPeriodDateDurationMinutes[] = new short[20];
  /**
   * Attribute missing flag for: OutGEquivalentExamPeriodDateStartingTime
   **/
  public char OutGEquivalentExamPeriodDateStartingTime_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutGEquivalentExamPeriodDateStartingTime
   **/
  public DynamicAttr OutGEquivalentExamPeriodDateStartingTime_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutGEquivalentExamPeriodDateStartingTime
   **/
  public int OutGEquivalentExamPeriodDateStartingTime[] = new int[20];
  // Repeating GV:  OUT_EXAM_STATIONARY_GROUP
  //     Repeats: 20 times
  /**
   * Repeating group view count
   **/
  public int OutExamStationaryGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutExamStationaryGroup_AC[] = new char[20];
  // Entity View: OUT_G
  //        Type: EXAM_STATIONERY
  /**
   * Attribute missing flag for: OutGExamStationeryItemCode
   **/
  public char OutGExamStationeryItemCode_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutGExamStationeryItemCode
   **/
  public DynamicAttr OutGExamStationeryItemCode_AT[] = new DynamicAttr[20];
  /**
   * Attribute for: OutGExamStationeryItemCode
   **/
  public String OutGExamStationeryItemCode[] = new String[20];
  // Entity View: OUT_G
  //        Type: EXAM_PAPER_STATIONERY_NEEDS
  /**
   * Attribute missing flag for: OutGExamPaperStationeryNeedsAveragePerStudent
   **/
  public char OutGExamPaperStationeryNeedsAveragePerStudent_AS[] = new char[20]
    ;
  /**
   * Dynamic attribute for: OutGExamPaperStationeryNeedsAveragePerStudent
   **/
  public DynamicAttr OutGExamPaperStationeryNeedsAveragePerStudent_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutGExamPaperStationeryNeedsAveragePerStudent
   **/
  public double OutGExamPaperStationeryNeedsAveragePerStudent[] = new double[20]
    ;
  // Repeating GV:  OUT_EXAM_INSTRUCTION_GROUP
  //     Repeats: 25 times
  /**
   * Repeating group view count
   **/
  public int OutExamInstructionGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutExamInstructionGroup_AC[] = new char[25];
  // Entity View: OUT_G
  //        Type: EXAM_DATE_INSTRUCTION
  /**
   * Attribute missing flag for: OutGExamDateInstructionMkDocumentParagraphCode
   **/
  public char OutGExamDateInstructionMkDocumentParagraphCode_AS[] = new char[25]
    ;
  /**
   * Dynamic attribute for: OutGExamDateInstructionMkDocumentParagraphCode
   **/
  public DynamicAttr OutGExamDateInstructionMkDocumentParagraphCode_AT[] = new 
    DynamicAttr[25];
  /**
   * Attribute for: OutGExamDateInstructionMkDocumentParagraphCode
   **/
  public short OutGExamDateInstructionMkDocumentParagraphCode[] = new short[25]
    ;
  /**
   * Attribute missing flag for: OutGExamDateInstructionMkWidthType
   **/
  public char OutGExamDateInstructionMkWidthType_AS[] = new char[25];
  /**
   * Dynamic attribute for: OutGExamDateInstructionMkWidthType
   **/
  public DynamicAttr OutGExamDateInstructionMkWidthType_AT[] = new DynamicAttr[
    25];
  /**
   * Attribute for: OutGExamDateInstructionMkWidthType
   **/
  public String OutGExamDateInstructionMkWidthType[] = new String[25];
  /**
   * Attribute missing flag for: OutGExamDateInstructionMkContents
   **/
  public char OutGExamDateInstructionMkContents_AS[] = new char[25];
  /**
   * Dynamic attribute for: OutGExamDateInstructionMkContents
   **/
  public DynamicAttr OutGExamDateInstructionMkContents_AT[] = new DynamicAttr[
    25];
  /**
   * Attribute for: OutGExamDateInstructionMkContents
   **/
  public String OutGExamDateInstructionMkContents[] = new String[25];
  // Repeating GV:  OUT_PAPER_LANGUAGE_GROUP
  //     Repeats: 10 times
  /**
   * Repeating group view count
   **/
  public int OutPaperLanguageGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutPaperLanguageGroup_AC[] = new char[10];
  // Entity View: OUT_G
  //        Type: EXAM_PAPER_LANGUAGE
  /**
   * Attribute missing flag for: OutGExamPaperLanguageLanguageGc40
   **/
  public char OutGExamPaperLanguageLanguageGc40_AS[] = new char[10];
  /**
   * Dynamic attribute for: OutGExamPaperLanguageLanguageGc40
   **/
  public DynamicAttr OutGExamPaperLanguageLanguageGc40_AT[] = new DynamicAttr[
    10];
  /**
   * Attribute for: OutGExamPaperLanguageLanguageGc40
   **/
  public String OutGExamPaperLanguageLanguageGc40[] = new String[10];
  // Repeating GV:  OUT_ADDITIONAL_INSTR_GROUP
  //     Repeats: 20 times
  /**
   * Repeating group view count
   **/
  public int OutAdditionalInstrGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutAdditionalInstrGroup_AC[] = new char[20];
  // Entity View: OUT_G
  //        Type: EXAM_PAPER_ADD_INSTRUCTIONS
  /**
   * Attribute missing flag for: OutGExamPaperAddInstructionsInstructionNr
   **/
  public char OutGExamPaperAddInstructionsInstructionNr_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutGExamPaperAddInstructionsInstructionNr
   **/
  public DynamicAttr OutGExamPaperAddInstructionsInstructionNr_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutGExamPaperAddInstructionsInstructionNr
   **/
  public short OutGExamPaperAddInstructionsInstructionNr[] = new short[20];
  /**
   * Attribute missing flag for: OutGExamPaperAddInstructionsInstruction
   **/
  public char OutGExamPaperAddInstructionsInstruction_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutGExamPaperAddInstructionsInstruction
   **/
  public DynamicAttr OutGExamPaperAddInstructionsInstruction_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutGExamPaperAddInstructionsInstruction
   **/
  public String OutGExamPaperAddInstructionsInstruction[] = new String[20];
  // Entity View: OUT
  //        Type: EXAM_PAPER_LOG
  /**
   * Attribute missing flag for: OutExamPaperLogActionGc39
   **/
  public char OutExamPaperLogActionGc39_AS;
  /**
   * Dynamic attribute for: OutExamPaperLogActionGc39
   **/
  public DynamicAttr OutExamPaperLogActionGc39_AT;
  /**
   * Attribute for: OutExamPaperLogActionGc39
   **/
  public String OutExamPaperLogActionGc39;
  /**
   * Attribute missing flag for: OutExamPaperLogUpdatedBy
   **/
  public char OutExamPaperLogUpdatedBy_AS;
  /**
   * Dynamic attribute for: OutExamPaperLogUpdatedBy
   **/
  public DynamicAttr OutExamPaperLogUpdatedBy_AT;
  /**
   * Attribute for: OutExamPaperLogUpdatedBy
   **/
  public String OutExamPaperLogUpdatedBy;
  /**
   * Attribute missing flag for: OutExamPaperLogUpdatedOn
   **/
  public char OutExamPaperLogUpdatedOn_AS;
  /**
   * Dynamic attribute for: OutExamPaperLogUpdatedOn
   **/
  public DynamicAttr OutExamPaperLogUpdatedOn_AT;
  /**
   * Attribute for: OutExamPaperLogUpdatedOn
   **/
  public String OutExamPaperLogUpdatedOn;
  // Entity View: OUT_COVER_DOCKET_EXISTS_FLAG
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: OutCoverDocketExistsFlagCsfStringsString1
   **/
  public char OutCoverDocketExistsFlagCsfStringsString1_AS;
  /**
   * Dynamic attribute for: OutCoverDocketExistsFlagCsfStringsString1
   **/
  public DynamicAttr OutCoverDocketExistsFlagCsfStringsString1_AT;
  /**
   * Attribute for: OutCoverDocketExistsFlagCsfStringsString1
   **/
  public String OutCoverDocketExistsFlagCsfStringsString1;
  // Entity View: OUT
  //        Type: EXAM_PAPER_COVER_DOCKET
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketContactPersNr
   **/
  public char OutExamPaperCoverDocketContactPersNr_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketContactPersNr
   **/
  public DynamicAttr OutExamPaperCoverDocketContactPersNr_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketContactPersNr
   **/
  public int OutExamPaperCoverDocketContactPersNr;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketBookRequired
   **/
  public char OutExamPaperCoverDocketBookRequired_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketBookRequired
   **/
  public DynamicAttr OutExamPaperCoverDocketBookRequired_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketBookRequired
   **/
  public String OutExamPaperCoverDocketBookRequired;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketProofReadRequest
   **/
  public char OutExamPaperCoverDocketProofReadRequest_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketProofReadRequest
   **/
  public DynamicAttr OutExamPaperCoverDocketProofReadRequest_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketProofReadRequest
   **/
  public String OutExamPaperCoverDocketProofReadRequest;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketStatusGc41
   **/
  public char OutExamPaperCoverDocketStatusGc41_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketStatusGc41
   **/
  public DynamicAttr OutExamPaperCoverDocketStatusGc41_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketStatusGc41
   **/
  public String OutExamPaperCoverDocketStatusGc41;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketTotalRackPages
   **/
  public char OutExamPaperCoverDocketTotalRackPages_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketTotalRackPages
   **/
  public DynamicAttr OutExamPaperCoverDocketTotalRackPages_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketTotalRackPages
   **/
  public short OutExamPaperCoverDocketTotalRackPages;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketTotalPages
   **/
  public char OutExamPaperCoverDocketTotalPages_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketTotalPages
   **/
  public DynamicAttr OutExamPaperCoverDocketTotalPages_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketTotalPages
   **/
  public short OutExamPaperCoverDocketTotalPages;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketAnnexurePages
   **/
  public char OutExamPaperCoverDocketAnnexurePages_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketAnnexurePages
   **/
  public DynamicAttr OutExamPaperCoverDocketAnnexurePages_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketAnnexurePages
   **/
  public String OutExamPaperCoverDocketAnnexurePages;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketMemorandumIncl
   **/
  public char OutExamPaperCoverDocketMemorandumIncl_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketMemorandumIncl
   **/
  public DynamicAttr OutExamPaperCoverDocketMemorandumIncl_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketMemorandumIncl
   **/
  public String OutExamPaperCoverDocketMemorandumIncl;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketDeclarationFlag
   **/
  public char OutExamPaperCoverDocketDeclarationFlag_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketDeclarationFlag
   **/
  public DynamicAttr OutExamPaperCoverDocketDeclarationFlag_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketDeclarationFlag
   **/
  public String OutExamPaperCoverDocketDeclarationFlag;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketFillInPaperGc50
   **/
  public char OutExamPaperCoverDocketFillInPaperGc50_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketFillInPaperGc50
   **/
  public DynamicAttr OutExamPaperCoverDocketFillInPaperGc50_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketFillInPaperGc50
   **/
  public String OutExamPaperCoverDocketFillInPaperGc50;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketOpenBookGc50
   **/
  public char OutExamPaperCoverDocketOpenBookGc50_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketOpenBookGc50
   **/
  public DynamicAttr OutExamPaperCoverDocketOpenBookGc50_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketOpenBookGc50
   **/
  public String OutExamPaperCoverDocketOpenBookGc50;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketKeepPaperFlag
   **/
  public char OutExamPaperCoverDocketKeepPaperFlag_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketKeepPaperFlag
   **/
  public DynamicAttr OutExamPaperCoverDocketKeepPaperFlag_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketKeepPaperFlag
   **/
  public String OutExamPaperCoverDocketKeepPaperFlag;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketCalcPermitFlag
   **/
  public char OutExamPaperCoverDocketCalcPermitFlag_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketCalcPermitFlag
   **/
  public DynamicAttr OutExamPaperCoverDocketCalcPermitFlag_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketCalcPermitFlag
   **/
  public String OutExamPaperCoverDocketCalcPermitFlag;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketExaminerPrtGc107
   **/
  public char OutExamPaperCoverDocketExaminerPrtGc107_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketExaminerPrtGc107
   **/
  public DynamicAttr OutExamPaperCoverDocketExaminerPrtGc107_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketExaminerPrtGc107
   **/
  public String OutExamPaperCoverDocketExaminerPrtGc107;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketMcqInstrFlag
   **/
  public char OutExamPaperCoverDocketMcqInstrFlag_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketMcqInstrFlag
   **/
  public DynamicAttr OutExamPaperCoverDocketMcqInstrFlag_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketMcqInstrFlag
   **/
  public String OutExamPaperCoverDocketMcqInstrFlag;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketAttendRegFlag
   **/
  public char OutExamPaperCoverDocketAttendRegFlag_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketAttendRegFlag
   **/
  public DynamicAttr OutExamPaperCoverDocketAttendRegFlag_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketAttendRegFlag
   **/
  public String OutExamPaperCoverDocketAttendRegFlag;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketPaperColour
   **/
  public char OutExamPaperCoverDocketPaperColour_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketPaperColour
   **/
  public DynamicAttr OutExamPaperCoverDocketPaperColour_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketPaperColour
   **/
  public String OutExamPaperCoverDocketPaperColour;
  /**
   * Attribute missing flag for: OutExamPaperCoverDocketNrDocsSubmitted
   **/
  public char OutExamPaperCoverDocketNrDocsSubmitted_AS;
  /**
   * Dynamic attribute for: OutExamPaperCoverDocketNrDocsSubmitted
   **/
  public DynamicAttr OutExamPaperCoverDocketNrDocsSubmitted_AT;
  /**
   * Attribute for: OutExamPaperCoverDocketNrDocsSubmitted
   **/
  public short OutExamPaperCoverDocketNrDocsSubmitted;
  // Entity View: OUT
  //        Type: WS_STAFF
  /**
   * Attribute missing flag for: OutWsStaffSurname
   **/
  public char OutWsStaffSurname_AS;
  /**
   * Dynamic attribute for: OutWsStaffSurname
   **/
  public DynamicAttr OutWsStaffSurname_AT;
  /**
   * Attribute for: OutWsStaffSurname
   **/
  public String OutWsStaffSurname;
  /**
   * Attribute missing flag for: OutWsStaffInitials
   **/
  public char OutWsStaffInitials_AS;
  /**
   * Dynamic attribute for: OutWsStaffInitials
   **/
  public DynamicAttr OutWsStaffInitials_AT;
  /**
   * Attribute for: OutWsStaffInitials
   **/
  public String OutWsStaffInitials;
  /**
   * Attribute missing flag for: OutWsStaffTitle
   **/
  public char OutWsStaffTitle_AS;
  /**
   * Dynamic attribute for: OutWsStaffTitle
   **/
  public DynamicAttr OutWsStaffTitle_AT;
  /**
   * Attribute for: OutWsStaffTitle
   **/
  public String OutWsStaffTitle;
  /**
   * Attribute missing flag for: OutWsStaffEmailAddress
   **/
  public char OutWsStaffEmailAddress_AS;
  /**
   * Dynamic attribute for: OutWsStaffEmailAddress
   **/
  public DynamicAttr OutWsStaffEmailAddress_AT;
  /**
   * Attribute for: OutWsStaffEmailAddress
   **/
  public String OutWsStaffEmailAddress;
  /**
   * Attribute missing flag for: OutWsStaffContactTelno
   **/
  public char OutWsStaffContactTelno_AS;
  /**
   * Dynamic attribute for: OutWsStaffContactTelno
   **/
  public DynamicAttr OutWsStaffContactTelno_AT;
  /**
   * Attribute for: OutWsStaffContactTelno
   **/
  public String OutWsStaffContactTelno;
  // Entity View: OUT
  //        Type: WS_ADDRESS_V2
  /**
   * Attribute missing flag for: OutWsAddressV2HomeNumber
   **/
  public char OutWsAddressV2HomeNumber_AS;
  /**
   * Dynamic attribute for: OutWsAddressV2HomeNumber
   **/
  public DynamicAttr OutWsAddressV2HomeNumber_AT;
  /**
   * Attribute for: OutWsAddressV2HomeNumber
   **/
  public String OutWsAddressV2HomeNumber;
  /**
   * Attribute missing flag for: OutWsAddressV2WorkNumber
   **/
  public char OutWsAddressV2WorkNumber_AS;
  /**
   * Dynamic attribute for: OutWsAddressV2WorkNumber
   **/
  public DynamicAttr OutWsAddressV2WorkNumber_AT;
  /**
   * Attribute for: OutWsAddressV2WorkNumber
   **/
  public String OutWsAddressV2WorkNumber;
  /**
   * Attribute missing flag for: OutWsAddressV2CellNumber
   **/
  public char OutWsAddressV2CellNumber_AS;
  /**
   * Dynamic attribute for: OutWsAddressV2CellNumber
   **/
  public DynamicAttr OutWsAddressV2CellNumber_AT;
  /**
   * Attribute for: OutWsAddressV2CellNumber
   **/
  public String OutWsAddressV2CellNumber;
  /**
   * Default Constructor
   **/
  
  public EXCDQ01S_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public EXCDQ01S_OA(EXCDQ01S_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static EXCDQ01S_OA getInstance()
  {
    return new EXCDQ01S_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new EXCDQ01S_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    OutWsDepartmentCode_AT = null;
    OutWsDepartmentCode_AS = ' ';
    OutWsDepartmentCode = 0;
    OutWsDepartmentCollegeCode_AT = null;
    OutWsDepartmentCollegeCode_AS = ' ';
    OutWsDepartmentCollegeCode = 0;
    OutWsDepartmentSchoolCode_AT = null;
    OutWsDepartmentSchoolCode_AS = ' ';
    OutWsDepartmentSchoolCode = 0;
    OutExamGroup_MA = 0;
    for(int a = 0; a < 400; a++)
    {
      OutExamGroup_AC[a] = ' ';
      OutGExamPaperDetailsExamYear_AT[a] = null;
      OutGExamPaperDetailsExamYear_AS[a] = ' ';
      OutGExamPaperDetailsExamYear[a] = 0;
      OutGExamPaperDetailsMkStudyUnitCode_AT[a] = null;
      OutGExamPaperDetailsMkStudyUnitCode_AS[a] = ' ';
      OutGExamPaperDetailsMkStudyUnitCode[a] = "       ";
      OutGExamPaperDetailsNr_AT[a] = null;
      OutGExamPaperDetailsNr_AS[a] = ' ';
      OutGExamPaperDetailsNr[a] = 0;
      OutGExamPeriodDateMkExamPeriodCode_AT[a] = null;
      OutGExamPeriodDateMkExamPeriodCode_AS[a] = ' ';
      OutGExamPeriodDateMkExamPeriodCode[a] = 0;
    }
    OutWsStudyUnitCode_AT = null;
    OutWsStudyUnitCode_AS = ' ';
    OutWsStudyUnitCode = "       ";
    OutWsStudyUnitEngLongDescription_AT = null;
    OutWsStudyUnitEngLongDescription_AS = ' ';
    OutWsStudyUnitEngLongDescription = 
"                                                                                                                                                                        "
      ;
    OutExamPaperDetailsExamYear_AT = null;
    OutExamPaperDetailsExamYear_AS = ' ';
    OutExamPaperDetailsExamYear = 0;
    OutExamPaperDetailsMkStudyUnitCode_AT = null;
    OutExamPaperDetailsMkStudyUnitCode_AS = ' ';
    OutExamPaperDetailsMkStudyUnitCode = "       ";
    OutExamPaperDetailsNr_AT = null;
    OutExamPaperDetailsNr_AS = ' ';
    OutExamPaperDetailsNr = 0;
    OutExamPaperDetailsNrOfPages_AT = null;
    OutExamPaperDetailsNrOfPages_AS = ' ';
    OutExamPaperDetailsNrOfPages = 0;
    OutExamPaperDetailsDurationHours_AT = null;
    OutExamPaperDetailsDurationHours_AS = ' ';
    OutExamPaperDetailsDurationHours = 0;
    OutExamPaperDetailsDurationMinutes_AT = null;
    OutExamPaperDetailsDurationMinutes_AS = ' ';
    OutExamPaperDetailsDurationMinutes = 0;
    OutExamPeriodDateMkExamPeriodCode_AT = null;
    OutExamPeriodDateMkExamPeriodCode_AS = ' ';
    OutExamPeriodDateMkExamPeriodCode = 0;
    OutExamPeriodDateMarkreadingCode_AT = null;
    OutExamPeriodDateMarkreadingCode_AS = ' ';
    OutExamPeriodDateMarkreadingCode = "";
    OutExamPeriodDateScriptMarkTot_AT = null;
    OutExamPeriodDateScriptMarkTot_AS = ' ';
    OutExamPeriodDateScriptMarkTot = 0;
    OutExamPeriodDateMarkreadTot_AT = null;
    OutExamPeriodDateMarkreadTot_AS = ' ';
    OutExamPeriodDateMarkreadTot = 0;
    OutExamPeriodDatePaperMarkTot_AT = null;
    OutExamPeriodDatePaperMarkTot_AS = ' ';
    OutExamPeriodDatePaperMarkTot = 0;
    OutExamPeriodDateDate_AT = null;
    OutExamPeriodDateDate_AS = ' ';
    OutExamPeriodDateDate = 00000000;
    OutExamPeriodDateStartingTime_AT = null;
    OutExamPeriodDateStartingTime_AS = ' ';
    OutExamPeriodDateStartingTime = 00000000;
    OutCsfClientServerCommunicationsReturnCode_AT = null;
    OutCsfClientServerCommunicationsReturnCode_AS = ' ';
    OutCsfClientServerCommunicationsReturnCode = 0;
    OutCsfClientServerCommunicationsServerVersionNumber_AT = null;
    OutCsfClientServerCommunicationsServerVersionNumber_AS = ' ';
    OutCsfClientServerCommunicationsServerVersionNumber = 0;
    OutCsfClientServerCommunicationsServerRevisionNumber_AT = null;
    OutCsfClientServerCommunicationsServerRevisionNumber_AS = ' ';
    OutCsfClientServerCommunicationsServerRevisionNumber = 0;
    OutCsfClientServerCommunicationsServerDevelopmentPhase_AT = null;
    OutCsfClientServerCommunicationsServerDevelopmentPhase_AS = ' ';
    OutCsfClientServerCommunicationsServerDevelopmentPhase = " ";
    OutCsfClientServerCommunicationsAction_AT = null;
    OutCsfClientServerCommunicationsAction_AS = ' ';
    OutCsfClientServerCommunicationsAction = "  ";
    OutCsfClientServerCommunicationsClientIsGuiFlag_AT = null;
    OutCsfClientServerCommunicationsClientIsGuiFlag_AS = ' ';
    OutCsfClientServerCommunicationsClientIsGuiFlag = " ";
    OutCsfClientServerCommunicationsServerDate_AT = null;
    OutCsfClientServerCommunicationsServerDate_AS = ' ';
    OutCsfClientServerCommunicationsServerDate = 00000000;
    OutCsfClientServerCommunicationsServerTime_AT = null;
    OutCsfClientServerCommunicationsServerTime_AS = ' ';
    OutCsfClientServerCommunicationsServerTime = 00000000;
    OutCsfClientServerCommunicationsServerTimestamp_AT = null;
    OutCsfClientServerCommunicationsServerTimestamp_AS = ' ';
    OutCsfClientServerCommunicationsServerTimestamp = "00000000000000000000";
    OutCsfClientServerCommunicationsServerTransactionCode_AT = null;
    OutCsfClientServerCommunicationsServerTransactionCode_AS = ' ';
    OutCsfClientServerCommunicationsServerTransactionCode = "        ";
    OutCsfClientServerCommunicationsServerUserId_AT = null;
    OutCsfClientServerCommunicationsServerUserId_AS = ' ';
    OutCsfClientServerCommunicationsServerUserId = "        ";
    OutCsfClientServerCommunicationsServerRollbackFlag_AT = null;
    OutCsfClientServerCommunicationsServerRollbackFlag_AS = ' ';
    OutCsfClientServerCommunicationsServerRollbackFlag = " ";
    OutCsfClientServerCommunicationsActionsPendingFlag_AT = null;
    OutCsfClientServerCommunicationsActionsPendingFlag_AS = ' ';
    OutCsfClientServerCommunicationsActionsPendingFlag = " ";
    OutCsfClientServerCommunicationsClientVersionNumber_AT = null;
    OutCsfClientServerCommunicationsClientVersionNumber_AS = ' ';
    OutCsfClientServerCommunicationsClientVersionNumber = 0;
    OutCsfClientServerCommunicationsClientRevisionNumber_AT = null;
    OutCsfClientServerCommunicationsClientRevisionNumber_AS = ' ';
    OutCsfClientServerCommunicationsClientRevisionNumber = 0;
    OutCsfClientServerCommunicationsClientDevelopmentPhase_AT = null;
    OutCsfClientServerCommunicationsClientDevelopmentPhase_AS = ' ';
    OutCsfClientServerCommunicationsClientDevelopmentPhase = " ";
    OutCsfClientServerCommunicationsListLinkFlag_AT = null;
    OutCsfClientServerCommunicationsListLinkFlag_AS = ' ';
    OutCsfClientServerCommunicationsListLinkFlag = " ";
    OutCsfClientServerCommunicationsCancelFlag_AT = null;
    OutCsfClientServerCommunicationsCancelFlag_AS = ' ';
    OutCsfClientServerCommunicationsCancelFlag = " ";
    OutCsfClientServerCommunicationsMaintLinkFlag_AT = null;
    OutCsfClientServerCommunicationsMaintLinkFlag_AS = ' ';
    OutCsfClientServerCommunicationsMaintLinkFlag = " ";
    OutCsfClientServerCommunicationsForceDatabaseRead_AT = null;
    OutCsfClientServerCommunicationsForceDatabaseRead_AS = ' ';
    OutCsfClientServerCommunicationsForceDatabaseRead = " ";
    OutCsfStringsString500_AT = null;
    OutCsfStringsString500_AS = ' ';
    OutCsfStringsString500 = "";
    OutExaminersGroup_MA = 0;
    for(int a = 0; a < 30; a++)
    {
      OutExaminersGroup_AC[a] = ' ';
      OutGWsExaminerSurname_AT[a] = null;
      OutGWsExaminerSurname_AS[a] = ' ';
      OutGWsExaminerSurname[a] = "                            ";
      OutGWsExaminerInitials_AT[a] = null;
      OutGWsExaminerInitials_AS[a] = ' ';
      OutGWsExaminerInitials[a] = "          ";
      OutGWsExaminerTitle_AT[a] = null;
      OutGWsExaminerTitle_AS[a] = ' ';
      OutGWsExaminerTitle[a] = "          ";
      OutGExaminerTypeCsfStringsString3_AT[a] = null;
      OutGExaminerTypeCsfStringsString3_AS[a] = ' ';
      OutGExaminerTypeCsfStringsString3[a] = "   ";
      OutGWsEducationalInstitutionEngName_AT[a] = null;
      OutGWsEducationalInstitutionEngName_AS[a] = ' ';
      OutGWsEducationalInstitutionEngName[a] = "                            ";
    }
    OutEquivalentGroup_MA = 0;
    for(int a = 0; a < 20; a++)
    {
      OutEquivalentGroup_AC[a] = ' ';
      OutGEquivalentWsExamEquivalentsWsEquivalentCode_AT[a] = null;
      OutGEquivalentWsExamEquivalentsWsEquivalentCode_AS[a] = ' ';
      OutGEquivalentWsExamEquivalentsWsEquivalentCode[a] = "       ";
      OutGWsUniqueAssignmentUniqueNr_AT[a] = null;
      OutGWsUniqueAssignmentUniqueNr_AS[a] = ' ';
      OutGWsUniqueAssignmentUniqueNr[a] = 0;
      OutGEquivalentExamPeriodDateDate_AT[a] = null;
      OutGEquivalentExamPeriodDateDate_AS[a] = ' ';
      OutGEquivalentExamPeriodDateDate[a] = 00000000;
      OutGEquivalentExamPeriodDateDurationDays_AT[a] = null;
      OutGEquivalentExamPeriodDateDurationDays_AS[a] = ' ';
      OutGEquivalentExamPeriodDateDurationDays[a] = 0;
      OutGEquivalentExamPeriodDateDurationHours_AT[a] = null;
      OutGEquivalentExamPeriodDateDurationHours_AS[a] = ' ';
      OutGEquivalentExamPeriodDateDurationHours[a] = 0;
      OutGEquivalentExamPeriodDateDurationMinutes_AT[a] = null;
      OutGEquivalentExamPeriodDateDurationMinutes_AS[a] = ' ';
      OutGEquivalentExamPeriodDateDurationMinutes[a] = 0;
      OutGEquivalentExamPeriodDateStartingTime_AT[a] = null;
      OutGEquivalentExamPeriodDateStartingTime_AS[a] = ' ';
      OutGEquivalentExamPeriodDateStartingTime[a] = 00000000;
    }
    OutExamStationaryGroup_MA = 0;
    for(int a = 0; a < 20; a++)
    {
      OutExamStationaryGroup_AC[a] = ' ';
      OutGExamStationeryItemCode_AT[a] = null;
      OutGExamStationeryItemCode_AS[a] = ' ';
      OutGExamStationeryItemCode[a] = "  ";
      OutGExamPaperStationeryNeedsAveragePerStudent_AT[a] = null;
      OutGExamPaperStationeryNeedsAveragePerStudent_AS[a] = ' ';
      OutGExamPaperStationeryNeedsAveragePerStudent[a] = 0.0;
    }
    OutExamInstructionGroup_MA = 0;
    for(int a = 0; a < 25; a++)
    {
      OutExamInstructionGroup_AC[a] = ' ';
      OutGExamDateInstructionMkDocumentParagraphCode_AT[a] = null;
      OutGExamDateInstructionMkDocumentParagraphCode_AS[a] = ' ';
      OutGExamDateInstructionMkDocumentParagraphCode[a] = 0;
      OutGExamDateInstructionMkWidthType_AT[a] = null;
      OutGExamDateInstructionMkWidthType_AS[a] = ' ';
      OutGExamDateInstructionMkWidthType[a] = " ";
      OutGExamDateInstructionMkContents_AT[a] = null;
      OutGExamDateInstructionMkContents_AS[a] = ' ';
      OutGExamDateInstructionMkContents[a] = "  ";
    }
    OutPaperLanguageGroup_MA = 0;
    for(int a = 0; a < 10; a++)
    {
      OutPaperLanguageGroup_AC[a] = ' ';
      OutGExamPaperLanguageLanguageGc40_AT[a] = null;
      OutGExamPaperLanguageLanguageGc40_AS[a] = ' ';
      OutGExamPaperLanguageLanguageGc40[a] = "";
    }
    OutAdditionalInstrGroup_MA = 0;
    for(int a = 0; a < 20; a++)
    {
      OutAdditionalInstrGroup_AC[a] = ' ';
      OutGExamPaperAddInstructionsInstructionNr_AT[a] = null;
      OutGExamPaperAddInstructionsInstructionNr_AS[a] = ' ';
      OutGExamPaperAddInstructionsInstructionNr[a] = 0;
      OutGExamPaperAddInstructionsInstruction_AT[a] = null;
      OutGExamPaperAddInstructionsInstruction_AS[a] = ' ';
      OutGExamPaperAddInstructionsInstruction[a] = "";
    }
    OutExamPaperLogActionGc39_AT = null;
    OutExamPaperLogActionGc39_AS = ' ';
    OutExamPaperLogActionGc39 = "";
    OutExamPaperLogUpdatedBy_AT = null;
    OutExamPaperLogUpdatedBy_AS = ' ';
    OutExamPaperLogUpdatedBy = "";
    OutExamPaperLogUpdatedOn_AT = null;
    OutExamPaperLogUpdatedOn_AS = ' ';
    OutExamPaperLogUpdatedOn = "00000000000000000000";
    OutCoverDocketExistsFlagCsfStringsString1_AT = null;
    OutCoverDocketExistsFlagCsfStringsString1_AS = ' ';
    OutCoverDocketExistsFlagCsfStringsString1 = " ";
    OutExamPaperCoverDocketContactPersNr_AT = null;
    OutExamPaperCoverDocketContactPersNr_AS = ' ';
    OutExamPaperCoverDocketContactPersNr = 0;
    OutExamPaperCoverDocketBookRequired_AT = null;
    OutExamPaperCoverDocketBookRequired_AS = ' ';
    OutExamPaperCoverDocketBookRequired = "";
    OutExamPaperCoverDocketProofReadRequest_AT = null;
    OutExamPaperCoverDocketProofReadRequest_AS = ' ';
    OutExamPaperCoverDocketProofReadRequest = "";
    OutExamPaperCoverDocketStatusGc41_AT = null;
    OutExamPaperCoverDocketStatusGc41_AS = ' ';
    OutExamPaperCoverDocketStatusGc41 = "";
    OutExamPaperCoverDocketTotalRackPages_AT = null;
    OutExamPaperCoverDocketTotalRackPages_AS = ' ';
    OutExamPaperCoverDocketTotalRackPages = 0;
    OutExamPaperCoverDocketTotalPages_AT = null;
    OutExamPaperCoverDocketTotalPages_AS = ' ';
    OutExamPaperCoverDocketTotalPages = 0;
    OutExamPaperCoverDocketAnnexurePages_AT = null;
    OutExamPaperCoverDocketAnnexurePages_AS = ' ';
    OutExamPaperCoverDocketAnnexurePages = "";
    OutExamPaperCoverDocketMemorandumIncl_AT = null;
    OutExamPaperCoverDocketMemorandumIncl_AS = ' ';
    OutExamPaperCoverDocketMemorandumIncl = "";
    OutExamPaperCoverDocketDeclarationFlag_AT = null;
    OutExamPaperCoverDocketDeclarationFlag_AS = ' ';
    OutExamPaperCoverDocketDeclarationFlag = "";
    OutExamPaperCoverDocketFillInPaperGc50_AT = null;
    OutExamPaperCoverDocketFillInPaperGc50_AS = ' ';
    OutExamPaperCoverDocketFillInPaperGc50 = "";
    OutExamPaperCoverDocketOpenBookGc50_AT = null;
    OutExamPaperCoverDocketOpenBookGc50_AS = ' ';
    OutExamPaperCoverDocketOpenBookGc50 = "";
    OutExamPaperCoverDocketKeepPaperFlag_AT = null;
    OutExamPaperCoverDocketKeepPaperFlag_AS = ' ';
    OutExamPaperCoverDocketKeepPaperFlag = "";
    OutExamPaperCoverDocketCalcPermitFlag_AT = null;
    OutExamPaperCoverDocketCalcPermitFlag_AS = ' ';
    OutExamPaperCoverDocketCalcPermitFlag = "";
    OutExamPaperCoverDocketExaminerPrtGc107_AT = null;
    OutExamPaperCoverDocketExaminerPrtGc107_AS = ' ';
    OutExamPaperCoverDocketExaminerPrtGc107 = "          ";
    OutExamPaperCoverDocketMcqInstrFlag_AT = null;
    OutExamPaperCoverDocketMcqInstrFlag_AS = ' ';
    OutExamPaperCoverDocketMcqInstrFlag = " ";
    OutExamPaperCoverDocketAttendRegFlag_AT = null;
    OutExamPaperCoverDocketAttendRegFlag_AS = ' ';
    OutExamPaperCoverDocketAttendRegFlag = " ";
    OutExamPaperCoverDocketPaperColour_AT = null;
    OutExamPaperCoverDocketPaperColour_AS = ' ';
    OutExamPaperCoverDocketPaperColour = "          ";
    OutExamPaperCoverDocketNrDocsSubmitted_AT = null;
    OutExamPaperCoverDocketNrDocsSubmitted_AS = ' ';
    OutExamPaperCoverDocketNrDocsSubmitted = 0;
    OutWsStaffSurname_AT = null;
    OutWsStaffSurname_AS = ' ';
    OutWsStaffSurname = "                            ";
    OutWsStaffInitials_AT = null;
    OutWsStaffInitials_AS = ' ';
    OutWsStaffInitials = "          ";
    OutWsStaffTitle_AT = null;
    OutWsStaffTitle_AS = ' ';
    OutWsStaffTitle = "          ";
    OutWsStaffEmailAddress_AT = null;
    OutWsStaffEmailAddress_AS = ' ';
    OutWsStaffEmailAddress = 
      "                                                            ";
    OutWsStaffContactTelno_AT = null;
    OutWsStaffContactTelno_AS = ' ';
    OutWsStaffContactTelno = "                            ";
    OutWsAddressV2HomeNumber_AT = null;
    OutWsAddressV2HomeNumber_AS = ' ';
    OutWsAddressV2HomeNumber = "                            ";
    OutWsAddressV2WorkNumber_AT = null;
    OutWsAddressV2WorkNumber_AS = ' ';
    OutWsAddressV2WorkNumber = "                            ";
    OutWsAddressV2CellNumber_AT = null;
    OutWsAddressV2CellNumber_AS = ' ';
    OutWsAddressV2CellNumber = "                    ";
  }
  /**
   * Gets the VDF array for the instance, initialized.
   **/
  
  public static VDF getViewDefinition()
  {
    if ( localVdf == null )
    {
      VDFEntry [] vdfEntries = {
        new VDFEntry((int)1, "", "OutWsDepartment", "WsDepartment", "Code", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)2, "", "OutWsDepartment", "WsDepartment", 
          "CollegeCode", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)3, "", "OutWsDepartment", "WsDepartment", "SchoolCode"
          , VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)4, "OutExamGroup", "", "", "MA", VDFEntry.TYPE_INT, (
          short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)5, "OutExamGroup", "", "", "AC", VDFEntry.TYPE_CHAR, (
          short)400, (short)0, 1, (short)0, null), 
        new VDFEntry((int)6, "OutExamGroup", "OutGExamPaperDetails", 
          "ExamPaperDetails", "ExamYear", VDFEntry.TYPE_SHORT, (short)400, (
          short)0, 2, (short)0, null), 
        new VDFEntry((int)7, "OutExamGroup", "OutGExamPaperDetails", 
          "ExamPaperDetails", "MkStudyUnitCode", VDFEntry.TYPE_STRING, (short)
          400, (short)0, 7, (short)0, null), 
        new VDFEntry((int)8, "OutExamGroup", "OutGExamPaperDetails", 
          "ExamPaperDetails", "Nr", VDFEntry.TYPE_SHORT, (short)400, (short)0, 
          2, (short)0, null), 
        new VDFEntry((int)9, "OutExamGroup", "OutGExamPeriodDate", 
          "ExamPeriodDate", "MkExamPeriodCode", VDFEntry.TYPE_SHORT, (short)400,
           (short)0, 2, (short)0, null), 
        new VDFEntry((int)10, "", "OutWsStudyUnit", "WsStudyUnit", "Code", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 7, (short)0, null), 
        new VDFEntry((int)11, "", "OutWsStudyUnit", "WsStudyUnit", 
          "EngLongDescription", VDFEntry.TYPE_STRING, (short)1, (short)0, 168, (
          short)0, null), 
        new VDFEntry((int)12, "", "OutExamPaperDetails", "ExamPaperDetails", 
          "ExamYear", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)13, "", "OutExamPaperDetails", "ExamPaperDetails", 
          "MkStudyUnitCode", VDFEntry.TYPE_STRING, (short)1, (short)0, 7, (
          short)0, null), 
        new VDFEntry((int)14, "", "OutExamPaperDetails", "ExamPaperDetails", 
          "Nr", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)15, "", "OutExamPaperDetails", "ExamPaperDetails", 
          "NrOfPages", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)16, "", "OutExamPaperDetails", "ExamPaperDetails", 
          "DurationHours", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0,
           null), 
        new VDFEntry((int)17, "", "OutExamPaperDetails", "ExamPaperDetails", 
          "DurationMinutes", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)
          0, null), 
        new VDFEntry((int)18, "", "OutExamPeriodDate", "ExamPeriodDate", 
          "MkExamPeriodCode", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (
          short)0, null), 
        new VDFEntry((int)19, "", "OutExamPeriodDate", "ExamPeriodDate", 
          "MarkreadingCode", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (
          short)0, null), 
        new VDFEntry((int)20, "", "OutExamPeriodDate", "ExamPeriodDate", 
          "ScriptMarkTot", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0,
           null), 
        new VDFEntry((int)21, "", "OutExamPeriodDate", "ExamPeriodDate", 
          "MarkreadTot", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)22, "", "OutExamPeriodDate", "ExamPeriodDate", 
          "PaperMarkTot", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)23, "", "OutExamPeriodDate", "ExamPeriodDate", "Date",
           VDFEntry.TYPE_DATE, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)24, "", "OutExamPeriodDate", "ExamPeriodDate", 
          "StartingTime", VDFEntry.TYPE_TIME, (short)1, (short)0, 6, (short)0, 
          null), 
        new VDFEntry((int)25, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ReturnCode", VDFEntry.TYPE_SHORT, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)26, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerVersionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)27, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerRevisionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)28, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerDevelopmentPhase", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)29, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "Action", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)30, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientIsGuiFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)31, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerDate", VDFEntry.TYPE_DATE, (
          short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)32, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerTime", VDFEntry.TYPE_TIME, (
          short)1, (short)0, 6, (short)0, null), 
        new VDFEntry((int)33, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerTimestamp", 
          VDFEntry.TYPE_TIMESTAMP, (short)1, (short)0, 20, (short)0, null), 
        new VDFEntry((int)34, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerTransactionCode", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)35, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerUserId", VDFEntry.TYPE_STRING,
           (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)36, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerRollbackFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)37, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ActionsPendingFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)38, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientVersionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)39, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientRevisionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)40, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientDevelopmentPhase", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)41, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ListLinkFlag", VDFEntry.TYPE_STRING,
           (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)42, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "CancelFlag", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)43, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "MaintLinkFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)44, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ForceDatabaseRead", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)45, "", "OutCsfStrings", "CsfStrings", "String500", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 500, (short)0, null), 
        new VDFEntry((int)46, "OutExaminersGroup", "", "", "MA", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)47, "OutExaminersGroup", "", "", "AC", 
          VDFEntry.TYPE_CHAR, (short)30, (short)0, 1, (short)0, null), 
        new VDFEntry((int)48, "OutExaminersGroup", "OutGWsExaminer", 
          "WsExaminer", "Surname", VDFEntry.TYPE_STRING, (short)30, (short)0, 
          28, (short)0, null), 
        new VDFEntry((int)49, "OutExaminersGroup", "OutGWsExaminer", 
          "WsExaminer", "Initials", VDFEntry.TYPE_STRING, (short)30, (short)0, 
          10, (short)0, null), 
        new VDFEntry((int)50, "OutExaminersGroup", "OutGWsExaminer", 
          "WsExaminer", "Title", VDFEntry.TYPE_STRING, (short)30, (short)0, 10, 
          (short)0, null), 
        new VDFEntry((int)51, "OutExaminersGroup", "OutGExaminerTypeCsfStrings",
           "CsfStrings", "String3", VDFEntry.TYPE_STRING, (short)30, (short)0, 
          3, (short)0, null), 
        new VDFEntry((int)52, "OutExaminersGroup", 
          "OutGWsEducationalInstitution", "WsEducationalInstitution", "EngName",
           VDFEntry.TYPE_STRING, (short)30, (short)0, 28, (short)0, null), 
        new VDFEntry((int)53, "OutEquivalentGroup", "", "", "MA", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)54, "OutEquivalentGroup", "", "", "AC", 
          VDFEntry.TYPE_CHAR, (short)20, (short)0, 1, (short)0, null), 
        new VDFEntry((int)55, "OutEquivalentGroup", 
          "OutGEquivalentWsExamEquivalents", "WsExamEquivalents", 
          "WsEquivalentCode", VDFEntry.TYPE_STRING, (short)20, (short)0, 7, (
          short)0, null), 
        new VDFEntry((int)56, "OutEquivalentGroup", "OutGWsUniqueAssignment", 
          "WsUniqueAssignment", "UniqueNr", VDFEntry.TYPE_INT, (short)20, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)57, "OutEquivalentGroup", 
          "OutGEquivalentExamPeriodDate", "ExamPeriodDate", "Date", 
          VDFEntry.TYPE_DATE, (short)20, (short)0, 8, (short)0, null), 
        new VDFEntry((int)58, "OutEquivalentGroup", 
          "OutGEquivalentExamPeriodDate", "ExamPeriodDate", "DurationDays", 
          VDFEntry.TYPE_SHORT, (short)20, (short)0, 2, (short)0, null), 
        new VDFEntry((int)59, "OutEquivalentGroup", 
          "OutGEquivalentExamPeriodDate", "ExamPeriodDate", "DurationHours", 
          VDFEntry.TYPE_SHORT, (short)20, (short)0, 2, (short)0, null), 
        new VDFEntry((int)60, "OutEquivalentGroup", 
          "OutGEquivalentExamPeriodDate", "ExamPeriodDate", "DurationMinutes", 
          VDFEntry.TYPE_SHORT, (short)20, (short)0, 2, (short)0, null), 
        new VDFEntry((int)61, "OutEquivalentGroup", 
          "OutGEquivalentExamPeriodDate", "ExamPeriodDate", "StartingTime", 
          VDFEntry.TYPE_TIME, (short)20, (short)0, 6, (short)0, null), 
        new VDFEntry((int)62, "OutExamStationaryGroup", "", "", "MA", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)63, "OutExamStationaryGroup", "", "", "AC", 
          VDFEntry.TYPE_CHAR, (short)20, (short)0, 1, (short)0, null), 
        new VDFEntry((int)64, "OutExamStationaryGroup", "OutGExamStationery", 
          "ExamStationery", "ItemCode", VDFEntry.TYPE_STRING, (short)20, (short)
          0, 2, (short)0, null), 
        new VDFEntry((int)65, "OutExamStationaryGroup", 
          "OutGExamPaperStationeryNeeds", "ExamPaperStationeryNeeds", 
          "AveragePerStudent", VDFEntry.TYPE_DOUBLE, (short)20, (short)0, 4, (
          short)2, null), 
        new VDFEntry((int)66, "OutExamInstructionGroup", "", "", "MA", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)67, "OutExamInstructionGroup", "", "", "AC", 
          VDFEntry.TYPE_CHAR, (short)25, (short)0, 1, (short)0, null), 
        new VDFEntry((int)68, "OutExamInstructionGroup", 
          "OutGExamDateInstruction", "ExamDateInstruction", 
          "MkDocumentParagraphCode", VDFEntry.TYPE_SHORT, (short)25, (short)0, 
          2, (short)0, null), 
        new VDFEntry((int)69, "OutExamInstructionGroup", 
          "OutGExamDateInstruction", "ExamDateInstruction", "MkWidthType", 
          VDFEntry.TYPE_STRING, (short)25, (short)0, 1, (short)0, null), 
        new VDFEntry((int)70, "OutExamInstructionGroup", 
          "OutGExamDateInstruction", "ExamDateInstruction", "MkContents", 
          VDFEntry.TYPE_STRING, (short)25, (short)0, 2, (short)0, null), 
        new VDFEntry((int)71, "OutPaperLanguageGroup", "", "", "MA", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)72, "OutPaperLanguageGroup", "", "", "AC", 
          VDFEntry.TYPE_CHAR, (short)10, (short)0, 1, (short)0, null), 
        new VDFEntry((int)73, "OutPaperLanguageGroup", "OutGExamPaperLanguage", 
          "ExamPaperLanguage", "LanguageGc40", VDFEntry.TYPE_STRING, (short)10, 
          (short)0, 10, (short)0, null), 
        new VDFEntry((int)74, "OutAdditionalInstrGroup", "", "", "MA", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)75, "OutAdditionalInstrGroup", "", "", "AC", 
          VDFEntry.TYPE_CHAR, (short)20, (short)0, 1, (short)0, null), 
        new VDFEntry((int)76, "OutAdditionalInstrGroup", 
          "OutGExamPaperAddInstructions", "ExamPaperAddInstructions", 
          "InstructionNr", VDFEntry.TYPE_SHORT, (short)20, (short)0, 2, (short)
          0, null), 
        new VDFEntry((int)77, "OutAdditionalInstrGroup", 
          "OutGExamPaperAddInstructions", "ExamPaperAddInstructions", 
          "Instruction", VDFEntry.TYPE_STRING, (short)20, (short)0, 132, (short)
          0, null), 
        new VDFEntry((int)78, "", "OutExamPaperLog", "ExamPaperLog", 
          "ActionGc39", VDFEntry.TYPE_STRING, (short)1, (short)0, 10, (short)0, 
          null), 
        new VDFEntry((int)79, "", "OutExamPaperLog", "ExamPaperLog", "UpdatedBy"
          , VDFEntry.TYPE_STRING, (short)1, (short)0, 20, (short)0, null), 
        new VDFEntry((int)80, "", "OutExamPaperLog", "ExamPaperLog", "UpdatedOn"
          , VDFEntry.TYPE_TIMESTAMP, (short)1, (short)0, 20, (short)0, null), 
        new VDFEntry((int)81, "", "OutCoverDocketExistsFlagCsfStrings", 
          "CsfStrings", "String1", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, 
          (short)0, null), 
        new VDFEntry((int)82, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "ContactPersNr", VDFEntry.TYPE_INT, (short)1, 
          (short)0, 8, (short)0, null), 
        new VDFEntry((int)83, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "BookRequired", VDFEntry.TYPE_STRING, (short)
          1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)84, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "ProofReadRequest", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)85, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "StatusGc41", VDFEntry.TYPE_STRING, (short)1, 
          (short)0, 10, (short)0, null), 
        new VDFEntry((int)86, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "TotalRackPages", VDFEntry.TYPE_SHORT, (short)
          1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)87, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "TotalPages", VDFEntry.TYPE_SHORT, (short)1, (
          short)0, 2, (short)0, null), 
        new VDFEntry((int)88, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "AnnexurePages", VDFEntry.TYPE_STRING, (short)
          1, (short)0, 20, (short)0, null), 
        new VDFEntry((int)89, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "MemorandumIncl", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)90, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "DeclarationFlag", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)91, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "FillInPaperGc50", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)92, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "OpenBookGc50", VDFEntry.TYPE_STRING, (short)
          1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)93, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "KeepPaperFlag", VDFEntry.TYPE_STRING, (short)
          1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)94, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "CalcPermitFlag", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)95, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "ExaminerPrtGc107", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 10, (short)0, null), 
        new VDFEntry((int)96, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "McqInstrFlag", VDFEntry.TYPE_STRING, (short)
          1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)97, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "AttendRegFlag", VDFEntry.TYPE_STRING, (short)
          1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)98, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "PaperColour", VDFEntry.TYPE_STRING, (short)1,
           (short)0, 10, (short)0, null), 
        new VDFEntry((int)99, "", "OutExamPaperCoverDocket", 
          "ExamPaperCoverDocket", "NrDocsSubmitted", VDFEntry.TYPE_SHORT, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)100, "", "OutWsStaff", "WsStaff", "Surname", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 28, (short)0, null), 
        new VDFEntry((int)101, "", "OutWsStaff", "WsStaff", "Initials", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 10, (short)0, null), 
        new VDFEntry((int)102, "", "OutWsStaff", "WsStaff", "Title", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 10, (short)0, null), 
        new VDFEntry((int)103, "", "OutWsStaff", "WsStaff", "EmailAddress", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 60, (short)0, null), 
        new VDFEntry((int)104, "", "OutWsStaff", "WsStaff", "ContactTelno", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 28, (short)0, null), 
        new VDFEntry((int)105, "", "OutWsAddressV2", "WsAddressV2", "HomeNumber"
          , VDFEntry.TYPE_STRING, (short)1, (short)0, 28, (short)0, null), 
        new VDFEntry((int)106, "", "OutWsAddressV2", "WsAddressV2", "WorkNumber"
          , VDFEntry.TYPE_STRING, (short)1, (short)0, 28, (short)0, null), 
        new VDFEntry((int)107, "", "OutWsAddressV2", "WsAddressV2", "CellNumber"
          , VDFEntry.TYPE_STRING, (short)1, (short)0, 20, (short)0, null), 
      };
      localVdf = new VDF(vdfEntries);
    }
    try {
      VDF result = (VDF)localVdf.clone();
      result.initViewData();
      return result;
    } catch( CloneNotSupportedException e ) {
      return null;
    }
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    // predicate view item
    if ( vdf.getEntries()[0].getDataValue().getObject() != null )
    {
      OutWsDepartmentCode = ((Short)vdf.getEntries()[0].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutWsDepartmentCode = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[1].getDataValue().getObject() != null )
    {
      OutWsDepartmentCollegeCode = ((Short)vdf.getEntries()[1].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutWsDepartmentCollegeCode = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[2].getDataValue().getObject() != null )
    {
      OutWsDepartmentSchoolCode = ((Short)vdf.getEntries()[2].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutWsDepartmentSchoolCode = 0;
    }
    // group view current cardinality
    if ( vdf.getEntries()[3].getDataValue().getObject() != null )
    {
      OutExamGroup_MA = ((Integer)vdf.getEntries()[3].getDataValue().getObject()
        ).intValue();
    }
    else 
    {
      OutExamGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutExamGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[4].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutExamGroup_AC[adim0] = ((Character)((VDFEntryObject [])vdf.getEntries(
          )[4].getDataValue().getObject())[adim0].getObject()).charValue();
      }
      else 
      {
        OutExamGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExamGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[5].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamPaperDetailsExamYear[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[5].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGExamPaperDetailsExamYear[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExamGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[6].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamPaperDetailsMkStudyUnitCode[adim0] = ((String)((VDFEntryObject [
          ])vdf.getEntries()[6].getDataValue().getObject())[adim0].getObject())
          ;
      }
      else 
      {
        OutGExamPaperDetailsMkStudyUnitCode[adim0] = "       ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExamGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[7].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamPaperDetailsNr[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[7].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGExamPaperDetailsNr[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExamGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[8].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamPeriodDateMkExamPeriodCode[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[8].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGExamPeriodDateMkExamPeriodCode[adim0] = 0;
      }
    }
    // predicate view item
    if ( vdf.getEntries()[9].getDataValue().getObject() != null )
    {
      OutWsStudyUnitCode = ((String)vdf.getEntries()[9].getDataValue()
        .getObject());
    }
    else 
    {
      OutWsStudyUnitCode = "       ";
    }
    // predicate view item
    if ( vdf.getEntries()[10].getDataValue().getObject() != null )
    {
      OutWsStudyUnitEngLongDescription = ((String)vdf.getEntries()[10]
        .getDataValue().getObject());
    }
    else 
    {
      OutWsStudyUnitEngLongDescription = 
"                                                                                                                                                                        "
        ;
    }
    // predicate view item
    if ( vdf.getEntries()[11].getDataValue().getObject() != null )
    {
      OutExamPaperDetailsExamYear = ((Short)vdf.getEntries()[11].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutExamPaperDetailsExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[12].getDataValue().getObject() != null )
    {
      OutExamPaperDetailsMkStudyUnitCode = ((String)vdf.getEntries()[12]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperDetailsMkStudyUnitCode = "       ";
    }
    // predicate view item
    if ( vdf.getEntries()[13].getDataValue().getObject() != null )
    {
      OutExamPaperDetailsNr = ((Short)vdf.getEntries()[13].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutExamPaperDetailsNr = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[14].getDataValue().getObject() != null )
    {
      OutExamPaperDetailsNrOfPages = ((Short)vdf.getEntries()[14].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutExamPaperDetailsNrOfPages = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[15].getDataValue().getObject() != null )
    {
      OutExamPaperDetailsDurationHours = ((Short)vdf.getEntries()[15]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutExamPaperDetailsDurationHours = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[16].getDataValue().getObject() != null )
    {
      OutExamPaperDetailsDurationMinutes = ((Short)vdf.getEntries()[16]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutExamPaperDetailsDurationMinutes = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[17].getDataValue().getObject() != null )
    {
      OutExamPeriodDateMkExamPeriodCode = ((Short)vdf.getEntries()[17]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutExamPeriodDateMkExamPeriodCode = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[18].getDataValue().getObject() != null )
    {
      OutExamPeriodDateMarkreadingCode = ((String)vdf.getEntries()[18]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPeriodDateMarkreadingCode = "";
    }
    // predicate view item
    if ( vdf.getEntries()[19].getDataValue().getObject() != null )
    {
      OutExamPeriodDateScriptMarkTot = ((Short)vdf.getEntries()[19]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutExamPeriodDateScriptMarkTot = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[20].getDataValue().getObject() != null )
    {
      OutExamPeriodDateMarkreadTot = ((Short)vdf.getEntries()[20].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutExamPeriodDateMarkreadTot = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[21].getDataValue().getObject() != null )
    {
      OutExamPeriodDatePaperMarkTot = ((Short)vdf.getEntries()[21].getDataValue(
        ).getObject()).shortValue();
    }
    else 
    {
      OutExamPeriodDatePaperMarkTot = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[22].getDataValue().getObject() != null )
    {
      OutExamPeriodDateDate = ((Integer)vdf.getEntries()[22].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutExamPeriodDateDate = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[23].getDataValue().getObject() != null )
    {
      OutExamPeriodDateStartingTime = ((Integer)vdf.getEntries()[23]
        .getDataValue().getObject()).intValue();
    }
    else 
    {
      OutExamPeriodDateStartingTime = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[24].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsReturnCode = ((Short)vdf.getEntries()[24]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsReturnCode = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[25].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerVersionNumber = ((Short)
        vdf.getEntries()[25].getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsServerVersionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[26].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerRevisionNumber = ((Short)
        vdf.getEntries()[26].getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsServerRevisionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[27].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerDevelopmentPhase = ((String)
        vdf.getEntries()[27].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerDevelopmentPhase = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[28].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsAction = ((String)vdf.getEntries()[28]
        .getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsAction = "  ";
    }
    // predicate view item
    if ( vdf.getEntries()[29].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsClientIsGuiFlag = ((String)vdf.getEntries(
        )[29].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsClientIsGuiFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[30].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerDate = ((Integer)vdf.getEntries()[
        30].getDataValue().getObject()).intValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsServerDate = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[31].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerTime = ((Integer)vdf.getEntries()[
        31].getDataValue().getObject()).intValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsServerTime = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[32].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerTimestamp = ((String)vdf.getEntries(
        )[32].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerTimestamp = "00000000000000000000";
    }
    // predicate view item
    if ( vdf.getEntries()[33].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerTransactionCode = ((String)
        vdf.getEntries()[33].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerTransactionCode = "        ";
    }
    // predicate view item
    if ( vdf.getEntries()[34].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerUserId = ((String)vdf.getEntries()[
        34].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerUserId = "        ";
    }
    // predicate view item
    if ( vdf.getEntries()[35].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerRollbackFlag = ((String)
        vdf.getEntries()[35].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerRollbackFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[36].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsActionsPendingFlag = ((String)
        vdf.getEntries()[36].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsActionsPendingFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[37].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsClientVersionNumber = ((Short)
        vdf.getEntries()[37].getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsClientVersionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[38].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsClientRevisionNumber = ((Short)
        vdf.getEntries()[38].getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsClientRevisionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[39].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsClientDevelopmentPhase = ((String)
        vdf.getEntries()[39].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsClientDevelopmentPhase = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[40].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsListLinkFlag = ((String)vdf.getEntries()[
        40].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsListLinkFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[41].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsCancelFlag = ((String)vdf.getEntries()[41]
        .getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsCancelFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[42].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsMaintLinkFlag = ((String)vdf.getEntries()[
        42].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsMaintLinkFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[43].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsForceDatabaseRead = ((String)
        vdf.getEntries()[43].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsForceDatabaseRead = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[44].getDataValue().getObject() != null )
    {
      OutCsfStringsString500 = ((String)vdf.getEntries()[44].getDataValue()
        .getObject());
    }
    else 
    {
      OutCsfStringsString500 = "";
    }
    // group view current cardinality
    if ( vdf.getEntries()[45].getDataValue().getObject() != null )
    {
      OutExaminersGroup_MA = ((Integer)vdf.getEntries()[45].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutExaminersGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutExaminersGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[46].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutExaminersGroup_AC[adim0] = ((Character)((VDFEntryObject [])
          vdf.getEntries()[46].getDataValue().getObject())[adim0].getObject())
          .charValue();
      }
      else 
      {
        OutExaminersGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExaminersGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[47].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGWsExaminerSurname[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[47].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGWsExaminerSurname[adim0] = "                            ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExaminersGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[48].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGWsExaminerInitials[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[48].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGWsExaminerInitials[adim0] = "          ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExaminersGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[49].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGWsExaminerTitle[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[49].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGWsExaminerTitle[adim0] = "          ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExaminersGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[50].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExaminerTypeCsfStringsString3[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[50].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGExaminerTypeCsfStringsString3[adim0] = "   ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExaminersGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[51].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGWsEducationalInstitutionEngName[adim0] = ((String)((VDFEntryObject [
          ])vdf.getEntries()[51].getDataValue().getObject())[adim0].getObject())
          ;
      }
      else 
      {
        OutGWsEducationalInstitutionEngName[adim0] = 
          "                            ";
      }
    }
    // group view current cardinality
    if ( vdf.getEntries()[52].getDataValue().getObject() != null )
    {
      OutEquivalentGroup_MA = ((Integer)vdf.getEntries()[52].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutEquivalentGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutEquivalentGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[53].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutEquivalentGroup_AC[adim0] = ((Character)((VDFEntryObject [])
          vdf.getEntries()[53].getDataValue().getObject())[adim0].getObject())
          .charValue();
      }
      else 
      {
        OutEquivalentGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutEquivalentGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[54].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGEquivalentWsExamEquivalentsWsEquivalentCode[adim0] = ((String)((
          VDFEntryObject [])vdf.getEntries()[54].getDataValue().getObject())[
          adim0].getObject());
      }
      else 
      {
        OutGEquivalentWsExamEquivalentsWsEquivalentCode[adim0] = "       ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutEquivalentGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[55].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGWsUniqueAssignmentUniqueNr[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[55].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGWsUniqueAssignmentUniqueNr[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutEquivalentGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[56].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGEquivalentExamPeriodDateDate[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[56].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGEquivalentExamPeriodDateDate[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutEquivalentGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[57].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGEquivalentExamPeriodDateDurationDays[adim0] = ((Short)((
          VDFEntryObject [])vdf.getEntries()[57].getDataValue().getObject())[
          adim0].getObject()).shortValue();
      }
      else 
      {
        OutGEquivalentExamPeriodDateDurationDays[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutEquivalentGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[58].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGEquivalentExamPeriodDateDurationHours[adim0] = ((Short)((
          VDFEntryObject [])vdf.getEntries()[58].getDataValue().getObject())[
          adim0].getObject()).shortValue();
      }
      else 
      {
        OutGEquivalentExamPeriodDateDurationHours[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutEquivalentGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[59].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGEquivalentExamPeriodDateDurationMinutes[adim0] = ((Short)((
          VDFEntryObject [])vdf.getEntries()[59].getDataValue().getObject())[
          adim0].getObject()).shortValue();
      }
      else 
      {
        OutGEquivalentExamPeriodDateDurationMinutes[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutEquivalentGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[60].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGEquivalentExamPeriodDateStartingTime[adim0] = ((Integer)((
          VDFEntryObject [])vdf.getEntries()[60].getDataValue().getObject())[
          adim0].getObject()).intValue();
      }
      else 
      {
        OutGEquivalentExamPeriodDateStartingTime[adim0] = 00000000;
      }
    }
    // group view current cardinality
    if ( vdf.getEntries()[61].getDataValue().getObject() != null )
    {
      OutExamStationaryGroup_MA = ((Integer)vdf.getEntries()[61].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutExamStationaryGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutExamStationaryGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[62].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutExamStationaryGroup_AC[adim0] = ((Character)((VDFEntryObject [])
          vdf.getEntries()[62].getDataValue().getObject())[adim0].getObject())
          .charValue();
      }
      else 
      {
        OutExamStationaryGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExamStationaryGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[63].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamStationeryItemCode[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[63].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGExamStationeryItemCode[adim0] = "  ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExamStationaryGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[64].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamPaperStationeryNeedsAveragePerStudent[adim0] = ((Double)((
          VDFEntryObject [])vdf.getEntries()[64].getDataValue().getObject())[
          adim0].getObject()).doubleValue();
      }
      else 
      {
        OutGExamPaperStationeryNeedsAveragePerStudent[adim0] = 0.0;
      }
    }
    // group view current cardinality
    if ( vdf.getEntries()[65].getDataValue().getObject() != null )
    {
      OutExamInstructionGroup_MA = ((Integer)vdf.getEntries()[65].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutExamInstructionGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutExamInstructionGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[66].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutExamInstructionGroup_AC[adim0] = ((Character)((VDFEntryObject [])
          vdf.getEntries()[66].getDataValue().getObject())[adim0].getObject())
          .charValue();
      }
      else 
      {
        OutExamInstructionGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExamInstructionGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[67].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamDateInstructionMkDocumentParagraphCode[adim0] = ((Short)((
          VDFEntryObject [])vdf.getEntries()[67].getDataValue().getObject())[
          adim0].getObject()).shortValue();
      }
      else 
      {
        OutGExamDateInstructionMkDocumentParagraphCode[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExamInstructionGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[68].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamDateInstructionMkWidthType[adim0] = ((String)((VDFEntryObject []
          )vdf.getEntries()[68].getDataValue().getObject())[adim0].getObject())
          ;
      }
      else 
      {
        OutGExamDateInstructionMkWidthType[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutExamInstructionGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[69].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamDateInstructionMkContents[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[69].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGExamDateInstructionMkContents[adim0] = "  ";
      }
    }
    // group view current cardinality
    if ( vdf.getEntries()[70].getDataValue().getObject() != null )
    {
      OutPaperLanguageGroup_MA = ((Integer)vdf.getEntries()[70].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutPaperLanguageGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutPaperLanguageGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[71].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutPaperLanguageGroup_AC[adim0] = ((Character)((VDFEntryObject [])
          vdf.getEntries()[71].getDataValue().getObject())[adim0].getObject())
          .charValue();
      }
      else 
      {
        OutPaperLanguageGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutPaperLanguageGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[72].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamPaperLanguageLanguageGc40[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[72].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGExamPaperLanguageLanguageGc40[adim0] = "";
      }
    }
    // group view current cardinality
    if ( vdf.getEntries()[73].getDataValue().getObject() != null )
    {
      OutAdditionalInstrGroup_MA = ((Integer)vdf.getEntries()[73].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutAdditionalInstrGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutAdditionalInstrGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[74].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutAdditionalInstrGroup_AC[adim0] = ((Character)((VDFEntryObject [])
          vdf.getEntries()[74].getDataValue().getObject())[adim0].getObject())
          .charValue();
      }
      else 
      {
        OutAdditionalInstrGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutAdditionalInstrGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[75].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamPaperAddInstructionsInstructionNr[adim0] = ((Short)((
          VDFEntryObject [])vdf.getEntries()[75].getDataValue().getObject())[
          adim0].getObject()).shortValue();
      }
      else 
      {
        OutGExamPaperAddInstructionsInstructionNr[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutAdditionalInstrGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[76].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamPaperAddInstructionsInstruction[adim0] = ((String)((
          VDFEntryObject [])vdf.getEntries()[76].getDataValue().getObject())[
          adim0].getObject());
      }
      else 
      {
        OutGExamPaperAddInstructionsInstruction[adim0] = "";
      }
    }
    // predicate view item
    if ( vdf.getEntries()[77].getDataValue().getObject() != null )
    {
      OutExamPaperLogActionGc39 = ((String)vdf.getEntries()[77].getDataValue()
        .getObject());
    }
    else 
    {
      OutExamPaperLogActionGc39 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[78].getDataValue().getObject() != null )
    {
      OutExamPaperLogUpdatedBy = ((String)vdf.getEntries()[78].getDataValue()
        .getObject());
    }
    else 
    {
      OutExamPaperLogUpdatedBy = "";
    }
    // predicate view item
    if ( vdf.getEntries()[79].getDataValue().getObject() != null )
    {
      OutExamPaperLogUpdatedOn = ((String)vdf.getEntries()[79].getDataValue()
        .getObject());
    }
    else 
    {
      OutExamPaperLogUpdatedOn = "00000000000000000000";
    }
    // predicate view item
    if ( vdf.getEntries()[80].getDataValue().getObject() != null )
    {
      OutCoverDocketExistsFlagCsfStringsString1 = ((String)vdf.getEntries()[80]
        .getDataValue().getObject());
    }
    else 
    {
      OutCoverDocketExistsFlagCsfStringsString1 = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[81].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketContactPersNr = ((Integer)vdf.getEntries()[81]
        .getDataValue().getObject()).intValue();
    }
    else 
    {
      OutExamPaperCoverDocketContactPersNr = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[82].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketBookRequired = ((String)vdf.getEntries()[82]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketBookRequired = "";
    }
    // predicate view item
    if ( vdf.getEntries()[83].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketProofReadRequest = ((String)vdf.getEntries()[83]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketProofReadRequest = "";
    }
    // predicate view item
    if ( vdf.getEntries()[84].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketStatusGc41 = ((String)vdf.getEntries()[84]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketStatusGc41 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[85].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketTotalRackPages = ((Short)vdf.getEntries()[85]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutExamPaperCoverDocketTotalRackPages = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[86].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketTotalPages = ((Short)vdf.getEntries()[86]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutExamPaperCoverDocketTotalPages = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[87].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketAnnexurePages = ((String)vdf.getEntries()[87]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketAnnexurePages = "";
    }
    // predicate view item
    if ( vdf.getEntries()[88].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketMemorandumIncl = ((String)vdf.getEntries()[88]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketMemorandumIncl = "";
    }
    // predicate view item
    if ( vdf.getEntries()[89].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketDeclarationFlag = ((String)vdf.getEntries()[89]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketDeclarationFlag = "";
    }
    // predicate view item
    if ( vdf.getEntries()[90].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketFillInPaperGc50 = ((String)vdf.getEntries()[90]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketFillInPaperGc50 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[91].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketOpenBookGc50 = ((String)vdf.getEntries()[91]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketOpenBookGc50 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[92].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketKeepPaperFlag = ((String)vdf.getEntries()[92]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketKeepPaperFlag = "";
    }
    // predicate view item
    if ( vdf.getEntries()[93].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketCalcPermitFlag = ((String)vdf.getEntries()[93]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketCalcPermitFlag = "";
    }
    // predicate view item
    if ( vdf.getEntries()[94].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketExaminerPrtGc107 = ((String)vdf.getEntries()[94]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketExaminerPrtGc107 = "          ";
    }
    // predicate view item
    if ( vdf.getEntries()[95].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketMcqInstrFlag = ((String)vdf.getEntries()[95]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketMcqInstrFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[96].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketAttendRegFlag = ((String)vdf.getEntries()[96]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketAttendRegFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[97].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketPaperColour = ((String)vdf.getEntries()[97]
        .getDataValue().getObject());
    }
    else 
    {
      OutExamPaperCoverDocketPaperColour = "          ";
    }
    // predicate view item
    if ( vdf.getEntries()[98].getDataValue().getObject() != null )
    {
      OutExamPaperCoverDocketNrDocsSubmitted = ((Short)vdf.getEntries()[98]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutExamPaperCoverDocketNrDocsSubmitted = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[99].getDataValue().getObject() != null )
    {
      OutWsStaffSurname = ((String)vdf.getEntries()[99].getDataValue()
        .getObject());
    }
    else 
    {
      OutWsStaffSurname = "                            ";
    }
    // predicate view item
    if ( vdf.getEntries()[100].getDataValue().getObject() != null )
    {
      OutWsStaffInitials = ((String)vdf.getEntries()[100].getDataValue()
        .getObject());
    }
    else 
    {
      OutWsStaffInitials = "          ";
    }
    // predicate view item
    if ( vdf.getEntries()[101].getDataValue().getObject() != null )
    {
      OutWsStaffTitle = ((String)vdf.getEntries()[101].getDataValue().getObject(
        ));
    }
    else 
    {
      OutWsStaffTitle = "          ";
    }
    // predicate view item
    if ( vdf.getEntries()[102].getDataValue().getObject() != null )
    {
      OutWsStaffEmailAddress = ((String)vdf.getEntries()[102].getDataValue()
        .getObject());
    }
    else 
    {
      OutWsStaffEmailAddress = 
        "                                                            ";
    }
    // predicate view item
    if ( vdf.getEntries()[103].getDataValue().getObject() != null )
    {
      OutWsStaffContactTelno = ((String)vdf.getEntries()[103].getDataValue()
        .getObject());
    }
    else 
    {
      OutWsStaffContactTelno = "                            ";
    }
    // predicate view item
    if ( vdf.getEntries()[104].getDataValue().getObject() != null )
    {
      OutWsAddressV2HomeNumber = ((String)vdf.getEntries()[104].getDataValue()
        .getObject());
    }
    else 
    {
      OutWsAddressV2HomeNumber = "                            ";
    }
    // predicate view item
    if ( vdf.getEntries()[105].getDataValue().getObject() != null )
    {
      OutWsAddressV2WorkNumber = ((String)vdf.getEntries()[105].getDataValue()
        .getObject());
    }
    else 
    {
      OutWsAddressV2WorkNumber = "                            ";
    }
    // predicate view item
    if ( vdf.getEntries()[106].getDataValue().getObject() != null )
    {
      OutWsAddressV2CellNumber = ((String)vdf.getEntries()[106].getDataValue()
        .getObject());
    }
    else 
    {
      OutWsAddressV2CellNumber = "                    ";
    }
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    VDF vdf = getViewDefinition();
    // predicate view item
    vdf.getEntries()[0].getDataValue().setObject(new Short(OutWsDepartmentCode))
      ;
    // predicate view item
    vdf.getEntries()[1].getDataValue().setObject(new Short(
      OutWsDepartmentCollegeCode));
    // predicate view item
    vdf.getEntries()[2].getDataValue().setObject(new Short(
      OutWsDepartmentSchoolCode));
    // group view current cardinality
    vdf.getEntries()[3].getDataValue().setObject(new Integer(OutExamGroup_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 400; adim0++)
    {
      if ( adim0 < OutExamGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[4].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[4].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[4].setCountUsed((short)OutExamGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 400; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[5].getDataValue().getObject())[adim0]
        .setObject(new Short(OutGExamPaperDetailsExamYear[adim0]));
    }
    vdf.getEntries()[5].setCountUsed((short)OutExamGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 400; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[6].getDataValue().getObject())[adim0]
        .setObject(OutGExamPaperDetailsMkStudyUnitCode[adim0]);
    }
    vdf.getEntries()[6].setCountUsed((short)OutExamGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 400; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[7].getDataValue().getObject())[adim0]
        .setObject(new Short(OutGExamPaperDetailsNr[adim0]));
    }
    vdf.getEntries()[7].setCountUsed((short)OutExamGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 400; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[8].getDataValue().getObject())[adim0]
        .setObject(new Short(OutGExamPeriodDateMkExamPeriodCode[adim0]));
    }
    vdf.getEntries()[8].setCountUsed((short)OutExamGroup_MA);
    // predicate view item
    vdf.getEntries()[9].getDataValue().setObject(OutWsStudyUnitCode);
    // predicate view item
    vdf.getEntries()[10].getDataValue().setObject(
      OutWsStudyUnitEngLongDescription);
    // predicate view item
    vdf.getEntries()[11].getDataValue().setObject(new Short(
      OutExamPaperDetailsExamYear));
    // predicate view item
    vdf.getEntries()[12].getDataValue().setObject(
      OutExamPaperDetailsMkStudyUnitCode);
    // predicate view item
    vdf.getEntries()[13].getDataValue().setObject(new Short(
      OutExamPaperDetailsNr));
    // predicate view item
    vdf.getEntries()[14].getDataValue().setObject(new Short(
      OutExamPaperDetailsNrOfPages));
    // predicate view item
    vdf.getEntries()[15].getDataValue().setObject(new Short(
      OutExamPaperDetailsDurationHours));
    // predicate view item
    vdf.getEntries()[16].getDataValue().setObject(new Short(
      OutExamPaperDetailsDurationMinutes));
    // predicate view item
    vdf.getEntries()[17].getDataValue().setObject(new Short(
      OutExamPeriodDateMkExamPeriodCode));
    // predicate view item
    vdf.getEntries()[18].getDataValue().setObject(
      OutExamPeriodDateMarkreadingCode);
    // predicate view item
    vdf.getEntries()[19].getDataValue().setObject(new Short(
      OutExamPeriodDateScriptMarkTot));
    // predicate view item
    vdf.getEntries()[20].getDataValue().setObject(new Short(
      OutExamPeriodDateMarkreadTot));
    // predicate view item
    vdf.getEntries()[21].getDataValue().setObject(new Short(
      OutExamPeriodDatePaperMarkTot));
    // predicate view item
    vdf.getEntries()[22].getDataValue().setObject(new Integer(
      OutExamPeriodDateDate));
    // predicate view item
    vdf.getEntries()[23].getDataValue().setObject(new Integer(
      OutExamPeriodDateStartingTime));
    // predicate view item
    vdf.getEntries()[24].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsReturnCode));
    // predicate view item
    vdf.getEntries()[25].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsServerVersionNumber));
    // predicate view item
    vdf.getEntries()[26].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsServerRevisionNumber));
    // predicate view item
    vdf.getEntries()[27].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerDevelopmentPhase);
    // predicate view item
    vdf.getEntries()[28].getDataValue().setObject(
      OutCsfClientServerCommunicationsAction);
    // predicate view item
    vdf.getEntries()[29].getDataValue().setObject(
      OutCsfClientServerCommunicationsClientIsGuiFlag);
    // predicate view item
    vdf.getEntries()[30].getDataValue().setObject(new Integer(
      OutCsfClientServerCommunicationsServerDate));
    // predicate view item
    vdf.getEntries()[31].getDataValue().setObject(new Integer(
      OutCsfClientServerCommunicationsServerTime));
    // predicate view item
    vdf.getEntries()[32].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerTimestamp);
    // predicate view item
    vdf.getEntries()[33].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerTransactionCode);
    // predicate view item
    vdf.getEntries()[34].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerUserId);
    // predicate view item
    vdf.getEntries()[35].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerRollbackFlag);
    // predicate view item
    vdf.getEntries()[36].getDataValue().setObject(
      OutCsfClientServerCommunicationsActionsPendingFlag);
    // predicate view item
    vdf.getEntries()[37].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsClientVersionNumber));
    // predicate view item
    vdf.getEntries()[38].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsClientRevisionNumber));
    // predicate view item
    vdf.getEntries()[39].getDataValue().setObject(
      OutCsfClientServerCommunicationsClientDevelopmentPhase);
    // predicate view item
    vdf.getEntries()[40].getDataValue().setObject(
      OutCsfClientServerCommunicationsListLinkFlag);
    // predicate view item
    vdf.getEntries()[41].getDataValue().setObject(
      OutCsfClientServerCommunicationsCancelFlag);
    // predicate view item
    vdf.getEntries()[42].getDataValue().setObject(
      OutCsfClientServerCommunicationsMaintLinkFlag);
    // predicate view item
    vdf.getEntries()[43].getDataValue().setObject(
      OutCsfClientServerCommunicationsForceDatabaseRead);
    // predicate view item
    vdf.getEntries()[44].getDataValue().setObject(OutCsfStringsString500);
    // group view current cardinality
    vdf.getEntries()[45].getDataValue().setObject(new Integer(
      OutExaminersGroup_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 30; adim0++)
    {
      if ( adim0 < OutExaminersGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[46].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[46].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[46].setCountUsed((short)OutExaminersGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 30; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[47].getDataValue().getObject())[
        adim0].setObject(OutGWsExaminerSurname[adim0]);
    }
    vdf.getEntries()[47].setCountUsed((short)OutExaminersGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 30; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[48].getDataValue().getObject())[
        adim0].setObject(OutGWsExaminerInitials[adim0]);
    }
    vdf.getEntries()[48].setCountUsed((short)OutExaminersGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 30; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[49].getDataValue().getObject())[
        adim0].setObject(OutGWsExaminerTitle[adim0]);
    }
    vdf.getEntries()[49].setCountUsed((short)OutExaminersGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 30; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[50].getDataValue().getObject())[
        adim0].setObject(OutGExaminerTypeCsfStringsString3[adim0]);
    }
    vdf.getEntries()[50].setCountUsed((short)OutExaminersGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 30; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[51].getDataValue().getObject())[
        adim0].setObject(OutGWsEducationalInstitutionEngName[adim0]);
    }
    vdf.getEntries()[51].setCountUsed((short)OutExaminersGroup_MA);
    // group view current cardinality
    vdf.getEntries()[52].getDataValue().setObject(new Integer(
      OutEquivalentGroup_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      if ( adim0 < OutEquivalentGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[53].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[53].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[53].setCountUsed((short)OutEquivalentGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[54].getDataValue().getObject())[
        adim0].setObject(OutGEquivalentWsExamEquivalentsWsEquivalentCode[adim0])
        ;
    }
    vdf.getEntries()[54].setCountUsed((short)OutEquivalentGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[55].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGWsUniqueAssignmentUniqueNr[adim0]));
    }
    vdf.getEntries()[55].setCountUsed((short)OutEquivalentGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[56].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGEquivalentExamPeriodDateDate[adim0]));
    }
    vdf.getEntries()[56].setCountUsed((short)OutEquivalentGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[57].getDataValue().getObject())[
        adim0].setObject(new Short(OutGEquivalentExamPeriodDateDurationDays[
        adim0]));
    }
    vdf.getEntries()[57].setCountUsed((short)OutEquivalentGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[58].getDataValue().getObject())[
        adim0].setObject(new Short(OutGEquivalentExamPeriodDateDurationHours[
        adim0]));
    }
    vdf.getEntries()[58].setCountUsed((short)OutEquivalentGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[59].getDataValue().getObject())[
        adim0].setObject(new Short(OutGEquivalentExamPeriodDateDurationMinutes[
        adim0]));
    }
    vdf.getEntries()[59].setCountUsed((short)OutEquivalentGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[60].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGEquivalentExamPeriodDateStartingTime[
        adim0]));
    }
    vdf.getEntries()[60].setCountUsed((short)OutEquivalentGroup_MA);
    // group view current cardinality
    vdf.getEntries()[61].getDataValue().setObject(new Integer(
      OutExamStationaryGroup_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      if ( adim0 < OutExamStationaryGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[62].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[62].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[62].setCountUsed((short)OutExamStationaryGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[63].getDataValue().getObject())[
        adim0].setObject(OutGExamStationeryItemCode[adim0]);
    }
    vdf.getEntries()[63].setCountUsed((short)OutExamStationaryGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[64].getDataValue().getObject())[
        adim0].setObject(new Double(
        OutGExamPaperStationeryNeedsAveragePerStudent[adim0]));
    }
    vdf.getEntries()[64].setCountUsed((short)OutExamStationaryGroup_MA);
    // group view current cardinality
    vdf.getEntries()[65].getDataValue().setObject(new Integer(
      OutExamInstructionGroup_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 25; adim0++)
    {
      if ( adim0 < OutExamInstructionGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[66].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[66].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[66].setCountUsed((short)OutExamInstructionGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 25; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[67].getDataValue().getObject())[
        adim0].setObject(new Short(
        OutGExamDateInstructionMkDocumentParagraphCode[adim0]));
    }
    vdf.getEntries()[67].setCountUsed((short)OutExamInstructionGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 25; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[68].getDataValue().getObject())[
        adim0].setObject(OutGExamDateInstructionMkWidthType[adim0]);
    }
    vdf.getEntries()[68].setCountUsed((short)OutExamInstructionGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 25; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[69].getDataValue().getObject())[
        adim0].setObject(OutGExamDateInstructionMkContents[adim0]);
    }
    vdf.getEntries()[69].setCountUsed((short)OutExamInstructionGroup_MA);
    // group view current cardinality
    vdf.getEntries()[70].getDataValue().setObject(new Integer(
      OutPaperLanguageGroup_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 10; adim0++)
    {
      if ( adim0 < OutPaperLanguageGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[71].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[71].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[71].setCountUsed((short)OutPaperLanguageGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 10; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[72].getDataValue().getObject())[
        adim0].setObject(OutGExamPaperLanguageLanguageGc40[adim0]);
    }
    vdf.getEntries()[72].setCountUsed((short)OutPaperLanguageGroup_MA);
    // group view current cardinality
    vdf.getEntries()[73].getDataValue().setObject(new Integer(
      OutAdditionalInstrGroup_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      if ( adim0 < OutAdditionalInstrGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[74].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[74].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[74].setCountUsed((short)OutAdditionalInstrGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[75].getDataValue().getObject())[
        adim0].setObject(new Short(OutGExamPaperAddInstructionsInstructionNr[
        adim0]));
    }
    vdf.getEntries()[75].setCountUsed((short)OutAdditionalInstrGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[76].getDataValue().getObject())[
        adim0].setObject(OutGExamPaperAddInstructionsInstruction[adim0]);
    }
    vdf.getEntries()[76].setCountUsed((short)OutAdditionalInstrGroup_MA);
    // predicate view item
    vdf.getEntries()[77].getDataValue().setObject(OutExamPaperLogActionGc39);
    // predicate view item
    vdf.getEntries()[78].getDataValue().setObject(OutExamPaperLogUpdatedBy);
    // predicate view item
    vdf.getEntries()[79].getDataValue().setObject(OutExamPaperLogUpdatedOn);
    // predicate view item
    vdf.getEntries()[80].getDataValue().setObject(
      OutCoverDocketExistsFlagCsfStringsString1);
    // predicate view item
    vdf.getEntries()[81].getDataValue().setObject(new Integer(
      OutExamPaperCoverDocketContactPersNr));
    // predicate view item
    vdf.getEntries()[82].getDataValue().setObject(
      OutExamPaperCoverDocketBookRequired);
    // predicate view item
    vdf.getEntries()[83].getDataValue().setObject(
      OutExamPaperCoverDocketProofReadRequest);
    // predicate view item
    vdf.getEntries()[84].getDataValue().setObject(
      OutExamPaperCoverDocketStatusGc41);
    // predicate view item
    vdf.getEntries()[85].getDataValue().setObject(new Short(
      OutExamPaperCoverDocketTotalRackPages));
    // predicate view item
    vdf.getEntries()[86].getDataValue().setObject(new Short(
      OutExamPaperCoverDocketTotalPages));
    // predicate view item
    vdf.getEntries()[87].getDataValue().setObject(
      OutExamPaperCoverDocketAnnexurePages);
    // predicate view item
    vdf.getEntries()[88].getDataValue().setObject(
      OutExamPaperCoverDocketMemorandumIncl);
    // predicate view item
    vdf.getEntries()[89].getDataValue().setObject(
      OutExamPaperCoverDocketDeclarationFlag);
    // predicate view item
    vdf.getEntries()[90].getDataValue().setObject(
      OutExamPaperCoverDocketFillInPaperGc50);
    // predicate view item
    vdf.getEntries()[91].getDataValue().setObject(
      OutExamPaperCoverDocketOpenBookGc50);
    // predicate view item
    vdf.getEntries()[92].getDataValue().setObject(
      OutExamPaperCoverDocketKeepPaperFlag);
    // predicate view item
    vdf.getEntries()[93].getDataValue().setObject(
      OutExamPaperCoverDocketCalcPermitFlag);
    // predicate view item
    vdf.getEntries()[94].getDataValue().setObject(
      OutExamPaperCoverDocketExaminerPrtGc107);
    // predicate view item
    vdf.getEntries()[95].getDataValue().setObject(
      OutExamPaperCoverDocketMcqInstrFlag);
    // predicate view item
    vdf.getEntries()[96].getDataValue().setObject(
      OutExamPaperCoverDocketAttendRegFlag);
    // predicate view item
    vdf.getEntries()[97].getDataValue().setObject(
      OutExamPaperCoverDocketPaperColour);
    // predicate view item
    vdf.getEntries()[98].getDataValue().setObject(new Short(
      OutExamPaperCoverDocketNrDocsSubmitted));
    // predicate view item
    vdf.getEntries()[99].getDataValue().setObject(OutWsStaffSurname);
    // predicate view item
    vdf.getEntries()[100].getDataValue().setObject(OutWsStaffInitials);
    // predicate view item
    vdf.getEntries()[101].getDataValue().setObject(OutWsStaffTitle);
    // predicate view item
    vdf.getEntries()[102].getDataValue().setObject(OutWsStaffEmailAddress);
    // predicate view item
    vdf.getEntries()[103].getDataValue().setObject(OutWsStaffContactTelno);
    // predicate view item
    vdf.getEntries()[104].getDataValue().setObject(OutWsAddressV2HomeNumber);
    // predicate view item
    vdf.getEntries()[105].getDataValue().setObject(OutWsAddressV2WorkNumber);
    // predicate view item
    vdf.getEntries()[106].getDataValue().setObject(OutWsAddressV2CellNumber);
    return(vdf);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((EXCDQ01S_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(EXCDQ01S_OA orig)
  {
    OutWsDepartmentCode_AT = orig.OutWsDepartmentCode_AT;
    OutWsDepartmentCode_AS = orig.OutWsDepartmentCode_AS;
    OutWsDepartmentCode = orig.OutWsDepartmentCode;
    OutWsDepartmentCollegeCode_AT = orig.OutWsDepartmentCollegeCode_AT;
    OutWsDepartmentCollegeCode_AS = orig.OutWsDepartmentCollegeCode_AS;
    OutWsDepartmentCollegeCode = orig.OutWsDepartmentCollegeCode;
    OutWsDepartmentSchoolCode_AT = orig.OutWsDepartmentSchoolCode_AT;
    OutWsDepartmentSchoolCode_AS = orig.OutWsDepartmentSchoolCode_AS;
    OutWsDepartmentSchoolCode = orig.OutWsDepartmentSchoolCode;
    OutExamGroup_MA = orig.OutExamGroup_MA;
    for(int a = 0; a < 400; a++)
    {
      OutExamGroup_AC[a] = orig.OutExamGroup_AC[a];
      OutGExamPaperDetailsExamYear_AT[a] = orig.OutGExamPaperDetailsExamYear_AT[
        a];
      OutGExamPaperDetailsExamYear_AS[a] = orig.OutGExamPaperDetailsExamYear_AS[
        a];
      OutGExamPaperDetailsExamYear[a] = orig.OutGExamPaperDetailsExamYear[a];
      OutGExamPaperDetailsMkStudyUnitCode_AT[a] = 
        orig.OutGExamPaperDetailsMkStudyUnitCode_AT[a];
      OutGExamPaperDetailsMkStudyUnitCode_AS[a] = 
        orig.OutGExamPaperDetailsMkStudyUnitCode_AS[a];
      OutGExamPaperDetailsMkStudyUnitCode[a] = 
        orig.OutGExamPaperDetailsMkStudyUnitCode[a];
      OutGExamPaperDetailsNr_AT[a] = orig.OutGExamPaperDetailsNr_AT[a];
      OutGExamPaperDetailsNr_AS[a] = orig.OutGExamPaperDetailsNr_AS[a];
      OutGExamPaperDetailsNr[a] = orig.OutGExamPaperDetailsNr[a];
      OutGExamPeriodDateMkExamPeriodCode_AT[a] = 
        orig.OutGExamPeriodDateMkExamPeriodCode_AT[a];
      OutGExamPeriodDateMkExamPeriodCode_AS[a] = 
        orig.OutGExamPeriodDateMkExamPeriodCode_AS[a];
      OutGExamPeriodDateMkExamPeriodCode[a] = 
        orig.OutGExamPeriodDateMkExamPeriodCode[a];
    }
    OutWsStudyUnitCode_AT = orig.OutWsStudyUnitCode_AT;
    OutWsStudyUnitCode_AS = orig.OutWsStudyUnitCode_AS;
    OutWsStudyUnitCode = orig.OutWsStudyUnitCode;
    OutWsStudyUnitEngLongDescription_AT = 
      orig.OutWsStudyUnitEngLongDescription_AT;
    OutWsStudyUnitEngLongDescription_AS = 
      orig.OutWsStudyUnitEngLongDescription_AS;
    OutWsStudyUnitEngLongDescription = orig.OutWsStudyUnitEngLongDescription;
    OutExamPaperDetailsExamYear_AT = orig.OutExamPaperDetailsExamYear_AT;
    OutExamPaperDetailsExamYear_AS = orig.OutExamPaperDetailsExamYear_AS;
    OutExamPaperDetailsExamYear = orig.OutExamPaperDetailsExamYear;
    OutExamPaperDetailsMkStudyUnitCode_AT = 
      orig.OutExamPaperDetailsMkStudyUnitCode_AT;
    OutExamPaperDetailsMkStudyUnitCode_AS = 
      orig.OutExamPaperDetailsMkStudyUnitCode_AS;
    OutExamPaperDetailsMkStudyUnitCode = 
      orig.OutExamPaperDetailsMkStudyUnitCode;
    OutExamPaperDetailsNr_AT = orig.OutExamPaperDetailsNr_AT;
    OutExamPaperDetailsNr_AS = orig.OutExamPaperDetailsNr_AS;
    OutExamPaperDetailsNr = orig.OutExamPaperDetailsNr;
    OutExamPaperDetailsNrOfPages_AT = orig.OutExamPaperDetailsNrOfPages_AT;
    OutExamPaperDetailsNrOfPages_AS = orig.OutExamPaperDetailsNrOfPages_AS;
    OutExamPaperDetailsNrOfPages = orig.OutExamPaperDetailsNrOfPages;
    OutExamPaperDetailsDurationHours_AT = 
      orig.OutExamPaperDetailsDurationHours_AT;
    OutExamPaperDetailsDurationHours_AS = 
      orig.OutExamPaperDetailsDurationHours_AS;
    OutExamPaperDetailsDurationHours = orig.OutExamPaperDetailsDurationHours;
    OutExamPaperDetailsDurationMinutes_AT = 
      orig.OutExamPaperDetailsDurationMinutes_AT;
    OutExamPaperDetailsDurationMinutes_AS = 
      orig.OutExamPaperDetailsDurationMinutes_AS;
    OutExamPaperDetailsDurationMinutes = 
      orig.OutExamPaperDetailsDurationMinutes;
    OutExamPeriodDateMkExamPeriodCode_AT = 
      orig.OutExamPeriodDateMkExamPeriodCode_AT;
    OutExamPeriodDateMkExamPeriodCode_AS = 
      orig.OutExamPeriodDateMkExamPeriodCode_AS;
    OutExamPeriodDateMkExamPeriodCode = orig.OutExamPeriodDateMkExamPeriodCode;
    OutExamPeriodDateMarkreadingCode_AT = 
      orig.OutExamPeriodDateMarkreadingCode_AT;
    OutExamPeriodDateMarkreadingCode_AS = 
      orig.OutExamPeriodDateMarkreadingCode_AS;
    OutExamPeriodDateMarkreadingCode = orig.OutExamPeriodDateMarkreadingCode;
    OutExamPeriodDateScriptMarkTot_AT = orig.OutExamPeriodDateScriptMarkTot_AT;
    OutExamPeriodDateScriptMarkTot_AS = orig.OutExamPeriodDateScriptMarkTot_AS;
    OutExamPeriodDateScriptMarkTot = orig.OutExamPeriodDateScriptMarkTot;
    OutExamPeriodDateMarkreadTot_AT = orig.OutExamPeriodDateMarkreadTot_AT;
    OutExamPeriodDateMarkreadTot_AS = orig.OutExamPeriodDateMarkreadTot_AS;
    OutExamPeriodDateMarkreadTot = orig.OutExamPeriodDateMarkreadTot;
    OutExamPeriodDatePaperMarkTot_AT = orig.OutExamPeriodDatePaperMarkTot_AT;
    OutExamPeriodDatePaperMarkTot_AS = orig.OutExamPeriodDatePaperMarkTot_AS;
    OutExamPeriodDatePaperMarkTot = orig.OutExamPeriodDatePaperMarkTot;
    OutExamPeriodDateDate_AT = orig.OutExamPeriodDateDate_AT;
    OutExamPeriodDateDate_AS = orig.OutExamPeriodDateDate_AS;
    OutExamPeriodDateDate = orig.OutExamPeriodDateDate;
    OutExamPeriodDateStartingTime_AT = orig.OutExamPeriodDateStartingTime_AT;
    OutExamPeriodDateStartingTime_AS = orig.OutExamPeriodDateStartingTime_AS;
    OutExamPeriodDateStartingTime = orig.OutExamPeriodDateStartingTime;
    OutCsfClientServerCommunicationsReturnCode_AT = 
      orig.OutCsfClientServerCommunicationsReturnCode_AT;
    OutCsfClientServerCommunicationsReturnCode_AS = 
      orig.OutCsfClientServerCommunicationsReturnCode_AS;
    OutCsfClientServerCommunicationsReturnCode = 
      orig.OutCsfClientServerCommunicationsReturnCode;
    OutCsfClientServerCommunicationsServerVersionNumber_AT = 
      orig.OutCsfClientServerCommunicationsServerVersionNumber_AT;
    OutCsfClientServerCommunicationsServerVersionNumber_AS = 
      orig.OutCsfClientServerCommunicationsServerVersionNumber_AS;
    OutCsfClientServerCommunicationsServerVersionNumber = 
      orig.OutCsfClientServerCommunicationsServerVersionNumber;
    OutCsfClientServerCommunicationsServerRevisionNumber_AT = 
      orig.OutCsfClientServerCommunicationsServerRevisionNumber_AT;
    OutCsfClientServerCommunicationsServerRevisionNumber_AS = 
      orig.OutCsfClientServerCommunicationsServerRevisionNumber_AS;
    OutCsfClientServerCommunicationsServerRevisionNumber = 
      orig.OutCsfClientServerCommunicationsServerRevisionNumber;
    OutCsfClientServerCommunicationsServerDevelopmentPhase_AT = 
      orig.OutCsfClientServerCommunicationsServerDevelopmentPhase_AT;
    OutCsfClientServerCommunicationsServerDevelopmentPhase_AS = 
      orig.OutCsfClientServerCommunicationsServerDevelopmentPhase_AS;
    OutCsfClientServerCommunicationsServerDevelopmentPhase = 
      orig.OutCsfClientServerCommunicationsServerDevelopmentPhase;
    OutCsfClientServerCommunicationsAction_AT = 
      orig.OutCsfClientServerCommunicationsAction_AT;
    OutCsfClientServerCommunicationsAction_AS = 
      orig.OutCsfClientServerCommunicationsAction_AS;
    OutCsfClientServerCommunicationsAction = 
      orig.OutCsfClientServerCommunicationsAction;
    OutCsfClientServerCommunicationsClientIsGuiFlag_AT = 
      orig.OutCsfClientServerCommunicationsClientIsGuiFlag_AT;
    OutCsfClientServerCommunicationsClientIsGuiFlag_AS = 
      orig.OutCsfClientServerCommunicationsClientIsGuiFlag_AS;
    OutCsfClientServerCommunicationsClientIsGuiFlag = 
      orig.OutCsfClientServerCommunicationsClientIsGuiFlag;
    OutCsfClientServerCommunicationsServerDate_AT = 
      orig.OutCsfClientServerCommunicationsServerDate_AT;
    OutCsfClientServerCommunicationsServerDate_AS = 
      orig.OutCsfClientServerCommunicationsServerDate_AS;
    OutCsfClientServerCommunicationsServerDate = 
      orig.OutCsfClientServerCommunicationsServerDate;
    OutCsfClientServerCommunicationsServerTime_AT = 
      orig.OutCsfClientServerCommunicationsServerTime_AT;
    OutCsfClientServerCommunicationsServerTime_AS = 
      orig.OutCsfClientServerCommunicationsServerTime_AS;
    OutCsfClientServerCommunicationsServerTime = 
      orig.OutCsfClientServerCommunicationsServerTime;
    OutCsfClientServerCommunicationsServerTimestamp_AT = 
      orig.OutCsfClientServerCommunicationsServerTimestamp_AT;
    OutCsfClientServerCommunicationsServerTimestamp_AS = 
      orig.OutCsfClientServerCommunicationsServerTimestamp_AS;
    OutCsfClientServerCommunicationsServerTimestamp = 
      orig.OutCsfClientServerCommunicationsServerTimestamp;
    OutCsfClientServerCommunicationsServerTransactionCode_AT = 
      orig.OutCsfClientServerCommunicationsServerTransactionCode_AT;
    OutCsfClientServerCommunicationsServerTransactionCode_AS = 
      orig.OutCsfClientServerCommunicationsServerTransactionCode_AS;
    OutCsfClientServerCommunicationsServerTransactionCode = 
      orig.OutCsfClientServerCommunicationsServerTransactionCode;
    OutCsfClientServerCommunicationsServerUserId_AT = 
      orig.OutCsfClientServerCommunicationsServerUserId_AT;
    OutCsfClientServerCommunicationsServerUserId_AS = 
      orig.OutCsfClientServerCommunicationsServerUserId_AS;
    OutCsfClientServerCommunicationsServerUserId = 
      orig.OutCsfClientServerCommunicationsServerUserId;
    OutCsfClientServerCommunicationsServerRollbackFlag_AT = 
      orig.OutCsfClientServerCommunicationsServerRollbackFlag_AT;
    OutCsfClientServerCommunicationsServerRollbackFlag_AS = 
      orig.OutCsfClientServerCommunicationsServerRollbackFlag_AS;
    OutCsfClientServerCommunicationsServerRollbackFlag = 
      orig.OutCsfClientServerCommunicationsServerRollbackFlag;
    OutCsfClientServerCommunicationsActionsPendingFlag_AT = 
      orig.OutCsfClientServerCommunicationsActionsPendingFlag_AT;
    OutCsfClientServerCommunicationsActionsPendingFlag_AS = 
      orig.OutCsfClientServerCommunicationsActionsPendingFlag_AS;
    OutCsfClientServerCommunicationsActionsPendingFlag = 
      orig.OutCsfClientServerCommunicationsActionsPendingFlag;
    OutCsfClientServerCommunicationsClientVersionNumber_AT = 
      orig.OutCsfClientServerCommunicationsClientVersionNumber_AT;
    OutCsfClientServerCommunicationsClientVersionNumber_AS = 
      orig.OutCsfClientServerCommunicationsClientVersionNumber_AS;
    OutCsfClientServerCommunicationsClientVersionNumber = 
      orig.OutCsfClientServerCommunicationsClientVersionNumber;
    OutCsfClientServerCommunicationsClientRevisionNumber_AT = 
      orig.OutCsfClientServerCommunicationsClientRevisionNumber_AT;
    OutCsfClientServerCommunicationsClientRevisionNumber_AS = 
      orig.OutCsfClientServerCommunicationsClientRevisionNumber_AS;
    OutCsfClientServerCommunicationsClientRevisionNumber = 
      orig.OutCsfClientServerCommunicationsClientRevisionNumber;
    OutCsfClientServerCommunicationsClientDevelopmentPhase_AT = 
      orig.OutCsfClientServerCommunicationsClientDevelopmentPhase_AT;
    OutCsfClientServerCommunicationsClientDevelopmentPhase_AS = 
      orig.OutCsfClientServerCommunicationsClientDevelopmentPhase_AS;
    OutCsfClientServerCommunicationsClientDevelopmentPhase = 
      orig.OutCsfClientServerCommunicationsClientDevelopmentPhase;
    OutCsfClientServerCommunicationsListLinkFlag_AT = 
      orig.OutCsfClientServerCommunicationsListLinkFlag_AT;
    OutCsfClientServerCommunicationsListLinkFlag_AS = 
      orig.OutCsfClientServerCommunicationsListLinkFlag_AS;
    OutCsfClientServerCommunicationsListLinkFlag = 
      orig.OutCsfClientServerCommunicationsListLinkFlag;
    OutCsfClientServerCommunicationsCancelFlag_AT = 
      orig.OutCsfClientServerCommunicationsCancelFlag_AT;
    OutCsfClientServerCommunicationsCancelFlag_AS = 
      orig.OutCsfClientServerCommunicationsCancelFlag_AS;
    OutCsfClientServerCommunicationsCancelFlag = 
      orig.OutCsfClientServerCommunicationsCancelFlag;
    OutCsfClientServerCommunicationsMaintLinkFlag_AT = 
      orig.OutCsfClientServerCommunicationsMaintLinkFlag_AT;
    OutCsfClientServerCommunicationsMaintLinkFlag_AS = 
      orig.OutCsfClientServerCommunicationsMaintLinkFlag_AS;
    OutCsfClientServerCommunicationsMaintLinkFlag = 
      orig.OutCsfClientServerCommunicationsMaintLinkFlag;
    OutCsfClientServerCommunicationsForceDatabaseRead_AT = 
      orig.OutCsfClientServerCommunicationsForceDatabaseRead_AT;
    OutCsfClientServerCommunicationsForceDatabaseRead_AS = 
      orig.OutCsfClientServerCommunicationsForceDatabaseRead_AS;
    OutCsfClientServerCommunicationsForceDatabaseRead = 
      orig.OutCsfClientServerCommunicationsForceDatabaseRead;
    OutCsfStringsString500_AT = orig.OutCsfStringsString500_AT;
    OutCsfStringsString500_AS = orig.OutCsfStringsString500_AS;
    OutCsfStringsString500 = orig.OutCsfStringsString500;
    OutExaminersGroup_MA = orig.OutExaminersGroup_MA;
    for(int a = 0; a < 30; a++)
    {
      OutExaminersGroup_AC[a] = orig.OutExaminersGroup_AC[a];
      OutGWsExaminerSurname_AT[a] = orig.OutGWsExaminerSurname_AT[a];
      OutGWsExaminerSurname_AS[a] = orig.OutGWsExaminerSurname_AS[a];
      OutGWsExaminerSurname[a] = orig.OutGWsExaminerSurname[a];
      OutGWsExaminerInitials_AT[a] = orig.OutGWsExaminerInitials_AT[a];
      OutGWsExaminerInitials_AS[a] = orig.OutGWsExaminerInitials_AS[a];
      OutGWsExaminerInitials[a] = orig.OutGWsExaminerInitials[a];
      OutGWsExaminerTitle_AT[a] = orig.OutGWsExaminerTitle_AT[a];
      OutGWsExaminerTitle_AS[a] = orig.OutGWsExaminerTitle_AS[a];
      OutGWsExaminerTitle[a] = orig.OutGWsExaminerTitle[a];
      OutGExaminerTypeCsfStringsString3_AT[a] = 
        orig.OutGExaminerTypeCsfStringsString3_AT[a];
      OutGExaminerTypeCsfStringsString3_AS[a] = 
        orig.OutGExaminerTypeCsfStringsString3_AS[a];
      OutGExaminerTypeCsfStringsString3[a] = 
        orig.OutGExaminerTypeCsfStringsString3[a];
      OutGWsEducationalInstitutionEngName_AT[a] = 
        orig.OutGWsEducationalInstitutionEngName_AT[a];
      OutGWsEducationalInstitutionEngName_AS[a] = 
        orig.OutGWsEducationalInstitutionEngName_AS[a];
      OutGWsEducationalInstitutionEngName[a] = 
        orig.OutGWsEducationalInstitutionEngName[a];
    }
    OutEquivalentGroup_MA = orig.OutEquivalentGroup_MA;
    for(int a = 0; a < 20; a++)
    {
      OutEquivalentGroup_AC[a] = orig.OutEquivalentGroup_AC[a];
      OutGEquivalentWsExamEquivalentsWsEquivalentCode_AT[a] = 
        orig.OutGEquivalentWsExamEquivalentsWsEquivalentCode_AT[a];
      OutGEquivalentWsExamEquivalentsWsEquivalentCode_AS[a] = 
        orig.OutGEquivalentWsExamEquivalentsWsEquivalentCode_AS[a];
      OutGEquivalentWsExamEquivalentsWsEquivalentCode[a] = 
        orig.OutGEquivalentWsExamEquivalentsWsEquivalentCode[a];
      OutGWsUniqueAssignmentUniqueNr_AT[a] = 
        orig.OutGWsUniqueAssignmentUniqueNr_AT[a];
      OutGWsUniqueAssignmentUniqueNr_AS[a] = 
        orig.OutGWsUniqueAssignmentUniqueNr_AS[a];
      OutGWsUniqueAssignmentUniqueNr[a] = orig.OutGWsUniqueAssignmentUniqueNr[a]
        ;
      OutGEquivalentExamPeriodDateDate_AT[a] = 
        orig.OutGEquivalentExamPeriodDateDate_AT[a];
      OutGEquivalentExamPeriodDateDate_AS[a] = 
        orig.OutGEquivalentExamPeriodDateDate_AS[a];
      OutGEquivalentExamPeriodDateDate[a] = 
        orig.OutGEquivalentExamPeriodDateDate[a];
      OutGEquivalentExamPeriodDateDurationDays_AT[a] = 
        orig.OutGEquivalentExamPeriodDateDurationDays_AT[a];
      OutGEquivalentExamPeriodDateDurationDays_AS[a] = 
        orig.OutGEquivalentExamPeriodDateDurationDays_AS[a];
      OutGEquivalentExamPeriodDateDurationDays[a] = 
        orig.OutGEquivalentExamPeriodDateDurationDays[a];
      OutGEquivalentExamPeriodDateDurationHours_AT[a] = 
        orig.OutGEquivalentExamPeriodDateDurationHours_AT[a];
      OutGEquivalentExamPeriodDateDurationHours_AS[a] = 
        orig.OutGEquivalentExamPeriodDateDurationHours_AS[a];
      OutGEquivalentExamPeriodDateDurationHours[a] = 
        orig.OutGEquivalentExamPeriodDateDurationHours[a];
      OutGEquivalentExamPeriodDateDurationMinutes_AT[a] = 
        orig.OutGEquivalentExamPeriodDateDurationMinutes_AT[a];
      OutGEquivalentExamPeriodDateDurationMinutes_AS[a] = 
        orig.OutGEquivalentExamPeriodDateDurationMinutes_AS[a];
      OutGEquivalentExamPeriodDateDurationMinutes[a] = 
        orig.OutGEquivalentExamPeriodDateDurationMinutes[a];
      OutGEquivalentExamPeriodDateStartingTime_AT[a] = 
        orig.OutGEquivalentExamPeriodDateStartingTime_AT[a];
      OutGEquivalentExamPeriodDateStartingTime_AS[a] = 
        orig.OutGEquivalentExamPeriodDateStartingTime_AS[a];
      OutGEquivalentExamPeriodDateStartingTime[a] = 
        orig.OutGEquivalentExamPeriodDateStartingTime[a];
    }
    OutExamStationaryGroup_MA = orig.OutExamStationaryGroup_MA;
    for(int a = 0; a < 20; a++)
    {
      OutExamStationaryGroup_AC[a] = orig.OutExamStationaryGroup_AC[a];
      OutGExamStationeryItemCode_AT[a] = orig.OutGExamStationeryItemCode_AT[a];
      OutGExamStationeryItemCode_AS[a] = orig.OutGExamStationeryItemCode_AS[a];
      OutGExamStationeryItemCode[a] = orig.OutGExamStationeryItemCode[a];
      OutGExamPaperStationeryNeedsAveragePerStudent_AT[a] = 
        orig.OutGExamPaperStationeryNeedsAveragePerStudent_AT[a];
      OutGExamPaperStationeryNeedsAveragePerStudent_AS[a] = 
        orig.OutGExamPaperStationeryNeedsAveragePerStudent_AS[a];
      OutGExamPaperStationeryNeedsAveragePerStudent[a] = 
        orig.OutGExamPaperStationeryNeedsAveragePerStudent[a];
    }
    OutExamInstructionGroup_MA = orig.OutExamInstructionGroup_MA;
    for(int a = 0; a < 25; a++)
    {
      OutExamInstructionGroup_AC[a] = orig.OutExamInstructionGroup_AC[a];
      OutGExamDateInstructionMkDocumentParagraphCode_AT[a] = 
        orig.OutGExamDateInstructionMkDocumentParagraphCode_AT[a];
      OutGExamDateInstructionMkDocumentParagraphCode_AS[a] = 
        orig.OutGExamDateInstructionMkDocumentParagraphCode_AS[a];
      OutGExamDateInstructionMkDocumentParagraphCode[a] = 
        orig.OutGExamDateInstructionMkDocumentParagraphCode[a];
      OutGExamDateInstructionMkWidthType_AT[a] = 
        orig.OutGExamDateInstructionMkWidthType_AT[a];
      OutGExamDateInstructionMkWidthType_AS[a] = 
        orig.OutGExamDateInstructionMkWidthType_AS[a];
      OutGExamDateInstructionMkWidthType[a] = 
        orig.OutGExamDateInstructionMkWidthType[a];
      OutGExamDateInstructionMkContents_AT[a] = 
        orig.OutGExamDateInstructionMkContents_AT[a];
      OutGExamDateInstructionMkContents_AS[a] = 
        orig.OutGExamDateInstructionMkContents_AS[a];
      OutGExamDateInstructionMkContents[a] = 
        orig.OutGExamDateInstructionMkContents[a];
    }
    OutPaperLanguageGroup_MA = orig.OutPaperLanguageGroup_MA;
    for(int a = 0; a < 10; a++)
    {
      OutPaperLanguageGroup_AC[a] = orig.OutPaperLanguageGroup_AC[a];
      OutGExamPaperLanguageLanguageGc40_AT[a] = 
        orig.OutGExamPaperLanguageLanguageGc40_AT[a];
      OutGExamPaperLanguageLanguageGc40_AS[a] = 
        orig.OutGExamPaperLanguageLanguageGc40_AS[a];
      OutGExamPaperLanguageLanguageGc40[a] = 
        orig.OutGExamPaperLanguageLanguageGc40[a];
    }
    OutAdditionalInstrGroup_MA = orig.OutAdditionalInstrGroup_MA;
    for(int a = 0; a < 20; a++)
    {
      OutAdditionalInstrGroup_AC[a] = orig.OutAdditionalInstrGroup_AC[a];
      OutGExamPaperAddInstructionsInstructionNr_AT[a] = 
        orig.OutGExamPaperAddInstructionsInstructionNr_AT[a];
      OutGExamPaperAddInstructionsInstructionNr_AS[a] = 
        orig.OutGExamPaperAddInstructionsInstructionNr_AS[a];
      OutGExamPaperAddInstructionsInstructionNr[a] = 
        orig.OutGExamPaperAddInstructionsInstructionNr[a];
      OutGExamPaperAddInstructionsInstruction_AT[a] = 
        orig.OutGExamPaperAddInstructionsInstruction_AT[a];
      OutGExamPaperAddInstructionsInstruction_AS[a] = 
        orig.OutGExamPaperAddInstructionsInstruction_AS[a];
      OutGExamPaperAddInstructionsInstruction[a] = 
        orig.OutGExamPaperAddInstructionsInstruction[a];
    }
    OutExamPaperLogActionGc39_AT = orig.OutExamPaperLogActionGc39_AT;
    OutExamPaperLogActionGc39_AS = orig.OutExamPaperLogActionGc39_AS;
    OutExamPaperLogActionGc39 = orig.OutExamPaperLogActionGc39;
    OutExamPaperLogUpdatedBy_AT = orig.OutExamPaperLogUpdatedBy_AT;
    OutExamPaperLogUpdatedBy_AS = orig.OutExamPaperLogUpdatedBy_AS;
    OutExamPaperLogUpdatedBy = orig.OutExamPaperLogUpdatedBy;
    OutExamPaperLogUpdatedOn_AT = orig.OutExamPaperLogUpdatedOn_AT;
    OutExamPaperLogUpdatedOn_AS = orig.OutExamPaperLogUpdatedOn_AS;
    OutExamPaperLogUpdatedOn = orig.OutExamPaperLogUpdatedOn;
    OutCoverDocketExistsFlagCsfStringsString1_AT = 
      orig.OutCoverDocketExistsFlagCsfStringsString1_AT;
    OutCoverDocketExistsFlagCsfStringsString1_AS = 
      orig.OutCoverDocketExistsFlagCsfStringsString1_AS;
    OutCoverDocketExistsFlagCsfStringsString1 = 
      orig.OutCoverDocketExistsFlagCsfStringsString1;
    OutExamPaperCoverDocketContactPersNr_AT = 
      orig.OutExamPaperCoverDocketContactPersNr_AT;
    OutExamPaperCoverDocketContactPersNr_AS = 
      orig.OutExamPaperCoverDocketContactPersNr_AS;
    OutExamPaperCoverDocketContactPersNr = 
      orig.OutExamPaperCoverDocketContactPersNr;
    OutExamPaperCoverDocketBookRequired_AT = 
      orig.OutExamPaperCoverDocketBookRequired_AT;
    OutExamPaperCoverDocketBookRequired_AS = 
      orig.OutExamPaperCoverDocketBookRequired_AS;
    OutExamPaperCoverDocketBookRequired = 
      orig.OutExamPaperCoverDocketBookRequired;
    OutExamPaperCoverDocketProofReadRequest_AT = 
      orig.OutExamPaperCoverDocketProofReadRequest_AT;
    OutExamPaperCoverDocketProofReadRequest_AS = 
      orig.OutExamPaperCoverDocketProofReadRequest_AS;
    OutExamPaperCoverDocketProofReadRequest = 
      orig.OutExamPaperCoverDocketProofReadRequest;
    OutExamPaperCoverDocketStatusGc41_AT = 
      orig.OutExamPaperCoverDocketStatusGc41_AT;
    OutExamPaperCoverDocketStatusGc41_AS = 
      orig.OutExamPaperCoverDocketStatusGc41_AS;
    OutExamPaperCoverDocketStatusGc41 = orig.OutExamPaperCoverDocketStatusGc41;
    OutExamPaperCoverDocketTotalRackPages_AT = 
      orig.OutExamPaperCoverDocketTotalRackPages_AT;
    OutExamPaperCoverDocketTotalRackPages_AS = 
      orig.OutExamPaperCoverDocketTotalRackPages_AS;
    OutExamPaperCoverDocketTotalRackPages = 
      orig.OutExamPaperCoverDocketTotalRackPages;
    OutExamPaperCoverDocketTotalPages_AT = 
      orig.OutExamPaperCoverDocketTotalPages_AT;
    OutExamPaperCoverDocketTotalPages_AS = 
      orig.OutExamPaperCoverDocketTotalPages_AS;
    OutExamPaperCoverDocketTotalPages = orig.OutExamPaperCoverDocketTotalPages;
    OutExamPaperCoverDocketAnnexurePages_AT = 
      orig.OutExamPaperCoverDocketAnnexurePages_AT;
    OutExamPaperCoverDocketAnnexurePages_AS = 
      orig.OutExamPaperCoverDocketAnnexurePages_AS;
    OutExamPaperCoverDocketAnnexurePages = 
      orig.OutExamPaperCoverDocketAnnexurePages;
    OutExamPaperCoverDocketMemorandumIncl_AT = 
      orig.OutExamPaperCoverDocketMemorandumIncl_AT;
    OutExamPaperCoverDocketMemorandumIncl_AS = 
      orig.OutExamPaperCoverDocketMemorandumIncl_AS;
    OutExamPaperCoverDocketMemorandumIncl = 
      orig.OutExamPaperCoverDocketMemorandumIncl;
    OutExamPaperCoverDocketDeclarationFlag_AT = 
      orig.OutExamPaperCoverDocketDeclarationFlag_AT;
    OutExamPaperCoverDocketDeclarationFlag_AS = 
      orig.OutExamPaperCoverDocketDeclarationFlag_AS;
    OutExamPaperCoverDocketDeclarationFlag = 
      orig.OutExamPaperCoverDocketDeclarationFlag;
    OutExamPaperCoverDocketFillInPaperGc50_AT = 
      orig.OutExamPaperCoverDocketFillInPaperGc50_AT;
    OutExamPaperCoverDocketFillInPaperGc50_AS = 
      orig.OutExamPaperCoverDocketFillInPaperGc50_AS;
    OutExamPaperCoverDocketFillInPaperGc50 = 
      orig.OutExamPaperCoverDocketFillInPaperGc50;
    OutExamPaperCoverDocketOpenBookGc50_AT = 
      orig.OutExamPaperCoverDocketOpenBookGc50_AT;
    OutExamPaperCoverDocketOpenBookGc50_AS = 
      orig.OutExamPaperCoverDocketOpenBookGc50_AS;
    OutExamPaperCoverDocketOpenBookGc50 = 
      orig.OutExamPaperCoverDocketOpenBookGc50;
    OutExamPaperCoverDocketKeepPaperFlag_AT = 
      orig.OutExamPaperCoverDocketKeepPaperFlag_AT;
    OutExamPaperCoverDocketKeepPaperFlag_AS = 
      orig.OutExamPaperCoverDocketKeepPaperFlag_AS;
    OutExamPaperCoverDocketKeepPaperFlag = 
      orig.OutExamPaperCoverDocketKeepPaperFlag;
    OutExamPaperCoverDocketCalcPermitFlag_AT = 
      orig.OutExamPaperCoverDocketCalcPermitFlag_AT;
    OutExamPaperCoverDocketCalcPermitFlag_AS = 
      orig.OutExamPaperCoverDocketCalcPermitFlag_AS;
    OutExamPaperCoverDocketCalcPermitFlag = 
      orig.OutExamPaperCoverDocketCalcPermitFlag;
    OutExamPaperCoverDocketExaminerPrtGc107_AT = 
      orig.OutExamPaperCoverDocketExaminerPrtGc107_AT;
    OutExamPaperCoverDocketExaminerPrtGc107_AS = 
      orig.OutExamPaperCoverDocketExaminerPrtGc107_AS;
    OutExamPaperCoverDocketExaminerPrtGc107 = 
      orig.OutExamPaperCoverDocketExaminerPrtGc107;
    OutExamPaperCoverDocketMcqInstrFlag_AT = 
      orig.OutExamPaperCoverDocketMcqInstrFlag_AT;
    OutExamPaperCoverDocketMcqInstrFlag_AS = 
      orig.OutExamPaperCoverDocketMcqInstrFlag_AS;
    OutExamPaperCoverDocketMcqInstrFlag = 
      orig.OutExamPaperCoverDocketMcqInstrFlag;
    OutExamPaperCoverDocketAttendRegFlag_AT = 
      orig.OutExamPaperCoverDocketAttendRegFlag_AT;
    OutExamPaperCoverDocketAttendRegFlag_AS = 
      orig.OutExamPaperCoverDocketAttendRegFlag_AS;
    OutExamPaperCoverDocketAttendRegFlag = 
      orig.OutExamPaperCoverDocketAttendRegFlag;
    OutExamPaperCoverDocketPaperColour_AT = 
      orig.OutExamPaperCoverDocketPaperColour_AT;
    OutExamPaperCoverDocketPaperColour_AS = 
      orig.OutExamPaperCoverDocketPaperColour_AS;
    OutExamPaperCoverDocketPaperColour = 
      orig.OutExamPaperCoverDocketPaperColour;
    OutExamPaperCoverDocketNrDocsSubmitted_AT = 
      orig.OutExamPaperCoverDocketNrDocsSubmitted_AT;
    OutExamPaperCoverDocketNrDocsSubmitted_AS = 
      orig.OutExamPaperCoverDocketNrDocsSubmitted_AS;
    OutExamPaperCoverDocketNrDocsSubmitted = 
      orig.OutExamPaperCoverDocketNrDocsSubmitted;
    OutWsStaffSurname_AT = orig.OutWsStaffSurname_AT;
    OutWsStaffSurname_AS = orig.OutWsStaffSurname_AS;
    OutWsStaffSurname = orig.OutWsStaffSurname;
    OutWsStaffInitials_AT = orig.OutWsStaffInitials_AT;
    OutWsStaffInitials_AS = orig.OutWsStaffInitials_AS;
    OutWsStaffInitials = orig.OutWsStaffInitials;
    OutWsStaffTitle_AT = orig.OutWsStaffTitle_AT;
    OutWsStaffTitle_AS = orig.OutWsStaffTitle_AS;
    OutWsStaffTitle = orig.OutWsStaffTitle;
    OutWsStaffEmailAddress_AT = orig.OutWsStaffEmailAddress_AT;
    OutWsStaffEmailAddress_AS = orig.OutWsStaffEmailAddress_AS;
    OutWsStaffEmailAddress = orig.OutWsStaffEmailAddress;
    OutWsStaffContactTelno_AT = orig.OutWsStaffContactTelno_AT;
    OutWsStaffContactTelno_AS = orig.OutWsStaffContactTelno_AS;
    OutWsStaffContactTelno = orig.OutWsStaffContactTelno;
    OutWsAddressV2HomeNumber_AT = orig.OutWsAddressV2HomeNumber_AT;
    OutWsAddressV2HomeNumber_AS = orig.OutWsAddressV2HomeNumber_AS;
    OutWsAddressV2HomeNumber = orig.OutWsAddressV2HomeNumber;
    OutWsAddressV2WorkNumber_AT = orig.OutWsAddressV2WorkNumber_AT;
    OutWsAddressV2WorkNumber_AS = orig.OutWsAddressV2WorkNumber_AS;
    OutWsAddressV2WorkNumber = orig.OutWsAddressV2WorkNumber;
    OutWsAddressV2CellNumber_AT = orig.OutWsAddressV2CellNumber_AT;
    OutWsAddressV2CellNumber_AS = orig.OutWsAddressV2CellNumber_AS;
    OutWsAddressV2CellNumber = orig.OutWsAddressV2CellNumber;
  }
}
