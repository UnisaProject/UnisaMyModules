package Expll01h;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                            CA Gen r8
//
//           Copyright (c) 2012 CA. All rights reserved.
//
//    Name: EXPLL01S_OA                      Date: 2012/05/15
//    User: Tanderw                          Time: 15:10:34
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen80.vwrt.*;
import com.ca.gen80.vwrt.types.*;
import com.ca.gen80.vwrt.vdf.*;
import com.ca.gen80.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: EXPLL01S_OA
 **/
public class EXPLL01S_OA extends ViewBase implements IExportView, Serializable
{
  static VDF localVdf = null;
  
  // Entity View: OUT_NR_OF_COMBINED_PAPERS
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: OutNrOfCombinedPapersIefSuppliedCount
   **/
  public char OutNrOfCombinedPapersIefSuppliedCount_AS;
  /**
   * Dynamic attribute for: OutNrOfCombinedPapersIefSuppliedCount
   **/
  public DynamicAttr OutNrOfCombinedPapersIefSuppliedCount_AT;
  /**
   * Attribute for: OutNrOfCombinedPapersIefSuppliedCount
   **/
  public int OutNrOfCombinedPapersIefSuppliedCount;
  // Entity View: OUT_NEXT
  //        Type: EXAM_TYPIST_LOG
  /**
   * Attribute missing flag for: OutNextExamTypistLogExamYear
   **/
  public char OutNextExamTypistLogExamYear_AS;
  /**
   * Dynamic attribute for: OutNextExamTypistLogExamYear
   **/
  public DynamicAttr OutNextExamTypistLogExamYear_AT;
  /**
   * Attribute for: OutNextExamTypistLogExamYear
   **/
  public short OutNextExamTypistLogExamYear;
  /**
   * Attribute missing flag for: OutNextExamTypistLogMkExamPeriodCod
   **/
  public char OutNextExamTypistLogMkExamPeriodCod_AS;
  /**
   * Dynamic attribute for: OutNextExamTypistLogMkExamPeriodCod
   **/
  public DynamicAttr OutNextExamTypistLogMkExamPeriodCod_AT;
  /**
   * Attribute for: OutNextExamTypistLogMkExamPeriodCod
   **/
  public short OutNextExamTypistLogMkExamPeriodCod;
  // Entity View: OUT_PREV
  //        Type: EXAM_TYPIST_LOG
  /**
   * Attribute missing flag for: OutPrevExamTypistLogExamYear
   **/
  public char OutPrevExamTypistLogExamYear_AS;
  /**
   * Dynamic attribute for: OutPrevExamTypistLogExamYear
   **/
  public DynamicAttr OutPrevExamTypistLogExamYear_AT;
  /**
   * Attribute for: OutPrevExamTypistLogExamYear
   **/
  public short OutPrevExamTypistLogExamYear;
  /**
   * Attribute missing flag for: OutPrevExamTypistLogMkExamPeriodCod
   **/
  public char OutPrevExamTypistLogMkExamPeriodCod_AS;
  /**
   * Dynamic attribute for: OutPrevExamTypistLogMkExamPeriodCod
   **/
  public DynamicAttr OutPrevExamTypistLogMkExamPeriodCod_AT;
  /**
   * Attribute for: OutPrevExamTypistLogMkExamPeriodCod
   **/
  public short OutPrevExamTypistLogMkExamPeriodCod;
  // Entity View: OUT_KEY
  //        Type: EXAM_TYPIST_LOG
  /**
   * Attribute missing flag for: OutKeyExamTypistLogExamYear
   **/
  public char OutKeyExamTypistLogExamYear_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogExamYear
   **/
  public DynamicAttr OutKeyExamTypistLogExamYear_AT;
  /**
   * Attribute for: OutKeyExamTypistLogExamYear
   **/
  public short OutKeyExamTypistLogExamYear;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogMkExamPeriodCod
   **/
  public char OutKeyExamTypistLogMkExamPeriodCod_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogMkExamPeriodCod
   **/
  public DynamicAttr OutKeyExamTypistLogMkExamPeriodCod_AT;
  /**
   * Attribute for: OutKeyExamTypistLogMkExamPeriodCod
   **/
  public short OutKeyExamTypistLogMkExamPeriodCod;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogMkStudyUnitCode
   **/
  public char OutKeyExamTypistLogMkStudyUnitCode_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogMkStudyUnitCode
   **/
  public DynamicAttr OutKeyExamTypistLogMkStudyUnitCode_AT;
  /**
   * Attribute for: OutKeyExamTypistLogMkStudyUnitCode
   **/
  public String OutKeyExamTypistLogMkStudyUnitCode;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogCombinedWith
   **/
  public char OutKeyExamTypistLogCombinedWith_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogCombinedWith
   **/
  public DynamicAttr OutKeyExamTypistLogCombinedWith_AT;
  /**
   * Attribute for: OutKeyExamTypistLogCombinedWith
   **/
  public String OutKeyExamTypistLogCombinedWith;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogRemarks
   **/
  public char OutKeyExamTypistLogRemarks_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogRemarks
   **/
  public DynamicAttr OutKeyExamTypistLogRemarks_AT;
  /**
   * Attribute for: OutKeyExamTypistLogRemarks
   **/
  public String OutKeyExamTypistLogRemarks;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogRemarks2
   **/
  public char OutKeyExamTypistLogRemarks2_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogRemarks2
   **/
  public DynamicAttr OutKeyExamTypistLogRemarks2_AT;
  /**
   * Attribute for: OutKeyExamTypistLogRemarks2
   **/
  public String OutKeyExamTypistLogRemarks2;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogRemarks3
   **/
  public char OutKeyExamTypistLogRemarks3_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogRemarks3
   **/
  public DynamicAttr OutKeyExamTypistLogRemarks3_AT;
  /**
   * Attribute for: OutKeyExamTypistLogRemarks3
   **/
  public String OutKeyExamTypistLogRemarks3;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogRemarks4
   **/
  public char OutKeyExamTypistLogRemarks4_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogRemarks4
   **/
  public DynamicAttr OutKeyExamTypistLogRemarks4_AT;
  /**
   * Attribute for: OutKeyExamTypistLogRemarks4
   **/
  public String OutKeyExamTypistLogRemarks4;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogRemarks5
   **/
  public char OutKeyExamTypistLogRemarks5_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogRemarks5
   **/
  public DynamicAttr OutKeyExamTypistLogRemarks5_AT;
  /**
   * Attribute for: OutKeyExamTypistLogRemarks5
   **/
  public String OutKeyExamTypistLogRemarks5;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogRemarks6
   **/
  public char OutKeyExamTypistLogRemarks6_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogRemarks6
   **/
  public DynamicAttr OutKeyExamTypistLogRemarks6_AT;
  /**
   * Attribute for: OutKeyExamTypistLogRemarks6
   **/
  public String OutKeyExamTypistLogRemarks6;
  /**
   * Attribute missing flag for: OutKeyExamTypistLogPaperExpected
   **/
  public char OutKeyExamTypistLogPaperExpected_AS;
  /**
   * Dynamic attribute for: OutKeyExamTypistLogPaperExpected
   **/
  public DynamicAttr OutKeyExamTypistLogPaperExpected_AT;
  /**
   * Attribute for: OutKeyExamTypistLogPaperExpected
   **/
  public String OutKeyExamTypistLogPaperExpected;
  // Entity View: OUT_SEARCH_CRITERIA
  //        Type: EXAM_TYPIST_LOG
  /**
   * Attribute missing flag for: OutSearchCriteriaExamTypistLogExamYear
   **/
  public char OutSearchCriteriaExamTypistLogExamYear_AS;
  /**
   * Dynamic attribute for: OutSearchCriteriaExamTypistLogExamYear
   **/
  public DynamicAttr OutSearchCriteriaExamTypistLogExamYear_AT;
  /**
   * Attribute for: OutSearchCriteriaExamTypistLogExamYear
   **/
  public short OutSearchCriteriaExamTypistLogExamYear;
  /**
   * Attribute missing flag for: OutSearchCriteriaExamTypistLogMkExamPeriodCod
   **/
  public char OutSearchCriteriaExamTypistLogMkExamPeriodCod_AS;
  /**
   * Dynamic attribute for: OutSearchCriteriaExamTypistLogMkExamPeriodCod
   **/
  public DynamicAttr OutSearchCriteriaExamTypistLogMkExamPeriodCod_AT;
  /**
   * Attribute for: OutSearchCriteriaExamTypistLogMkExamPeriodCod
   **/
  public short OutSearchCriteriaExamTypistLogMkExamPeriodCod;
  /**
   * Attribute missing flag for: OutSearchCriteriaExamTypistLogMkStudyUnitCode
   **/
  public char OutSearchCriteriaExamTypistLogMkStudyUnitCode_AS;
  /**
   * Dynamic attribute for: OutSearchCriteriaExamTypistLogMkStudyUnitCode
   **/
  public DynamicAttr OutSearchCriteriaExamTypistLogMkStudyUnitCode_AT;
  /**
   * Attribute for: OutSearchCriteriaExamTypistLogMkStudyUnitCode
   **/
  public String OutSearchCriteriaExamTypistLogMkStudyUnitCode;
  // Repeating GV:  OUT_LOG_ENTRIES_GRP
  //     Repeats: 5 times
  /**
   * Repeating group view count
   **/
  public int OutLogEntriesGrp_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutLogEntriesGrp_AC[] = new char[5];
  // Entity View: OUT_G_CALC_QUANT
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: OutGCalcQuantIefSuppliedCount
   **/
  public char OutGCalcQuantIefSuppliedCount_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGCalcQuantIefSuppliedCount
   **/
  public DynamicAttr OutGCalcQuantIefSuppliedCount_AT[] = new DynamicAttr[5];
  /**
   * Attribute for: OutGCalcQuantIefSuppliedCount
   **/
  public int OutGCalcQuantIefSuppliedCount[] = new int[5];
  // Entity View: OUT_G_PAPER_COLOUR
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: OutGPaperColourCsfStringsString10
   **/
  public char OutGPaperColourCsfStringsString10_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGPaperColourCsfStringsString10
   **/
  public DynamicAttr OutGPaperColourCsfStringsString10_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGPaperColourCsfStringsString10
   **/
  public String OutGPaperColourCsfStringsString10[] = new String[5];
  // Entity View: OUT_G
  //        Type: EXAM_PERIOD_DATE
  /**
   * Attribute missing flag for: OutGExamPeriodDateDate
   **/
  public char OutGExamPeriodDateDate_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamPeriodDateDate
   **/
  public DynamicAttr OutGExamPeriodDateDate_AT[] = new DynamicAttr[5];
  /**
   * Attribute for: OutGExamPeriodDateDate
   **/
  public int OutGExamPeriodDateDate[] = new int[5];
  // Entity View: OUT_G
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: OutGIefSuppliedCount
   **/
  public char OutGIefSuppliedCount_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGIefSuppliedCount
   **/
  public DynamicAttr OutGIefSuppliedCount_AT[] = new DynamicAttr[5];
  /**
   * Attribute for: OutGIefSuppliedCount
   **/
  public int OutGIefSuppliedCount[] = new int[5];
  /**
   * Attribute missing flag for: OutGIefSuppliedCommand
   **/
  public char OutGIefSuppliedCommand_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGIefSuppliedCommand
   **/
  public DynamicAttr OutGIefSuppliedCommand_AT[] = new DynamicAttr[5];
  /**
   * Attribute for: OutGIefSuppliedCommand
   **/
  public String OutGIefSuppliedCommand[] = new String[5];
  /**
   * Attribute missing flag for: OutGIefSuppliedSelectChar
   **/
  public char OutGIefSuppliedSelectChar_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGIefSuppliedSelectChar
   **/
  public DynamicAttr OutGIefSuppliedSelectChar_AT[] = new DynamicAttr[5];
  /**
   * Attribute for: OutGIefSuppliedSelectChar
   **/
  public String OutGIefSuppliedSelectChar[] = new String[5];
  // Entity View: OUT_G
  //        Type: EXAM_TYPIST_LOG_ENTRY
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryPaperNo
   **/
  public char OutGExamTypistLogEntryPaperNo_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryPaperNo
   **/
  public DynamicAttr OutGExamTypistLogEntryPaperNo_AT[] = new DynamicAttr[5];
  /**
   * Attribute for: OutGExamTypistLogEntryPaperNo
   **/
  public short OutGExamTypistLogEntryPaperNo[] = new short[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryTypist
   **/
  public char OutGExamTypistLogEntryTypist_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryTypist
   **/
  public DynamicAttr OutGExamTypistLogEntryTypist_AT[] = new DynamicAttr[5];
  /**
   * Attribute for: OutGExamTypistLogEntryTypist
   **/
  public String OutGExamTypistLogEntryTypist[] = new String[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryPaperFormat
   **/
  public char OutGExamTypistLogEntryPaperFormat_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryPaperFormat
   **/
  public DynamicAttr OutGExamTypistLogEntryPaperFormat_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGExamTypistLogEntryPaperFormat
   **/
  public String OutGExamTypistLogEntryPaperFormat[] = new String[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateReceived
   **/
  public char OutGExamTypistLogEntryDateReceived_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateReceived
   **/
  public DynamicAttr OutGExamTypistLogEntryDateReceived_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryDateReceived
   **/
  public int OutGExamTypistLogEntryDateReceived[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateProof1
   **/
  public char OutGExamTypistLogEntryDateProof1_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateProof1
   **/
  public DynamicAttr OutGExamTypistLogEntryDateProof1_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGExamTypistLogEntryDateProof1
   **/
  public int OutGExamTypistLogEntryDateProof1[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateProof2
   **/
  public char OutGExamTypistLogEntryDateProof2_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateProof2
   **/
  public DynamicAttr OutGExamTypistLogEntryDateProof2_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGExamTypistLogEntryDateProof2
   **/
  public int OutGExamTypistLogEntryDateProof2[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateProof3
   **/
  public char OutGExamTypistLogEntryDateProof3_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateProof3
   **/
  public DynamicAttr OutGExamTypistLogEntryDateProof3_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGExamTypistLogEntryDateProof3
   **/
  public int OutGExamTypistLogEntryDateProof3[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateToPrint
   **/
  public char OutGExamTypistLogEntryDateToPrint_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateToPrint
   **/
  public DynamicAttr OutGExamTypistLogEntryDateToPrint_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGExamTypistLogEntryDateToPrint
   **/
  public int OutGExamTypistLogEntryDateToPrint[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryCpfReportPrinted
   **/
  public char OutGExamTypistLogEntryCpfReportPrinted_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryCpfReportPrinted
   **/
  public DynamicAttr OutGExamTypistLogEntryCpfReportPrinted_AT[] = new 
    DynamicAttr[5];
  /**
   * Attribute for: OutGExamTypistLogEntryCpfReportPrinted
   **/
  public String OutGExamTypistLogEntryCpfReportPrinted[] = new String[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateInSafe
   **/
  public char OutGExamTypistLogEntryDateInSafe_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateInSafe
   **/
  public DynamicAttr OutGExamTypistLogEntryDateInSafe_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGExamTypistLogEntryDateInSafe
   **/
  public int OutGExamTypistLogEntryDateInSafe[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateToDept
   **/
  public char OutGExamTypistLogEntryDateToDept_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateToDept
   **/
  public DynamicAttr OutGExamTypistLogEntryDateToDept_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGExamTypistLogEntryDateToDept
   **/
  public int OutGExamTypistLogEntryDateToDept[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateFromDept
   **/
  public char OutGExamTypistLogEntryDateFromDept_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateFromDept
   **/
  public DynamicAttr OutGExamTypistLogEntryDateFromDept_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryDateFromDept
   **/
  public int OutGExamTypistLogEntryDateFromDept[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDate2ToPrint
   **/
  public char OutGExamTypistLogEntryDate2ToPrint_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDate2ToPrint
   **/
  public DynamicAttr OutGExamTypistLogEntryDate2ToPrint_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryDate2ToPrint
   **/
  public int OutGExamTypistLogEntryDate2ToPrint[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDate2FromPrint
   **/
  public char OutGExamTypistLogEntryDate2FromPrint_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDate2FromPrint
   **/
  public DynamicAttr OutGExamTypistLogEntryDate2FromPrint_AT[] = new 
    DynamicAttr[5];
  /**
   * Attribute for: OutGExamTypistLogEntryDate2FromPrint
   **/
  public int OutGExamTypistLogEntryDate2FromPrint[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDate3ToPrint
   **/
  public char OutGExamTypistLogEntryDate3ToPrint_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDate3ToPrint
   **/
  public DynamicAttr OutGExamTypistLogEntryDate3ToPrint_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryDate3ToPrint
   **/
  public int OutGExamTypistLogEntryDate3ToPrint[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDate3FromPrint
   **/
  public char OutGExamTypistLogEntryDate3FromPrint_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDate3FromPrint
   **/
  public DynamicAttr OutGExamTypistLogEntryDate3FromPrint_AT[] = new 
    DynamicAttr[5];
  /**
   * Attribute for: OutGExamTypistLogEntryDate3FromPrint
   **/
  public int OutGExamTypistLogEntryDate3FromPrint[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryQuant3ToPrint
   **/
  public char OutGExamTypistLogEntryQuant3ToPrint_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryQuant3ToPrint
   **/
  public DynamicAttr OutGExamTypistLogEntryQuant3ToPrint_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryQuant3ToPrint
   **/
  public int OutGExamTypistLogEntryQuant3ToPrint[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryQuantToPrint
   **/
  public char OutGExamTypistLogEntryQuantToPrint_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryQuantToPrint
   **/
  public DynamicAttr OutGExamTypistLogEntryQuantToPrint_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryQuantToPrint
   **/
  public int OutGExamTypistLogEntryQuantToPrint[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryQuantCalcedOn
   **/
  public char OutGExamTypistLogEntryQuantCalcedOn_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryQuantCalcedOn
   **/
  public DynamicAttr OutGExamTypistLogEntryQuantCalcedOn_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryQuantCalcedOn
   **/
  public int OutGExamTypistLogEntryQuantCalcedOn[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryQuant2ToPrint
   **/
  public char OutGExamTypistLogEntryQuant2ToPrint_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryQuant2ToPrint
   **/
  public DynamicAttr OutGExamTypistLogEntryQuant2ToPrint_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryQuant2ToPrint
   **/
  public int OutGExamTypistLogEntryQuant2ToPrint[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryQuant2CalcedOn
   **/
  public char OutGExamTypistLogEntryQuant2CalcedOn_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryQuant2CalcedOn
   **/
  public DynamicAttr OutGExamTypistLogEntryQuant2CalcedOn_AT[] = new 
    DynamicAttr[5];
  /**
   * Attribute for: OutGExamTypistLogEntryQuant2CalcedOn
   **/
  public int OutGExamTypistLogEntryQuant2CalcedOn[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntrySurplusQuant
   **/
  public char OutGExamTypistLogEntrySurplusQuant_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntrySurplusQuant
   **/
  public DynamicAttr OutGExamTypistLogEntrySurplusQuant_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntrySurplusQuant
   **/
  public int OutGExamTypistLogEntrySurplusQuant[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateScanned
   **/
  public char OutGExamTypistLogEntryDateScanned_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateScanned
   **/
  public DynamicAttr OutGExamTypistLogEntryDateScanned_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGExamTypistLogEntryDateScanned
   **/
  public int OutGExamTypistLogEntryDateScanned[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDateAfrScanned
   **/
  public char OutGExamTypistLogEntryDateAfrScanned_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDateAfrScanned
   **/
  public DynamicAttr OutGExamTypistLogEntryDateAfrScanned_AT[] = new 
    DynamicAttr[5];
  /**
   * Attribute for: OutGExamTypistLogEntryDateAfrScanned
   **/
  public int OutGExamTypistLogEntryDateAfrScanned[] = new int[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryOpenForWeb
   **/
  public char OutGExamTypistLogEntryOpenForWeb_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryOpenForWeb
   **/
  public DynamicAttr OutGExamTypistLogEntryOpenForWeb_AT[] = new DynamicAttr[5]
    ;
  /**
   * Attribute for: OutGExamTypistLogEntryOpenForWeb
   **/
  public String OutGExamTypistLogEntryOpenForWeb[] = new String[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryDocketChanges
   **/
  public char OutGExamTypistLogEntryDocketChanges_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryDocketChanges
   **/
  public DynamicAttr OutGExamTypistLogEntryDocketChanges_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryDocketChanges
   **/
  public String OutGExamTypistLogEntryDocketChanges[] = new String[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryPaperChanges
   **/
  public char OutGExamTypistLogEntryPaperChanges_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryPaperChanges
   **/
  public DynamicAttr OutGExamTypistLogEntryPaperChanges_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGExamTypistLogEntryPaperChanges
   **/
  public String OutGExamTypistLogEntryPaperChanges[] = new String[5];
  /**
   * Attribute missing flag for: OutGExamTypistLogEntryElectronicPaper
   **/
  public char OutGExamTypistLogEntryElectronicPaper_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGExamTypistLogEntryElectronicPaper
   **/
  public DynamicAttr OutGExamTypistLogEntryElectronicPaper_AT[] = new 
    DynamicAttr[5];
  /**
   * Attribute for: OutGExamTypistLogEntryElectronicPaper
   **/
  public String OutGExamTypistLogEntryElectronicPaper[] = new String[5];
  // Entity View: OUT_G_MYUNISA
  //        Type: WS_REGISTRATION_DATES
  /**
   * Attribute missing flag for: OutGMyunisaWsRegistrationDatesFromDate
   **/
  public char OutGMyunisaWsRegistrationDatesFromDate_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGMyunisaWsRegistrationDatesFromDate
   **/
  public DynamicAttr OutGMyunisaWsRegistrationDatesFromDate_AT[] = new 
    DynamicAttr[5];
  /**
   * Attribute for: OutGMyunisaWsRegistrationDatesFromDate
   **/
  public int OutGMyunisaWsRegistrationDatesFromDate[] = new int[5];
  // Entity View: OUT_G_ENG_PAPER
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: OutGEngPaperCsfStringsString1
   **/
  public char OutGEngPaperCsfStringsString1_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGEngPaperCsfStringsString1
   **/
  public DynamicAttr OutGEngPaperCsfStringsString1_AT[] = new DynamicAttr[5];
  /**
   * Attribute for: OutGEngPaperCsfStringsString1
   **/
  public String OutGEngPaperCsfStringsString1[] = new String[5];
  // Entity View: OUT_G_AFR_PAPER
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: OutGAfrPaperCsfStringsString1
   **/
  public char OutGAfrPaperCsfStringsString1_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGAfrPaperCsfStringsString1
   **/
  public DynamicAttr OutGAfrPaperCsfStringsString1_AT[] = new DynamicAttr[5];
  /**
   * Attribute for: OutGAfrPaperCsfStringsString1
   **/
  public String OutGAfrPaperCsfStringsString1[] = new String[5];
  // Entity View: OUT_G_ELECTRONIC_LOGS
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: OutGElectronicLogsCsfStringsString1
   **/
  public char OutGElectronicLogsCsfStringsString1_AS[] = new char[5];
  /**
   * Dynamic attribute for: OutGElectronicLogsCsfStringsString1
   **/
  public DynamicAttr OutGElectronicLogsCsfStringsString1_AT[] = new DynamicAttr[
    5];
  /**
   * Attribute for: OutGElectronicLogsCsfStringsString1
   **/
  public String OutGElectronicLogsCsfStringsString1[] = new String[5];
  // Entity View: OUT_SC_CPF_ACCESS
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: OutScCpfAccessIefSuppliedFlag
   **/
  public char OutScCpfAccessIefSuppliedFlag_AS;
  /**
   * Dynamic attribute for: OutScCpfAccessIefSuppliedFlag
   **/
  public DynamicAttr OutScCpfAccessIefSuppliedFlag_AT;
  /**
   * Attribute for: OutScCpfAccessIefSuppliedFlag
   **/
  public String OutScCpfAccessIefSuppliedFlag;
  // Entity View: OUT_SC_TYP_ACCESS
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: OutScTypAccessIefSuppliedFlag
   **/
  public char OutScTypAccessIefSuppliedFlag_AS;
  /**
   * Dynamic attribute for: OutScTypAccessIefSuppliedFlag
   **/
  public DynamicAttr OutScTypAccessIefSuppliedFlag_AT;
  /**
   * Attribute for: OutScTypAccessIefSuppliedFlag
   **/
  public String OutScTypAccessIefSuppliedFlag;
  // Entity View: OUT
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: OutIefSuppliedFlag
   **/
  public char OutIefSuppliedFlag_AS;
  /**
   * Dynamic attribute for: OutIefSuppliedFlag
   **/
  public DynamicAttr OutIefSuppliedFlag_AT;
  /**
   * Attribute for: OutIefSuppliedFlag
   **/
  public String OutIefSuppliedFlag;
  // Entity View: OUT
  //        Type: WS_FUNCTION
  /**
   * Attribute missing flag for: OutWsFunctionNumber
   **/
  public char OutWsFunctionNumber_AS;
  /**
   * Dynamic attribute for: OutWsFunctionNumber
   **/
  public DynamicAttr OutWsFunctionNumber_AT;
  /**
   * Attribute for: OutWsFunctionNumber
   **/
  public int OutWsFunctionNumber;
  // Repeating GV:  OUT_LIST_GROUP
  //     Repeats: 100 times
  /**
   * Repeating group view count
   **/
  public int OutListGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutListGroup_AC[] = new char[100];
  // Entity View: OUT_G_LIST
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: OutGListIefSuppliedSelectChar
   **/
  public char OutGListIefSuppliedSelectChar_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGListIefSuppliedSelectChar
   **/
  public DynamicAttr OutGListIefSuppliedSelectChar_AT[] = new DynamicAttr[100];
  /**
   * Attribute for: OutGListIefSuppliedSelectChar
   **/
  public String OutGListIefSuppliedSelectChar[] = new String[100];
  // Entity View: OUT_G_LIST
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: OutGListCsfStringsString100
   **/
  public char OutGListCsfStringsString100_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGListCsfStringsString100
   **/
  public DynamicAttr OutGListCsfStringsString100_AT[] = new DynamicAttr[100];
  /**
   * Attribute for: OutGListCsfStringsString100
   **/
  public String OutGListCsfStringsString100[] = new String[100];
  // Entity View: OUT
  //        Type: WS_STUDY_UNIT
  /**
   * Attribute missing flag for: OutWsStudyUnitMkDepartmentCode
   **/
  public char OutWsStudyUnitMkDepartmentCode_AS;
  /**
   * Dynamic attribute for: OutWsStudyUnitMkDepartmentCode
   **/
  public DynamicAttr OutWsStudyUnitMkDepartmentCode_AT;
  /**
   * Attribute for: OutWsStudyUnitMkDepartmentCode
   **/
  public short OutWsStudyUnitMkDepartmentCode;
  /**
   * Attribute missing flag for: OutWsStudyUnitEngLongDescription
   **/
  public char OutWsStudyUnitEngLongDescription_AS;
  /**
   * Dynamic attribute for: OutWsStudyUnitEngLongDescription
   **/
  public DynamicAttr OutWsStudyUnitEngLongDescription_AT;
  /**
   * Attribute for: OutWsStudyUnitEngLongDescription
   **/
  public String OutWsStudyUnitEngLongDescription;
  /**
   * Attribute missing flag for: OutWsStudyUnitCollegeFlag
   **/
  public char OutWsStudyUnitCollegeFlag_AS;
  /**
   * Dynamic attribute for: OutWsStudyUnitCollegeFlag
   **/
  public DynamicAttr OutWsStudyUnitCollegeFlag_AT;
  /**
   * Attribute for: OutWsStudyUnitCollegeFlag
   **/
  public String OutWsStudyUnitCollegeFlag;
  // Entity View: OUT_ERR_MSG
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: OutErrMsgCsfStringsString500
   **/
  public char OutErrMsgCsfStringsString500_AS;
  /**
   * Dynamic attribute for: OutErrMsgCsfStringsString500
   **/
  public DynamicAttr OutErrMsgCsfStringsString500_AT;
  /**
   * Attribute for: OutErrMsgCsfStringsString500
   **/
  public String OutErrMsgCsfStringsString500;
  // Entity View: OUT_SECURITY
  //        Type: WS_USER
  /**
   * Attribute missing flag for: OutSecurityWsUserNumber
   **/
  public char OutSecurityWsUserNumber_AS;
  /**
   * Dynamic attribute for: OutSecurityWsUserNumber
   **/
  public DynamicAttr OutSecurityWsUserNumber_AT;
  /**
   * Attribute for: OutSecurityWsUserNumber
   **/
  public int OutSecurityWsUserNumber;
  // Entity View: OUT_SECURITY
  //        Type: WS_PRINTER
  /**
   * Attribute missing flag for: OutSecurityWsPrinterCode
   **/
  public char OutSecurityWsPrinterCode_AS;
  /**
   * Dynamic attribute for: OutSecurityWsPrinterCode
   **/
  public DynamicAttr OutSecurityWsPrinterCode_AT;
  /**
   * Attribute for: OutSecurityWsPrinterCode
   **/
  public String OutSecurityWsPrinterCode;
  // Entity View: OUT
  //        Type: CSF_CLIENT_SERVER_COMMUNICATIONS
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsReturnCode
   **/
  public char OutCsfClientServerCommunicationsReturnCode_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsReturnCode
   **/
  public DynamicAttr OutCsfClientServerCommunicationsReturnCode_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsReturnCode
   **/
  public short OutCsfClientServerCommunicationsReturnCode;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerVersionNumber
   **/
  public char OutCsfClientServerCommunicationsServerVersionNumber_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerVersionNumber
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerVersionNumber_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerVersionNumber
   **/
  public short OutCsfClientServerCommunicationsServerVersionNumber;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerRevisionNumber
   **/
  public char OutCsfClientServerCommunicationsServerRevisionNumber_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsServerRevisionNumber
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerRevisionNumber_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerRevisionNumber
   **/
  public short OutCsfClientServerCommunicationsServerRevisionNumber;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerDevelopmentPhase
   **/
  public char OutCsfClientServerCommunicationsServerDevelopmentPhase_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsServerDevelopmentPhase
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerDevelopmentPhase_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerDevelopmentPhase
   **/
  public String OutCsfClientServerCommunicationsServerDevelopmentPhase;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsAction
   **/
  public char OutCsfClientServerCommunicationsAction_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsAction
   **/
  public DynamicAttr OutCsfClientServerCommunicationsAction_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsAction
   **/
  public String OutCsfClientServerCommunicationsAction;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsServerDate
   **/
  public char OutCsfClientServerCommunicationsServerDate_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerDate
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerDate_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerDate
   **/
  public int OutCsfClientServerCommunicationsServerDate;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsServerTime
   **/
  public char OutCsfClientServerCommunicationsServerTime_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerTime
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerTime_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerTime
   **/
  public int OutCsfClientServerCommunicationsServerTime;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerTimestamp
   **/
  public char OutCsfClientServerCommunicationsServerTimestamp_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerTimestamp
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerTimestamp_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerTimestamp
   **/
  public String OutCsfClientServerCommunicationsServerTimestamp;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerTransactionCode
   **/
  public char OutCsfClientServerCommunicationsServerTransactionCode_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsServerTransactionCode
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerTransactionCode_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerTransactionCode
   **/
  public String OutCsfClientServerCommunicationsServerTransactionCode;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsServerUserId
   **/
  public char OutCsfClientServerCommunicationsServerUserId_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerUserId
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerUserId_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerUserId
   **/
  public String OutCsfClientServerCommunicationsServerUserId;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsServerRollbackFlag
   **/
  public char OutCsfClientServerCommunicationsServerRollbackFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsServerRollbackFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsServerRollbackFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsServerRollbackFlag
   **/
  public String OutCsfClientServerCommunicationsServerRollbackFlag;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsClientIsGuiFlag
   **/
  public char OutCsfClientServerCommunicationsClientIsGuiFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsClientIsGuiFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsClientIsGuiFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsClientIsGuiFlag
   **/
  public String OutCsfClientServerCommunicationsClientIsGuiFlag;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsActionsPendingFlag
   **/
  public char OutCsfClientServerCommunicationsActionsPendingFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsActionsPendingFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsActionsPendingFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsActionsPendingFlag
   **/
  public String OutCsfClientServerCommunicationsActionsPendingFlag;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsClientVersionNumber
   **/
  public char OutCsfClientServerCommunicationsClientVersionNumber_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsClientVersionNumber
   **/
  public DynamicAttr OutCsfClientServerCommunicationsClientVersionNumber_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsClientVersionNumber
   **/
  public short OutCsfClientServerCommunicationsClientVersionNumber;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsClientRevisionNumber
   **/
  public char OutCsfClientServerCommunicationsClientRevisionNumber_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsClientRevisionNumber
   **/
  public DynamicAttr OutCsfClientServerCommunicationsClientRevisionNumber_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsClientRevisionNumber
   **/
  public short OutCsfClientServerCommunicationsClientRevisionNumber;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsClientDevelopmentPhase
   **/
  public char OutCsfClientServerCommunicationsClientDevelopmentPhase_AS;
  /**
   * Dynamic attribute for: 
    OutCsfClientServerCommunicationsClientDevelopmentPhase
   **/
  public DynamicAttr OutCsfClientServerCommunicationsClientDevelopmentPhase_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsClientDevelopmentPhase
   **/
  public String OutCsfClientServerCommunicationsClientDevelopmentPhase;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsListLinkFlag
   **/
  public char OutCsfClientServerCommunicationsListLinkFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsListLinkFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsListLinkFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsListLinkFlag
   **/
  public String OutCsfClientServerCommunicationsListLinkFlag;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsCancelFlag
   **/
  public char OutCsfClientServerCommunicationsCancelFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsCancelFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsCancelFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsCancelFlag
   **/
  public String OutCsfClientServerCommunicationsCancelFlag;
  /**
   * Attribute missing flag for: OutCsfClientServerCommunicationsMaintLinkFlag
   **/
  public char OutCsfClientServerCommunicationsMaintLinkFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsMaintLinkFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsMaintLinkFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsMaintLinkFlag
   **/
  public String OutCsfClientServerCommunicationsMaintLinkFlag;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsForceDatabaseRead
   **/
  public char OutCsfClientServerCommunicationsForceDatabaseRead_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsForceDatabaseRead
   **/
  public DynamicAttr OutCsfClientServerCommunicationsForceDatabaseRead_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsForceDatabaseRead
   **/
  public String OutCsfClientServerCommunicationsForceDatabaseRead;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsRgvScrollUpFlag
   **/
  public char OutCsfClientServerCommunicationsRgvScrollUpFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsRgvScrollUpFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsRgvScrollUpFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsRgvScrollUpFlag
   **/
  public String OutCsfClientServerCommunicationsRgvScrollUpFlag;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsRgvScrollDownFlag
   **/
  public char OutCsfClientServerCommunicationsRgvScrollDownFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsRgvScrollDownFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsRgvScrollDownFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsRgvScrollDownFlag
   **/
  public String OutCsfClientServerCommunicationsRgvScrollDownFlag;
  /**
   * Attribute missing flag for: 
    OutCsfClientServerCommunicationsObjectRetrievedFlag
   **/
  public char OutCsfClientServerCommunicationsObjectRetrievedFlag_AS;
  /**
   * Dynamic attribute for: OutCsfClientServerCommunicationsObjectRetrievedFlag
   **/
  public DynamicAttr OutCsfClientServerCommunicationsObjectRetrievedFlag_AT;
  /**
   * Attribute for: OutCsfClientServerCommunicationsObjectRetrievedFlag
   **/
  public String OutCsfClientServerCommunicationsObjectRetrievedFlag;
  // Entity View: OUT_REPORT
  //        Type: WIZFUNC_REPORTING_CONTROL
  /**
   * Attribute missing flag for: OutReportWizfuncReportingControlFunction
   **/
  public char OutReportWizfuncReportingControlFunction_AS;
  /**
   * Dynamic attribute for: OutReportWizfuncReportingControlFunction
   **/
  public DynamicAttr OutReportWizfuncReportingControlFunction_AT;
  /**
   * Attribute for: OutReportWizfuncReportingControlFunction
   **/
  public String OutReportWizfuncReportingControlFunction;
  /**
   * Attribute missing flag for: 
    OutReportWizfuncReportingControlPathAndFilename
   **/
  public char OutReportWizfuncReportingControlPathAndFilename_AS;
  /**
   * Dynamic attribute for: OutReportWizfuncReportingControlPathAndFilename
   **/
  public DynamicAttr OutReportWizfuncReportingControlPathAndFilename_AT;
  /**
   * Attribute for: OutReportWizfuncReportingControlPathAndFilename
   **/
  public String OutReportWizfuncReportingControlPathAndFilename;
  /**
   * Attribute missing flag for: OutReportWizfuncReportingControlReportWidth
   **/
  public char OutReportWizfuncReportingControlReportWidth_AS;
  /**
   * Dynamic attribute for: OutReportWizfuncReportingControlReportWidth
   **/
  public DynamicAttr OutReportWizfuncReportingControlReportWidth_AT;
  /**
   * Attribute for: OutReportWizfuncReportingControlReportWidth
   **/
  public short OutReportWizfuncReportingControlReportWidth;
  /**
   * Attribute missing flag for: 
    OutReportWizfuncReportingControlStartingLineCount
   **/
  public char OutReportWizfuncReportingControlStartingLineCount_AS;
  /**
   * Dynamic attribute for: OutReportWizfuncReportingControlStartingLineCount
   **/
  public DynamicAttr OutReportWizfuncReportingControlStartingLineCount_AT;
  /**
   * Attribute for: OutReportWizfuncReportingControlStartingLineCount
   **/
  public int OutReportWizfuncReportingControlStartingLineCount;
  /**
   * Attribute missing flag for: 
    OutReportWizfuncReportingControlEndingLineCount
   **/
  public char OutReportWizfuncReportingControlEndingLineCount_AS;
  /**
   * Dynamic attribute for: OutReportWizfuncReportingControlEndingLineCount
   **/
  public DynamicAttr OutReportWizfuncReportingControlEndingLineCount_AT;
  /**
   * Attribute for: OutReportWizfuncReportingControlEndingLineCount
   **/
  public int OutReportWizfuncReportingControlEndingLineCount;
  /**
   * Attribute missing flag for: 
    OutReportWizfuncReportingControlWizfuncReturnCode
   **/
  public char OutReportWizfuncReportingControlWizfuncReturnCode_AS;
  /**
   * Dynamic attribute for: OutReportWizfuncReportingControlWizfuncReturnCode
   **/
  public DynamicAttr OutReportWizfuncReportingControlWizfuncReturnCode_AT;
  /**
   * Attribute for: OutReportWizfuncReportingControlWizfuncReturnCode
   **/
  public String OutReportWizfuncReportingControlWizfuncReturnCode;
  /**
   * Attribute missing flag for: 
    OutReportWizfuncReportingControlWizfuncReturnMessage
   **/
  public char OutReportWizfuncReportingControlWizfuncReturnMessage_AS;
  /**
   * Dynamic attribute for: 
    OutReportWizfuncReportingControlWizfuncReturnMessage
   **/
  public DynamicAttr OutReportWizfuncReportingControlWizfuncReturnMessage_AT;
  /**
   * Attribute for: OutReportWizfuncReportingControlWizfuncReturnMessage
   **/
  public String OutReportWizfuncReportingControlWizfuncReturnMessage;
  // Repeating GV:  OUT_EQU_GROUP
  //     Repeats: 20 times
  /**
   * Repeating group view count
   **/
  public int OutEquGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutEquGroup_AC[] = new char[20];
  // Entity View: OUT_EQU_G
  //        Type: WS_EXAM_EQUIVALENTS
  /**
   * Attribute missing flag for: OutEquGWsExamEquivalentsWsEquivalentCode
   **/
  public char OutEquGWsExamEquivalentsWsEquivalentCode_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutEquGWsExamEquivalentsWsEquivalentCode
   **/
  public DynamicAttr OutEquGWsExamEquivalentsWsEquivalentCode_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutEquGWsExamEquivalentsWsEquivalentCode
   **/
  public String OutEquGWsExamEquivalentsWsEquivalentCode[] = new String[20];
  /**
   * Attribute missing flag for: OutEquGWsExamEquivalentsWsSamePaperFlag
   **/
  public char OutEquGWsExamEquivalentsWsSamePaperFlag_AS[] = new char[20];
  /**
   * Dynamic attribute for: OutEquGWsExamEquivalentsWsSamePaperFlag
   **/
  public DynamicAttr OutEquGWsExamEquivalentsWsSamePaperFlag_AT[] = new 
    DynamicAttr[20];
  /**
   * Attribute for: OutEquGWsExamEquivalentsWsSamePaperFlag
   **/
  public String OutEquGWsExamEquivalentsWsSamePaperFlag[] = new String[20];
  // Entity View: OUT_PRINT_QUANTITY
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: OutPrintQuantityIefSuppliedCount
   **/
  public char OutPrintQuantityIefSuppliedCount_AS;
  /**
   * Dynamic attribute for: OutPrintQuantityIefSuppliedCount
   **/
  public DynamicAttr OutPrintQuantityIefSuppliedCount_AT;
  /**
   * Attribute for: OutPrintQuantityIefSuppliedCount
   **/
  public int OutPrintQuantityIefSuppliedCount;
  /**
   * Default Constructor
   **/
  
  public EXPLL01S_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public EXPLL01S_OA(EXPLL01S_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static EXPLL01S_OA getInstance()
  {
    return new EXPLL01S_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new EXPLL01S_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    OutNrOfCombinedPapersIefSuppliedCount_AT = null;
    OutNrOfCombinedPapersIefSuppliedCount_AS = ' ';
    OutNrOfCombinedPapersIefSuppliedCount = 0;
    OutNextExamTypistLogExamYear_AT = null;
    OutNextExamTypistLogExamYear_AS = ' ';
    OutNextExamTypistLogExamYear = 0;
    OutNextExamTypistLogMkExamPeriodCod_AT = null;
    OutNextExamTypistLogMkExamPeriodCod_AS = ' ';
    OutNextExamTypistLogMkExamPeriodCod = 0;
    OutPrevExamTypistLogExamYear_AT = null;
    OutPrevExamTypistLogExamYear_AS = ' ';
    OutPrevExamTypistLogExamYear = 0;
    OutPrevExamTypistLogMkExamPeriodCod_AT = null;
    OutPrevExamTypistLogMkExamPeriodCod_AS = ' ';
    OutPrevExamTypistLogMkExamPeriodCod = 0;
    OutKeyExamTypistLogExamYear_AT = null;
    OutKeyExamTypistLogExamYear_AS = ' ';
    OutKeyExamTypistLogExamYear = 0;
    OutKeyExamTypistLogMkExamPeriodCod_AT = null;
    OutKeyExamTypistLogMkExamPeriodCod_AS = ' ';
    OutKeyExamTypistLogMkExamPeriodCod = 0;
    OutKeyExamTypistLogMkStudyUnitCode_AT = null;
    OutKeyExamTypistLogMkStudyUnitCode_AS = ' ';
    OutKeyExamTypistLogMkStudyUnitCode = "";
    OutKeyExamTypistLogCombinedWith_AT = null;
    OutKeyExamTypistLogCombinedWith_AS = ' ';
    OutKeyExamTypistLogCombinedWith = "                         ";
    OutKeyExamTypistLogRemarks_AT = null;
    OutKeyExamTypistLogRemarks_AS = ' ';
    OutKeyExamTypistLogRemarks = "";
    OutKeyExamTypistLogRemarks2_AT = null;
    OutKeyExamTypistLogRemarks2_AS = ' ';
    OutKeyExamTypistLogRemarks2 = "";
    OutKeyExamTypistLogRemarks3_AT = null;
    OutKeyExamTypistLogRemarks3_AS = ' ';
    OutKeyExamTypistLogRemarks3 = "                              ";
    OutKeyExamTypistLogRemarks4_AT = null;
    OutKeyExamTypistLogRemarks4_AS = ' ';
    OutKeyExamTypistLogRemarks4 = "";
    OutKeyExamTypistLogRemarks5_AT = null;
    OutKeyExamTypistLogRemarks5_AS = ' ';
    OutKeyExamTypistLogRemarks5 = "";
    OutKeyExamTypistLogRemarks6_AT = null;
    OutKeyExamTypistLogRemarks6_AS = ' ';
    OutKeyExamTypistLogRemarks6 = "";
    OutKeyExamTypistLogPaperExpected_AT = null;
    OutKeyExamTypistLogPaperExpected_AS = ' ';
    OutKeyExamTypistLogPaperExpected = " ";
    OutSearchCriteriaExamTypistLogExamYear_AT = null;
    OutSearchCriteriaExamTypistLogExamYear_AS = ' ';
    OutSearchCriteriaExamTypistLogExamYear = 0;
    OutSearchCriteriaExamTypistLogMkExamPeriodCod_AT = null;
    OutSearchCriteriaExamTypistLogMkExamPeriodCod_AS = ' ';
    OutSearchCriteriaExamTypistLogMkExamPeriodCod = 0;
    OutSearchCriteriaExamTypistLogMkStudyUnitCode_AT = null;
    OutSearchCriteriaExamTypistLogMkStudyUnitCode_AS = ' ';
    OutSearchCriteriaExamTypistLogMkStudyUnitCode = "";
    OutLogEntriesGrp_MA = 0;
    for(int a = 0; a < 5; a++)
    {
      OutLogEntriesGrp_AC[a] = ' ';
      OutGCalcQuantIefSuppliedCount_AT[a] = null;
      OutGCalcQuantIefSuppliedCount_AS[a] = ' ';
      OutGCalcQuantIefSuppliedCount[a] = 0;
      OutGPaperColourCsfStringsString10_AT[a] = null;
      OutGPaperColourCsfStringsString10_AS[a] = ' ';
      OutGPaperColourCsfStringsString10[a] = "          ";
      OutGExamPeriodDateDate_AT[a] = null;
      OutGExamPeriodDateDate_AS[a] = ' ';
      OutGExamPeriodDateDate[a] = 00000000;
      OutGIefSuppliedCount_AT[a] = null;
      OutGIefSuppliedCount_AS[a] = ' ';
      OutGIefSuppliedCount[a] = 0;
      OutGIefSuppliedCommand_AT[a] = null;
      OutGIefSuppliedCommand_AS[a] = ' ';
      OutGIefSuppliedCommand[a] = 
"                                                                                "
        ;
      OutGIefSuppliedSelectChar_AT[a] = null;
      OutGIefSuppliedSelectChar_AS[a] = ' ';
      OutGIefSuppliedSelectChar[a] = " ";
      OutGExamTypistLogEntryPaperNo_AT[a] = null;
      OutGExamTypistLogEntryPaperNo_AS[a] = ' ';
      OutGExamTypistLogEntryPaperNo[a] = 0;
      OutGExamTypistLogEntryTypist_AT[a] = null;
      OutGExamTypistLogEntryTypist_AS[a] = ' ';
      OutGExamTypistLogEntryTypist[a] = "";
      OutGExamTypistLogEntryPaperFormat_AT[a] = null;
      OutGExamTypistLogEntryPaperFormat_AS[a] = ' ';
      OutGExamTypistLogEntryPaperFormat[a] = " ";
      OutGExamTypistLogEntryDateReceived_AT[a] = null;
      OutGExamTypistLogEntryDateReceived_AS[a] = ' ';
      OutGExamTypistLogEntryDateReceived[a] = 00000000;
      OutGExamTypistLogEntryDateProof1_AT[a] = null;
      OutGExamTypistLogEntryDateProof1_AS[a] = ' ';
      OutGExamTypistLogEntryDateProof1[a] = 00000000;
      OutGExamTypistLogEntryDateProof2_AT[a] = null;
      OutGExamTypistLogEntryDateProof2_AS[a] = ' ';
      OutGExamTypistLogEntryDateProof2[a] = 00000000;
      OutGExamTypistLogEntryDateProof3_AT[a] = null;
      OutGExamTypistLogEntryDateProof3_AS[a] = ' ';
      OutGExamTypistLogEntryDateProof3[a] = 00000000;
      OutGExamTypistLogEntryDateToPrint_AT[a] = null;
      OutGExamTypistLogEntryDateToPrint_AS[a] = ' ';
      OutGExamTypistLogEntryDateToPrint[a] = 00000000;
      OutGExamTypistLogEntryCpfReportPrinted_AT[a] = null;
      OutGExamTypistLogEntryCpfReportPrinted_AS[a] = ' ';
      OutGExamTypistLogEntryCpfReportPrinted[a] = "";
      OutGExamTypistLogEntryDateInSafe_AT[a] = null;
      OutGExamTypistLogEntryDateInSafe_AS[a] = ' ';
      OutGExamTypistLogEntryDateInSafe[a] = 00000000;
      OutGExamTypistLogEntryDateToDept_AT[a] = null;
      OutGExamTypistLogEntryDateToDept_AS[a] = ' ';
      OutGExamTypistLogEntryDateToDept[a] = 00000000;
      OutGExamTypistLogEntryDateFromDept_AT[a] = null;
      OutGExamTypistLogEntryDateFromDept_AS[a] = ' ';
      OutGExamTypistLogEntryDateFromDept[a] = 00000000;
      OutGExamTypistLogEntryDate2ToPrint_AT[a] = null;
      OutGExamTypistLogEntryDate2ToPrint_AS[a] = ' ';
      OutGExamTypistLogEntryDate2ToPrint[a] = 00000000;
      OutGExamTypistLogEntryDate2FromPrint_AT[a] = null;
      OutGExamTypistLogEntryDate2FromPrint_AS[a] = ' ';
      OutGExamTypistLogEntryDate2FromPrint[a] = 00000000;
      OutGExamTypistLogEntryDate3ToPrint_AT[a] = null;
      OutGExamTypistLogEntryDate3ToPrint_AS[a] = ' ';
      OutGExamTypistLogEntryDate3ToPrint[a] = 00000000;
      OutGExamTypistLogEntryDate3FromPrint_AT[a] = null;
      OutGExamTypistLogEntryDate3FromPrint_AS[a] = ' ';
      OutGExamTypistLogEntryDate3FromPrint[a] = 00000000;
      OutGExamTypistLogEntryQuant3ToPrint_AT[a] = null;
      OutGExamTypistLogEntryQuant3ToPrint_AS[a] = ' ';
      OutGExamTypistLogEntryQuant3ToPrint[a] = 0;
      OutGExamTypistLogEntryQuantToPrint_AT[a] = null;
      OutGExamTypistLogEntryQuantToPrint_AS[a] = ' ';
      OutGExamTypistLogEntryQuantToPrint[a] = 0;
      OutGExamTypistLogEntryQuantCalcedOn_AT[a] = null;
      OutGExamTypistLogEntryQuantCalcedOn_AS[a] = ' ';
      OutGExamTypistLogEntryQuantCalcedOn[a] = 00000000;
      OutGExamTypistLogEntryQuant2ToPrint_AT[a] = null;
      OutGExamTypistLogEntryQuant2ToPrint_AS[a] = ' ';
      OutGExamTypistLogEntryQuant2ToPrint[a] = 0;
      OutGExamTypistLogEntryQuant2CalcedOn_AT[a] = null;
      OutGExamTypistLogEntryQuant2CalcedOn_AS[a] = ' ';
      OutGExamTypistLogEntryQuant2CalcedOn[a] = 00000000;
      OutGExamTypistLogEntrySurplusQuant_AT[a] = null;
      OutGExamTypistLogEntrySurplusQuant_AS[a] = ' ';
      OutGExamTypistLogEntrySurplusQuant[a] = 0;
      OutGExamTypistLogEntryDateScanned_AT[a] = null;
      OutGExamTypistLogEntryDateScanned_AS[a] = ' ';
      OutGExamTypistLogEntryDateScanned[a] = 00000000;
      OutGExamTypistLogEntryDateAfrScanned_AT[a] = null;
      OutGExamTypistLogEntryDateAfrScanned_AS[a] = ' ';
      OutGExamTypistLogEntryDateAfrScanned[a] = 00000000;
      OutGExamTypistLogEntryOpenForWeb_AT[a] = null;
      OutGExamTypistLogEntryOpenForWeb_AS[a] = ' ';
      OutGExamTypistLogEntryOpenForWeb[a] = "";
      OutGExamTypistLogEntryDocketChanges_AT[a] = null;
      OutGExamTypistLogEntryDocketChanges_AS[a] = ' ';
      OutGExamTypistLogEntryDocketChanges[a] = " ";
      OutGExamTypistLogEntryPaperChanges_AT[a] = null;
      OutGExamTypistLogEntryPaperChanges_AS[a] = ' ';
      OutGExamTypistLogEntryPaperChanges[a] = " ";
      OutGExamTypistLogEntryElectronicPaper_AT[a] = null;
      OutGExamTypistLogEntryElectronicPaper_AS[a] = ' ';
      OutGExamTypistLogEntryElectronicPaper[a] = " ";
      OutGMyunisaWsRegistrationDatesFromDate_AT[a] = null;
      OutGMyunisaWsRegistrationDatesFromDate_AS[a] = ' ';
      OutGMyunisaWsRegistrationDatesFromDate[a] = 00000000;
      OutGEngPaperCsfStringsString1_AT[a] = null;
      OutGEngPaperCsfStringsString1_AS[a] = ' ';
      OutGEngPaperCsfStringsString1[a] = " ";
      OutGAfrPaperCsfStringsString1_AT[a] = null;
      OutGAfrPaperCsfStringsString1_AS[a] = ' ';
      OutGAfrPaperCsfStringsString1[a] = " ";
      OutGElectronicLogsCsfStringsString1_AT[a] = null;
      OutGElectronicLogsCsfStringsString1_AS[a] = ' ';
      OutGElectronicLogsCsfStringsString1[a] = " ";
    }
    OutScCpfAccessIefSuppliedFlag_AT = null;
    OutScCpfAccessIefSuppliedFlag_AS = ' ';
    OutScCpfAccessIefSuppliedFlag = " ";
    OutScTypAccessIefSuppliedFlag_AT = null;
    OutScTypAccessIefSuppliedFlag_AS = ' ';
    OutScTypAccessIefSuppliedFlag = " ";
    OutIefSuppliedFlag_AT = null;
    OutIefSuppliedFlag_AS = ' ';
    OutIefSuppliedFlag = " ";
    OutWsFunctionNumber_AT = null;
    OutWsFunctionNumber_AS = ' ';
    OutWsFunctionNumber = 0;
    OutListGroup_MA = 0;
    for(int a = 0; a < 100; a++)
    {
      OutListGroup_AC[a] = ' ';
      OutGListIefSuppliedSelectChar_AT[a] = null;
      OutGListIefSuppliedSelectChar_AS[a] = ' ';
      OutGListIefSuppliedSelectChar[a] = " ";
      OutGListCsfStringsString100_AT[a] = null;
      OutGListCsfStringsString100_AS[a] = ' ';
      OutGListCsfStringsString100[a] = 
"                                                                                                    "
        ;
    }
    OutWsStudyUnitMkDepartmentCode_AT = null;
    OutWsStudyUnitMkDepartmentCode_AS = ' ';
    OutWsStudyUnitMkDepartmentCode = 0;
    OutWsStudyUnitEngLongDescription_AT = null;
    OutWsStudyUnitEngLongDescription_AS = ' ';
    OutWsStudyUnitEngLongDescription = 
"                                                                                                                                                                        "
      ;
    OutWsStudyUnitCollegeFlag_AT = null;
    OutWsStudyUnitCollegeFlag_AS = ' ';
    OutWsStudyUnitCollegeFlag = " ";
    OutErrMsgCsfStringsString500_AT = null;
    OutErrMsgCsfStringsString500_AS = ' ';
    OutErrMsgCsfStringsString500 = "";
    OutSecurityWsUserNumber_AT = null;
    OutSecurityWsUserNumber_AS = ' ';
    OutSecurityWsUserNumber = 0;
    OutSecurityWsPrinterCode_AT = null;
    OutSecurityWsPrinterCode_AS = ' ';
    OutSecurityWsPrinterCode = "          ";
    OutCsfClientServerCommunicationsReturnCode_AT = null;
    OutCsfClientServerCommunicationsReturnCode_AS = ' ';
    OutCsfClientServerCommunicationsReturnCode = 0;
    OutCsfClientServerCommunicationsServerVersionNumber_AT = null;
    OutCsfClientServerCommunicationsServerVersionNumber_AS = ' ';
    OutCsfClientServerCommunicationsServerVersionNumber = 0;
    OutCsfClientServerCommunicationsServerRevisionNumber_AT = null;
    OutCsfClientServerCommunicationsServerRevisionNumber_AS = ' ';
    OutCsfClientServerCommunicationsServerRevisionNumber = 0;
    OutCsfClientServerCommunicationsServerDevelopmentPhase_AT = null;
    OutCsfClientServerCommunicationsServerDevelopmentPhase_AS = ' ';
    OutCsfClientServerCommunicationsServerDevelopmentPhase = " ";
    OutCsfClientServerCommunicationsAction_AT = null;
    OutCsfClientServerCommunicationsAction_AS = ' ';
    OutCsfClientServerCommunicationsAction = "  ";
    OutCsfClientServerCommunicationsServerDate_AT = null;
    OutCsfClientServerCommunicationsServerDate_AS = ' ';
    OutCsfClientServerCommunicationsServerDate = 00000000;
    OutCsfClientServerCommunicationsServerTime_AT = null;
    OutCsfClientServerCommunicationsServerTime_AS = ' ';
    OutCsfClientServerCommunicationsServerTime = 00000000;
    OutCsfClientServerCommunicationsServerTimestamp_AT = null;
    OutCsfClientServerCommunicationsServerTimestamp_AS = ' ';
    OutCsfClientServerCommunicationsServerTimestamp = "00000000000000000000";
    OutCsfClientServerCommunicationsServerTransactionCode_AT = null;
    OutCsfClientServerCommunicationsServerTransactionCode_AS = ' ';
    OutCsfClientServerCommunicationsServerTransactionCode = "        ";
    OutCsfClientServerCommunicationsServerUserId_AT = null;
    OutCsfClientServerCommunicationsServerUserId_AS = ' ';
    OutCsfClientServerCommunicationsServerUserId = "        ";
    OutCsfClientServerCommunicationsServerRollbackFlag_AT = null;
    OutCsfClientServerCommunicationsServerRollbackFlag_AS = ' ';
    OutCsfClientServerCommunicationsServerRollbackFlag = " ";
    OutCsfClientServerCommunicationsClientIsGuiFlag_AT = null;
    OutCsfClientServerCommunicationsClientIsGuiFlag_AS = ' ';
    OutCsfClientServerCommunicationsClientIsGuiFlag = " ";
    OutCsfClientServerCommunicationsActionsPendingFlag_AT = null;
    OutCsfClientServerCommunicationsActionsPendingFlag_AS = ' ';
    OutCsfClientServerCommunicationsActionsPendingFlag = " ";
    OutCsfClientServerCommunicationsClientVersionNumber_AT = null;
    OutCsfClientServerCommunicationsClientVersionNumber_AS = ' ';
    OutCsfClientServerCommunicationsClientVersionNumber = 0;
    OutCsfClientServerCommunicationsClientRevisionNumber_AT = null;
    OutCsfClientServerCommunicationsClientRevisionNumber_AS = ' ';
    OutCsfClientServerCommunicationsClientRevisionNumber = 0;
    OutCsfClientServerCommunicationsClientDevelopmentPhase_AT = null;
    OutCsfClientServerCommunicationsClientDevelopmentPhase_AS = ' ';
    OutCsfClientServerCommunicationsClientDevelopmentPhase = " ";
    OutCsfClientServerCommunicationsListLinkFlag_AT = null;
    OutCsfClientServerCommunicationsListLinkFlag_AS = ' ';
    OutCsfClientServerCommunicationsListLinkFlag = " ";
    OutCsfClientServerCommunicationsCancelFlag_AT = null;
    OutCsfClientServerCommunicationsCancelFlag_AS = ' ';
    OutCsfClientServerCommunicationsCancelFlag = " ";
    OutCsfClientServerCommunicationsMaintLinkFlag_AT = null;
    OutCsfClientServerCommunicationsMaintLinkFlag_AS = ' ';
    OutCsfClientServerCommunicationsMaintLinkFlag = " ";
    OutCsfClientServerCommunicationsForceDatabaseRead_AT = null;
    OutCsfClientServerCommunicationsForceDatabaseRead_AS = ' ';
    OutCsfClientServerCommunicationsForceDatabaseRead = " ";
    OutCsfClientServerCommunicationsRgvScrollUpFlag_AT = null;
    OutCsfClientServerCommunicationsRgvScrollUpFlag_AS = ' ';
    OutCsfClientServerCommunicationsRgvScrollUpFlag = " ";
    OutCsfClientServerCommunicationsRgvScrollDownFlag_AT = null;
    OutCsfClientServerCommunicationsRgvScrollDownFlag_AS = ' ';
    OutCsfClientServerCommunicationsRgvScrollDownFlag = " ";
    OutCsfClientServerCommunicationsObjectRetrievedFlag_AT = null;
    OutCsfClientServerCommunicationsObjectRetrievedFlag_AS = ' ';
    OutCsfClientServerCommunicationsObjectRetrievedFlag = " ";
    OutReportWizfuncReportingControlFunction_AT = null;
    OutReportWizfuncReportingControlFunction_AS = ' ';
    OutReportWizfuncReportingControlFunction = "";
    OutReportWizfuncReportingControlPathAndFilename_AT = null;
    OutReportWizfuncReportingControlPathAndFilename_AS = ' ';
    OutReportWizfuncReportingControlPathAndFilename = "";
    OutReportWizfuncReportingControlReportWidth_AT = null;
    OutReportWizfuncReportingControlReportWidth_AS = ' ';
    OutReportWizfuncReportingControlReportWidth = 0;
    OutReportWizfuncReportingControlStartingLineCount_AT = null;
    OutReportWizfuncReportingControlStartingLineCount_AS = ' ';
    OutReportWizfuncReportingControlStartingLineCount = 0;
    OutReportWizfuncReportingControlEndingLineCount_AT = null;
    OutReportWizfuncReportingControlEndingLineCount_AS = ' ';
    OutReportWizfuncReportingControlEndingLineCount = 0;
    OutReportWizfuncReportingControlWizfuncReturnCode_AT = null;
    OutReportWizfuncReportingControlWizfuncReturnCode_AS = ' ';
    OutReportWizfuncReportingControlWizfuncReturnCode = "        ";
    OutReportWizfuncReportingControlWizfuncReturnMessage_AT = null;
    OutReportWizfuncReportingControlWizfuncReturnMessage_AS = ' ';
    OutReportWizfuncReportingControlWizfuncReturnMessage = "";
    OutEquGroup_MA = 0;
    for(int a = 0; a < 20; a++)
    {
      OutEquGroup_AC[a] = ' ';
      OutEquGWsExamEquivalentsWsEquivalentCode_AT[a] = null;
      OutEquGWsExamEquivalentsWsEquivalentCode_AS[a] = ' ';
      OutEquGWsExamEquivalentsWsEquivalentCode[a] = "       ";
      OutEquGWsExamEquivalentsWsSamePaperFlag_AT[a] = null;
      OutEquGWsExamEquivalentsWsSamePaperFlag_AS[a] = ' ';
      OutEquGWsExamEquivalentsWsSamePaperFlag[a] = " ";
    }
    OutPrintQuantityIefSuppliedCount_AT = null;
    OutPrintQuantityIefSuppliedCount_AS = ' ';
    OutPrintQuantityIefSuppliedCount = 0;
  }
  /**
   * Gets the VDF array for the instance, initialized.
   **/
  
  public static VDF getViewDefinition()
  {
    if ( localVdf == null )
    {
      VDFEntry [] vdfEntries = {
        new VDFEntry((int)1, "", "OutNrOfCombinedPapersIefSupplied", 
          "IefSupplied", "Count", VDFEntry.TYPE_INT, (short)1, (short)0, 8, (
          short)0, null), 
        new VDFEntry((int)2, "", "OutNextExamTypistLog", "ExamTypistLog", 
          "ExamYear", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)3, "", "OutNextExamTypistLog", "ExamTypistLog", 
          "MkExamPeriodCod", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)
          0, null), 
        new VDFEntry((int)4, "", "OutPrevExamTypistLog", "ExamTypistLog", 
          "ExamYear", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)5, "", "OutPrevExamTypistLog", "ExamTypistLog", 
          "MkExamPeriodCod", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)
          0, null), 
        new VDFEntry((int)6, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "ExamYear", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)7, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "MkExamPeriodCod", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)
          0, null), 
        new VDFEntry((int)8, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "MkStudyUnitCode", VDFEntry.TYPE_STRING, (short)1, (short)0, 7, (
          short)0, null), 
        new VDFEntry((int)9, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "CombinedWith", VDFEntry.TYPE_STRING, (short)1, (short)0, 25, (short)
          0, null), 
        new VDFEntry((int)10, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "Remarks", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)11, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "Remarks2", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)12, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "Remarks3", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)13, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "Remarks4", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)14, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "Remarks5", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)15, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "Remarks6", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)16, "", "OutKeyExamTypistLog", "ExamTypistLog", 
          "PaperExpected", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)
          0, null), 
        new VDFEntry((int)17, "", "OutSearchCriteriaExamTypistLog", 
          "ExamTypistLog", "ExamYear", VDFEntry.TYPE_SHORT, (short)1, (short)0, 
          2, (short)0, null), 
        new VDFEntry((int)18, "", "OutSearchCriteriaExamTypistLog", 
          "ExamTypistLog", "MkExamPeriodCod", VDFEntry.TYPE_SHORT, (short)1, (
          short)0, 2, (short)0, null), 
        new VDFEntry((int)19, "", "OutSearchCriteriaExamTypistLog", 
          "ExamTypistLog", "MkStudyUnitCode", VDFEntry.TYPE_STRING, (short)1, (
          short)0, 7, (short)0, null), 
        new VDFEntry((int)20, "OutLogEntriesGrp", "", "", "MA", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)21, "OutLogEntriesGrp", "", "", "AC", 
          VDFEntry.TYPE_CHAR, (short)5, (short)0, 1, (short)0, null), 
        new VDFEntry((int)22, "OutLogEntriesGrp", "OutGCalcQuantIefSupplied", 
          "IefSupplied", "Count", VDFEntry.TYPE_INT, (short)5, (short)0, 8, (
          short)0, null), 
new VDFEntry((int)23, "OutLogEntriesGrp", "OutGPaperColourCsfStrings", 
          "CsfStrings", "String10", VDFEntry.TYPE_STRING, (short)5, (short)0, 
          10, (short)0, null), 
        new VDFEntry((int)24, "OutLogEntriesGrp", "OutGExamPeriodDate", 
          "ExamPeriodDate", "Date", VDFEntry.TYPE_DATE, (short)5, (short)0, 8, (
          short)0, null), 
        new VDFEntry((int)25, "OutLogEntriesGrp", "OutGIefSupplied", 
          "IefSupplied", "Count", VDFEntry.TYPE_INT, (short)5, (short)0, 8, (
          short)0, null), 
        new VDFEntry((int)26, "OutLogEntriesGrp", "OutGIefSupplied", 
          "IefSupplied", "Command", VDFEntry.TYPE_STRING, (short)5, (short)0, 
          80, (short)0, null), 
        new VDFEntry((int)27, "OutLogEntriesGrp", "OutGIefSupplied", 
          "IefSupplied", "SelectChar", VDFEntry.TYPE_STRING, (short)5, (short)0,
           1, (short)0, null), 
        new VDFEntry((int)28, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "PaperNo", VDFEntry.TYPE_SHORT, (short)5, (
          short)0, 2, (short)0, null), 
        new VDFEntry((int)29, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Typist", VDFEntry.TYPE_STRING, (short)5, (
          short)0, 3, (short)0, null), 
        new VDFEntry((int)30, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "PaperFormat", VDFEntry.TYPE_STRING, (short)5, (
          short)0, 1, (short)0, null), 
        new VDFEntry((int)31, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateReceived", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)32, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateProof1", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)33, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateProof2", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)34, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateProof3", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)35, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateToPrint", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)36, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "CpfReportPrinted", VDFEntry.TYPE_STRING, (
          short)5, (short)0, 1, (short)0, null), 
        new VDFEntry((int)37, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateInSafe", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)38, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateToDept", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)39, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateFromDept", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)40, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Date2ToPrint", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)41, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Date2FromPrint", VDFEntry.TYPE_DATE, (short)5, 
          (short)0, 8, (short)0, null), 
        new VDFEntry((int)42, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Date3ToPrint", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)43, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Date3FromPrint", VDFEntry.TYPE_DATE, (short)5, 
          (short)0, 8, (short)0, null), 
        new VDFEntry((int)44, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Quant3ToPrint", VDFEntry.TYPE_INT, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)45, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "QuantToPrint", VDFEntry.TYPE_INT, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)46, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "QuantCalcedOn", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)47, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Quant2ToPrint", VDFEntry.TYPE_INT, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)48, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Quant2CalcedOn", VDFEntry.TYPE_DATE, (short)5, 
          (short)0, 8, (short)0, null), 
        new VDFEntry((int)49, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "SurplusQuant", VDFEntry.TYPE_INT, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)50, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateScanned", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)51, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateAfrScanned", VDFEntry.TYPE_DATE, (short)5, 
          (short)0, 8, (short)0, null), 
        new VDFEntry((int)52, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "OpenForWeb", VDFEntry.TYPE_STRING, (short)5, (
          short)0, 1, (short)0, null), 
        new VDFEntry((int)53, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DocketChanges", VDFEntry.TYPE_STRING, (short)5,
           (short)0, 1, (short)0, null), 
        new VDFEntry((int)54, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "PaperChanges", VDFEntry.TYPE_STRING, (short)5, 
          (short)0, 1, (short)0, null), 
        new VDFEntry((int)55, "OutLogEntriesGrp", "OutGExamTypistLogEntry", 
          "ExamTypistLogEntry", "ElectronicPaper", VDFEntry.TYPE_STRING, (short)
          5, (short)0, 1, (short)0, null), 
        new VDFEntry((int)56, "OutLogEntriesGrp", 
          "OutGMyunisaWsRegistrationDates", "WsRegistrationDates", "FromDate", 
          VDFEntry.TYPE_DATE, (short)5, (short)0, 8, (short)0, null), 
        new VDFEntry((int)57, "OutLogEntriesGrp", "OutGEngPaperCsfStrings", 
          "CsfStrings", "String1", VDFEntry.TYPE_STRING, (short)5, (short)0, 1, 
          (short)0, null), 
        new VDFEntry((int)58, "OutLogEntriesGrp", "OutGAfrPaperCsfStrings", 
          "CsfStrings", "String1", VDFEntry.TYPE_STRING, (short)5, (short)0, 1, 
          (short)0, null), 
        new VDFEntry((int)59, "OutLogEntriesGrp", "OutGElectronicLogsCsfStrings"
          , "CsfStrings", "String1", VDFEntry.TYPE_STRING, (short)5, (short)0, 
          1, (short)0, null), 
        new VDFEntry((int)60, "", "OutScCpfAccessIefSupplied", "IefSupplied", 
          "Flag", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
          
        new VDFEntry((int)61, "", "OutScTypAccessIefSupplied", "IefSupplied", 
          "Flag", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
          
        new VDFEntry((int)62, "", "OutIefSupplied", "IefSupplied", "Flag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)63, "", "OutWsFunction", "WsFunction", "Number", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)64, "OutListGroup", "", "", "MA", VDFEntry.TYPE_INT, (
          short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)65, "OutListGroup", "", "", "AC", VDFEntry.TYPE_CHAR, 
          (short)100, (short)0, 1, (short)0, null), 
        new VDFEntry((int)66, "OutListGroup", "OutGListIefSupplied", 
          "IefSupplied", "SelectChar", VDFEntry.TYPE_STRING, (short)100, (short)
          0, 1, (short)0, null), 
        new VDFEntry((int)67, "OutListGroup", "OutGListCsfStrings", "CsfStrings"
          , "String100", VDFEntry.TYPE_STRING, (short)100, (short)0, 100, (
          short)0, null), 
        new VDFEntry((int)68, "", "OutWsStudyUnit", "WsStudyUnit", 
          "MkDepartmentCode", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (
          short)0, null), 
        new VDFEntry((int)69, "", "OutWsStudyUnit", "WsStudyUnit", 
          "EngLongDescription", VDFEntry.TYPE_STRING, (short)1, (short)0, 168, (
          short)0, null), 
        new VDFEntry((int)70, "", "OutWsStudyUnit", "WsStudyUnit", "CollegeFlag"
          , VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)71, "", "OutErrMsgCsfStrings", "CsfStrings", 
          "String500", VDFEntry.TYPE_STRING, (short)1, (short)0, 500, (short)0, 
          null), 
        new VDFEntry((int)72, "", "OutSecurityWsUser", "WsUser", "Number", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)73, "", "OutSecurityWsPrinter", "WsPrinter", "Code", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 10, (short)0, null), 
        new VDFEntry((int)74, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ReturnCode", VDFEntry.TYPE_SHORT, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)75, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerVersionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)76, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerRevisionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)77, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerDevelopmentPhase", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)78, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "Action", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)79, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerDate", VDFEntry.TYPE_DATE, (
          short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)80, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerTime", VDFEntry.TYPE_TIME, (
          short)1, (short)0, 6, (short)0, null), 
        new VDFEntry((int)81, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerTimestamp", 
          VDFEntry.TYPE_TIMESTAMP, (short)1, (short)0, 20, (short)0, null), 
        new VDFEntry((int)82, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerTransactionCode", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)83, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerUserId", VDFEntry.TYPE_STRING,
           (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)84, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ServerRollbackFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)85, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientIsGuiFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)86, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ActionsPendingFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)87, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientVersionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)88, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientRevisionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)89, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientDevelopmentPhase", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)90, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ListLinkFlag", VDFEntry.TYPE_STRING,
           (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)91, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "CancelFlag", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)92, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "MaintLinkFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)93, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ForceDatabaseRead", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)94, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "RgvScrollUpFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)95, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "RgvScrollDownFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)96, "", "OutCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ObjectRetrievedFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)97, "", "OutReportWizfuncReportingControl", 
          "WizfuncReportingControl", "Function", VDFEntry.TYPE_STRING, (short)1,
           (short)0, 8, (short)0, null), 
        new VDFEntry((int)98, "", "OutReportWizfuncReportingControl", 
          "WizfuncReportingControl", "PathAndFilename", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 256, (short)0, null), 
        new VDFEntry((int)99, "", "OutReportWizfuncReportingControl", 
          "WizfuncReportingControl", "ReportWidth", VDFEntry.TYPE_SHORT, (short)
          1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)100, "", "OutReportWizfuncReportingControl", 
          "WizfuncReportingControl", "StartingLineCount", VDFEntry.TYPE_INT, (
          short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)101, "", "OutReportWizfuncReportingControl", 
          "WizfuncReportingControl", "EndingLineCount", VDFEntry.TYPE_INT, (
          short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)102, "", "OutReportWizfuncReportingControl", 
          "WizfuncReportingControl", "WizfuncReturnCode", VDFEntry.TYPE_STRING, 
          (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)103, "", "OutReportWizfuncReportingControl", 
          "WizfuncReportingControl", "WizfuncReturnMessage", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 250, (short)0, null), 
        new VDFEntry((int)104, "OutEquGroup", "", "", "MA", VDFEntry.TYPE_INT, (
          short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)105, "OutEquGroup", "", "", "AC", VDFEntry.TYPE_CHAR, 
          (short)20, (short)0, 1, (short)0, null), 
        new VDFEntry((int)106, "OutEquGroup", "OutEquGWsExamEquivalents", 
          "WsExamEquivalents", "WsEquivalentCode", VDFEntry.TYPE_STRING, (short)
          20, (short)0, 7, (short)0, null), 
        new VDFEntry((int)107, "OutEquGroup", "OutEquGWsExamEquivalents", 
          "WsExamEquivalents", "WsSamePaperFlag", VDFEntry.TYPE_STRING, (short)
          20, (short)0, 1, (short)0, null), 
        new VDFEntry((int)108, "", "OutPrintQuantityIefSupplied", "IefSupplied",
           "Count", VDFEntry.TYPE_INT, (short)1, (short)0, 8, (short)0, null), 
      };
      localVdf = new VDF(vdfEntries);
    }
    try {
      VDF result = (VDF)localVdf.clone();
      result.initViewData();
      return result;
    } catch( CloneNotSupportedException e ) {
      return null;
    }
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    // predicate view item
    if ( vdf.getEntries()[0].getDataValue().getObject() != null )
    {
      OutNrOfCombinedPapersIefSuppliedCount = ((Integer)vdf.getEntries()[0]
        .getDataValue().getObject()).intValue();
    }
    else 
    {
      OutNrOfCombinedPapersIefSuppliedCount = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[1].getDataValue().getObject() != null )
    {
      OutNextExamTypistLogExamYear = ((Short)vdf.getEntries()[1].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutNextExamTypistLogExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[2].getDataValue().getObject() != null )
    {
      OutNextExamTypistLogMkExamPeriodCod = ((Short)vdf.getEntries()[2]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutNextExamTypistLogMkExamPeriodCod = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[3].getDataValue().getObject() != null )
    {
      OutPrevExamTypistLogExamYear = ((Short)vdf.getEntries()[3].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutPrevExamTypistLogExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[4].getDataValue().getObject() != null )
    {
      OutPrevExamTypistLogMkExamPeriodCod = ((Short)vdf.getEntries()[4]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutPrevExamTypistLogMkExamPeriodCod = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[5].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogExamYear = ((Short)vdf.getEntries()[5].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      OutKeyExamTypistLogExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[6].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogMkExamPeriodCod = ((Short)vdf.getEntries()[6]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutKeyExamTypistLogMkExamPeriodCod = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[7].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogMkStudyUnitCode = ((String)vdf.getEntries()[7]
        .getDataValue().getObject());
    }
    else 
    {
      OutKeyExamTypistLogMkStudyUnitCode = "";
    }
    // predicate view item
    if ( vdf.getEntries()[8].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogCombinedWith = ((String)vdf.getEntries()[8]
        .getDataValue().getObject());
    }
    else 
    {
      OutKeyExamTypistLogCombinedWith = "                         ";
    }
    // predicate view item
    if ( vdf.getEntries()[9].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogRemarks = ((String)vdf.getEntries()[9].getDataValue()
        .getObject());
    }
    else 
    {
      OutKeyExamTypistLogRemarks = "";
    }
    // predicate view item
    if ( vdf.getEntries()[10].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogRemarks2 = ((String)vdf.getEntries()[10].getDataValue()
        .getObject());
    }
    else 
    {
      OutKeyExamTypistLogRemarks2 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[11].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogRemarks3 = ((String)vdf.getEntries()[11].getDataValue()
        .getObject());
    }
    else 
    {
      OutKeyExamTypistLogRemarks3 = "                              ";
    }
    // predicate view item
    if ( vdf.getEntries()[12].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogRemarks4 = ((String)vdf.getEntries()[12].getDataValue()
        .getObject());
    }
    else 
    {
      OutKeyExamTypistLogRemarks4 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[13].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogRemarks5 = ((String)vdf.getEntries()[13].getDataValue()
        .getObject());
    }
    else 
    {
      OutKeyExamTypistLogRemarks5 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[14].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogRemarks6 = ((String)vdf.getEntries()[14].getDataValue()
        .getObject());
    }
    else 
    {
      OutKeyExamTypistLogRemarks6 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[15].getDataValue().getObject() != null )
    {
      OutKeyExamTypistLogPaperExpected = ((String)vdf.getEntries()[15]
        .getDataValue().getObject());
    }
    else 
    {
      OutKeyExamTypistLogPaperExpected = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[16].getDataValue().getObject() != null )
    {
      OutSearchCriteriaExamTypistLogExamYear = ((Short)vdf.getEntries()[16]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutSearchCriteriaExamTypistLogExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[17].getDataValue().getObject() != null )
    {
      OutSearchCriteriaExamTypistLogMkExamPeriodCod = ((Short)vdf.getEntries()[
        17].getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutSearchCriteriaExamTypistLogMkExamPeriodCod = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[18].getDataValue().getObject() != null )
    {
      OutSearchCriteriaExamTypistLogMkStudyUnitCode = ((String)vdf.getEntries()[
        18].getDataValue().getObject());
    }
    else 
    {
      OutSearchCriteriaExamTypistLogMkStudyUnitCode = "";
    }
    // group view current cardinality
    if ( vdf.getEntries()[19].getDataValue().getObject() != null )
    {
      OutLogEntriesGrp_MA = ((Integer)vdf.getEntries()[19].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutLogEntriesGrp_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[20].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutLogEntriesGrp_AC[adim0] = ((Character)((VDFEntryObject [])
          vdf.getEntries()[20].getDataValue().getObject())[adim0].getObject())
          .charValue();
      }
      else 
      {
        OutLogEntriesGrp_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[21].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGCalcQuantIefSuppliedCount[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[21].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGCalcQuantIefSuppliedCount[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[22].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGPaperColourCsfStringsString10[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[22].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGPaperColourCsfStringsString10[adim0] = "          ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[23].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamPeriodDateDate[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[23].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamPeriodDateDate[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[24].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGIefSuppliedCount[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[24].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGIefSuppliedCount[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[25].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGIefSuppliedCommand[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[25].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGIefSuppliedCommand[adim0] = 
"                                                                                "
          ;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[26].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGIefSuppliedSelectChar[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[26].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGIefSuppliedSelectChar[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[27].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryPaperNo[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[27].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGExamTypistLogEntryPaperNo[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[28].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryTypist[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[28].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGExamTypistLogEntryTypist[adim0] = "";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[29].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryPaperFormat[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[29].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGExamTypistLogEntryPaperFormat[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[30].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateReceived[adim0] = ((Integer)((VDFEntryObject [
          ])vdf.getEntries()[30].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateReceived[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[31].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateProof1[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[31].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateProof1[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[32].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateProof2[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[32].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateProof2[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[33].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateProof3[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[33].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateProof3[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[34].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateToPrint[adim0] = ((Integer)((VDFEntryObject []
          )vdf.getEntries()[34].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateToPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[35].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryCpfReportPrinted[adim0] = ((String)((
          VDFEntryObject [])vdf.getEntries()[35].getDataValue().getObject())[
          adim0].getObject());
      }
      else 
      {
        OutGExamTypistLogEntryCpfReportPrinted[adim0] = "";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[36].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateInSafe[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[36].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateInSafe[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[37].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateToDept[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[37].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateToDept[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[38].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateFromDept[adim0] = ((Integer)((VDFEntryObject [
          ])vdf.getEntries()[38].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateFromDept[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[39].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDate2ToPrint[adim0] = ((Integer)((VDFEntryObject [
          ])vdf.getEntries()[39].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDate2ToPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[40].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDate2FromPrint[adim0] = ((Integer)((
          VDFEntryObject [])vdf.getEntries()[40].getDataValue().getObject())[
          adim0].getObject()).intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDate2FromPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[41].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDate3ToPrint[adim0] = ((Integer)((VDFEntryObject [
          ])vdf.getEntries()[41].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDate3ToPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[42].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDate3FromPrint[adim0] = ((Integer)((
          VDFEntryObject [])vdf.getEntries()[42].getDataValue().getObject())[
          adim0].getObject()).intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDate3FromPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[43].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryQuant3ToPrint[adim0] = ((Integer)((VDFEntryObject 
          [])vdf.getEntries()[43].getDataValue().getObject())[adim0].getObject()
          ).intValue();
      }
      else 
      {
        OutGExamTypistLogEntryQuant3ToPrint[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[44].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryQuantToPrint[adim0] = ((Integer)((VDFEntryObject [
          ])vdf.getEntries()[44].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryQuantToPrint[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[45].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryQuantCalcedOn[adim0] = ((Integer)((VDFEntryObject 
          [])vdf.getEntries()[45].getDataValue().getObject())[adim0].getObject()
          ).intValue();
      }
      else 
      {
        OutGExamTypistLogEntryQuantCalcedOn[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[46].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryQuant2ToPrint[adim0] = ((Integer)((VDFEntryObject 
          [])vdf.getEntries()[46].getDataValue().getObject())[adim0].getObject()
          ).intValue();
      }
      else 
      {
        OutGExamTypistLogEntryQuant2ToPrint[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[47].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryQuant2CalcedOn[adim0] = ((Integer)((
          VDFEntryObject [])vdf.getEntries()[47].getDataValue().getObject())[
          adim0].getObject()).intValue();
      }
      else 
      {
        OutGExamTypistLogEntryQuant2CalcedOn[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[48].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntrySurplusQuant[adim0] = ((Integer)((VDFEntryObject [
          ])vdf.getEntries()[48].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntrySurplusQuant[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[49].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateScanned[adim0] = ((Integer)((VDFEntryObject []
          )vdf.getEntries()[49].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateScanned[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[50].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDateAfrScanned[adim0] = ((Integer)((
          VDFEntryObject [])vdf.getEntries()[50].getDataValue().getObject())[
          adim0].getObject()).intValue();
      }
      else 
      {
        OutGExamTypistLogEntryDateAfrScanned[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[51].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryOpenForWeb[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[51].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGExamTypistLogEntryOpenForWeb[adim0] = "";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[52].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryDocketChanges[adim0] = ((String)((VDFEntryObject [
          ])vdf.getEntries()[52].getDataValue().getObject())[adim0].getObject())
          ;
      }
      else 
      {
        OutGExamTypistLogEntryDocketChanges[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[53].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryPaperChanges[adim0] = ((String)((VDFEntryObject []
          )vdf.getEntries()[53].getDataValue().getObject())[adim0].getObject())
          ;
      }
      else 
      {
        OutGExamTypistLogEntryPaperChanges[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[54].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGExamTypistLogEntryElectronicPaper[adim0] = ((String)((
          VDFEntryObject [])vdf.getEntries()[54].getDataValue().getObject())[
          adim0].getObject());
      }
      else 
      {
        OutGExamTypistLogEntryElectronicPaper[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[55].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGMyunisaWsRegistrationDatesFromDate[adim0] = ((Integer)((
          VDFEntryObject [])vdf.getEntries()[55].getDataValue().getObject())[
          adim0].getObject()).intValue();
      }
      else 
      {
        OutGMyunisaWsRegistrationDatesFromDate[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[56].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGEngPaperCsfStringsString1[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[56].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGEngPaperCsfStringsString1[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[57].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGAfrPaperCsfStringsString1[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[57].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGAfrPaperCsfStringsString1[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[58].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGElectronicLogsCsfStringsString1[adim0] = ((String)((VDFEntryObject [
          ])vdf.getEntries()[58].getDataValue().getObject())[adim0].getObject())
          ;
      }
      else 
      {
        OutGElectronicLogsCsfStringsString1[adim0] = " ";
      }
    }
    // predicate view item
    if ( vdf.getEntries()[59].getDataValue().getObject() != null )
    {
      OutScCpfAccessIefSuppliedFlag = ((String)vdf.getEntries()[59]
        .getDataValue().getObject());
    }
    else 
    {
      OutScCpfAccessIefSuppliedFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[60].getDataValue().getObject() != null )
    {
      OutScTypAccessIefSuppliedFlag = ((String)vdf.getEntries()[60]
        .getDataValue().getObject());
    }
    else 
    {
      OutScTypAccessIefSuppliedFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[61].getDataValue().getObject() != null )
    {
      OutIefSuppliedFlag = ((String)vdf.getEntries()[61].getDataValue()
        .getObject());
    }
    else 
    {
      OutIefSuppliedFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[62].getDataValue().getObject() != null )
    {
      OutWsFunctionNumber = ((Integer)vdf.getEntries()[62].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutWsFunctionNumber = 0;
    }
    // group view current cardinality
    if ( vdf.getEntries()[63].getDataValue().getObject() != null )
    {
      OutListGroup_MA = ((Integer)vdf.getEntries()[63].getDataValue().getObject(
        )).intValue();
    }
    else 
    {
      OutListGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutListGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[64].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutListGroup_AC[adim0] = ((Character)((VDFEntryObject [])vdf.getEntries(
          )[64].getDataValue().getObject())[adim0].getObject()).charValue();
      }
      else 
      {
        OutListGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutListGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[65].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGListIefSuppliedSelectChar[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[65].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGListIefSuppliedSelectChar[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutListGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[66].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGListCsfStringsString100[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[66].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGListCsfStringsString100[adim0] = 
"                                                                                                    "
          ;
      }
    }
    // predicate view item
    if ( vdf.getEntries()[67].getDataValue().getObject() != null )
    {
      OutWsStudyUnitMkDepartmentCode = ((Short)vdf.getEntries()[67]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutWsStudyUnitMkDepartmentCode = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[68].getDataValue().getObject() != null )
    {
      OutWsStudyUnitEngLongDescription = ((String)vdf.getEntries()[68]
        .getDataValue().getObject());
    }
    else 
    {
      OutWsStudyUnitEngLongDescription = 
"                                                                                                                                                                        "
        ;
    }
    // predicate view item
    if ( vdf.getEntries()[69].getDataValue().getObject() != null )
    {
      OutWsStudyUnitCollegeFlag = ((String)vdf.getEntries()[69].getDataValue()
        .getObject());
    }
    else 
    {
      OutWsStudyUnitCollegeFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[70].getDataValue().getObject() != null )
    {
      OutErrMsgCsfStringsString500 = ((String)vdf.getEntries()[70].getDataValue(
        ).getObject());
    }
    else 
    {
      OutErrMsgCsfStringsString500 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[71].getDataValue().getObject() != null )
    {
      OutSecurityWsUserNumber = ((Integer)vdf.getEntries()[71].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      OutSecurityWsUserNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[72].getDataValue().getObject() != null )
    {
      OutSecurityWsPrinterCode = ((String)vdf.getEntries()[72].getDataValue()
        .getObject());
    }
    else 
    {
      OutSecurityWsPrinterCode = "          ";
    }
    // predicate view item
    if ( vdf.getEntries()[73].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsReturnCode = ((Short)vdf.getEntries()[73]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsReturnCode = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[74].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerVersionNumber = ((Short)
        vdf.getEntries()[74].getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsServerVersionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[75].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerRevisionNumber = ((Short)
        vdf.getEntries()[75].getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsServerRevisionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[76].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerDevelopmentPhase = ((String)
        vdf.getEntries()[76].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerDevelopmentPhase = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[77].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsAction = ((String)vdf.getEntries()[77]
        .getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsAction = "  ";
    }
    // predicate view item
    if ( vdf.getEntries()[78].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerDate = ((Integer)vdf.getEntries()[
        78].getDataValue().getObject()).intValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsServerDate = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[79].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerTime = ((Integer)vdf.getEntries()[
        79].getDataValue().getObject()).intValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsServerTime = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[80].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerTimestamp = ((String)vdf.getEntries(
        )[80].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerTimestamp = "00000000000000000000";
    }
    // predicate view item
    if ( vdf.getEntries()[81].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerTransactionCode = ((String)
        vdf.getEntries()[81].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerTransactionCode = "        ";
    }
    // predicate view item
    if ( vdf.getEntries()[82].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerUserId = ((String)vdf.getEntries()[
        82].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerUserId = "        ";
    }
    // predicate view item
    if ( vdf.getEntries()[83].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsServerRollbackFlag = ((String)
        vdf.getEntries()[83].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsServerRollbackFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[84].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsClientIsGuiFlag = ((String)vdf.getEntries(
        )[84].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsClientIsGuiFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[85].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsActionsPendingFlag = ((String)
        vdf.getEntries()[85].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsActionsPendingFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[86].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsClientVersionNumber = ((Short)
        vdf.getEntries()[86].getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsClientVersionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[87].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsClientRevisionNumber = ((Short)
        vdf.getEntries()[87].getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutCsfClientServerCommunicationsClientRevisionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[88].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsClientDevelopmentPhase = ((String)
        vdf.getEntries()[88].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsClientDevelopmentPhase = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[89].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsListLinkFlag = ((String)vdf.getEntries()[
        89].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsListLinkFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[90].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsCancelFlag = ((String)vdf.getEntries()[90]
        .getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsCancelFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[91].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsMaintLinkFlag = ((String)vdf.getEntries()[
        91].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsMaintLinkFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[92].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsForceDatabaseRead = ((String)
        vdf.getEntries()[92].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsForceDatabaseRead = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[93].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsRgvScrollUpFlag = ((String)vdf.getEntries(
        )[93].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsRgvScrollUpFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[94].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsRgvScrollDownFlag = ((String)
        vdf.getEntries()[94].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsRgvScrollDownFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[95].getDataValue().getObject() != null )
    {
      OutCsfClientServerCommunicationsObjectRetrievedFlag = ((String)
        vdf.getEntries()[95].getDataValue().getObject());
    }
    else 
    {
      OutCsfClientServerCommunicationsObjectRetrievedFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[96].getDataValue().getObject() != null )
    {
      OutReportWizfuncReportingControlFunction = ((String)vdf.getEntries()[96]
        .getDataValue().getObject());
    }
    else 
    {
      OutReportWizfuncReportingControlFunction = "";
    }
    // predicate view item
    if ( vdf.getEntries()[97].getDataValue().getObject() != null )
    {
      OutReportWizfuncReportingControlPathAndFilename = ((String)vdf.getEntries(
        )[97].getDataValue().getObject());
    }
    else 
    {
      OutReportWizfuncReportingControlPathAndFilename = "";
    }
    // predicate view item
    if ( vdf.getEntries()[98].getDataValue().getObject() != null )
    {
      OutReportWizfuncReportingControlReportWidth = ((Short)vdf.getEntries()[98]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      OutReportWizfuncReportingControlReportWidth = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[99].getDataValue().getObject() != null )
    {
      OutReportWizfuncReportingControlStartingLineCount = ((Integer)
        vdf.getEntries()[99].getDataValue().getObject()).intValue();
    }
    else 
    {
      OutReportWizfuncReportingControlStartingLineCount = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[100].getDataValue().getObject() != null )
    {
      OutReportWizfuncReportingControlEndingLineCount = ((Integer)
        vdf.getEntries()[100].getDataValue().getObject()).intValue();
    }
    else 
    {
      OutReportWizfuncReportingControlEndingLineCount = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[101].getDataValue().getObject() != null )
    {
      OutReportWizfuncReportingControlWizfuncReturnCode = ((String)
        vdf.getEntries()[101].getDataValue().getObject());
    }
    else 
    {
      OutReportWizfuncReportingControlWizfuncReturnCode = "        ";
    }
    // predicate view item
    if ( vdf.getEntries()[102].getDataValue().getObject() != null )
    {
      OutReportWizfuncReportingControlWizfuncReturnMessage = ((String)
        vdf.getEntries()[102].getDataValue().getObject());
    }
    else 
    {
      OutReportWizfuncReportingControlWizfuncReturnMessage = "";
    }
    // group view current cardinality
    if ( vdf.getEntries()[103].getDataValue().getObject() != null )
    {
      OutEquGroup_MA = ((Integer)vdf.getEntries()[103].getDataValue().getObject(
        )).intValue();
    }
    else 
    {
      OutEquGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutEquGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[104].getDataValue().getObject())
        [adim0].getObject() != null )
      {
        OutEquGroup_AC[adim0] = ((Character)((VDFEntryObject [])vdf.getEntries()
          [104].getDataValue().getObject())[adim0].getObject()).charValue();
      }
      else 
      {
        OutEquGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutEquGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[105].getDataValue().getObject())
        [adim0].getObject() != null )
      {
        OutEquGWsExamEquivalentsWsEquivalentCode[adim0] = ((String)((
          VDFEntryObject [])vdf.getEntries()[105].getDataValue().getObject())[
          adim0].getObject());
      }
      else 
      {
        OutEquGWsExamEquivalentsWsEquivalentCode[adim0] = "       ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutEquGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[106].getDataValue().getObject())
        [adim0].getObject() != null )
      {
        OutEquGWsExamEquivalentsWsSamePaperFlag[adim0] = ((String)((
          VDFEntryObject [])vdf.getEntries()[106].getDataValue().getObject())[
          adim0].getObject());
      }
      else 
      {
        OutEquGWsExamEquivalentsWsSamePaperFlag[adim0] = " ";
      }
    }
    // predicate view item
    if ( vdf.getEntries()[107].getDataValue().getObject() != null )
    {
      OutPrintQuantityIefSuppliedCount = ((Integer)vdf.getEntries()[107]
        .getDataValue().getObject()).intValue();
    }
    else 
    {
      OutPrintQuantityIefSuppliedCount = 0;
    }
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    VDF vdf = getViewDefinition();
    // predicate view item
    vdf.getEntries()[0].getDataValue().setObject(new Integer(
      OutNrOfCombinedPapersIefSuppliedCount));
    // predicate view item
    vdf.getEntries()[1].getDataValue().setObject(new Short(
      OutNextExamTypistLogExamYear));
    // predicate view item
    vdf.getEntries()[2].getDataValue().setObject(new Short(
      OutNextExamTypistLogMkExamPeriodCod));
    // predicate view item
    vdf.getEntries()[3].getDataValue().setObject(new Short(
      OutPrevExamTypistLogExamYear));
    // predicate view item
    vdf.getEntries()[4].getDataValue().setObject(new Short(
      OutPrevExamTypistLogMkExamPeriodCod));
    // predicate view item
    vdf.getEntries()[5].getDataValue().setObject(new Short(
      OutKeyExamTypistLogExamYear));
    // predicate view item
    vdf.getEntries()[6].getDataValue().setObject(new Short(
      OutKeyExamTypistLogMkExamPeriodCod));
    // predicate view item
    vdf.getEntries()[7].getDataValue().setObject(
      OutKeyExamTypistLogMkStudyUnitCode);
    // predicate view item
    vdf.getEntries()[8].getDataValue().setObject(
      OutKeyExamTypistLogCombinedWith);
    // predicate view item
    vdf.getEntries()[9].getDataValue().setObject(OutKeyExamTypistLogRemarks);
    // predicate view item
    vdf.getEntries()[10].getDataValue().setObject(OutKeyExamTypistLogRemarks2);
    // predicate view item
    vdf.getEntries()[11].getDataValue().setObject(OutKeyExamTypistLogRemarks3);
    // predicate view item
    vdf.getEntries()[12].getDataValue().setObject(OutKeyExamTypistLogRemarks4);
    // predicate view item
    vdf.getEntries()[13].getDataValue().setObject(OutKeyExamTypistLogRemarks5);
    // predicate view item
    vdf.getEntries()[14].getDataValue().setObject(OutKeyExamTypistLogRemarks6);
    // predicate view item
    vdf.getEntries()[15].getDataValue().setObject(
      OutKeyExamTypistLogPaperExpected);
    // predicate view item
    vdf.getEntries()[16].getDataValue().setObject(new Short(
      OutSearchCriteriaExamTypistLogExamYear));
    // predicate view item
    vdf.getEntries()[17].getDataValue().setObject(new Short(
      OutSearchCriteriaExamTypistLogMkExamPeriodCod));
    // predicate view item
    vdf.getEntries()[18].getDataValue().setObject(
      OutSearchCriteriaExamTypistLogMkStudyUnitCode);
    // group view current cardinality
    vdf.getEntries()[19].getDataValue().setObject(new Integer(
      OutLogEntriesGrp_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      if ( adim0 < OutLogEntriesGrp_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[20].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[20].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[20].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[21].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGCalcQuantIefSuppliedCount[adim0]));
    }
    vdf.getEntries()[21].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[22].getDataValue().getObject())[
        adim0].setObject(OutGPaperColourCsfStringsString10[adim0]);
    }
    vdf.getEntries()[22].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[23].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamPeriodDateDate[adim0]));
    }
    vdf.getEntries()[23].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[24].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGIefSuppliedCount[adim0]));
    }
    vdf.getEntries()[24].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[25].getDataValue().getObject())[
        adim0].setObject(OutGIefSuppliedCommand[adim0]);
    }
    vdf.getEntries()[25].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[26].getDataValue().getObject())[
        adim0].setObject(OutGIefSuppliedSelectChar[adim0]);
    }
    vdf.getEntries()[26].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[27].getDataValue().getObject())[
        adim0].setObject(new Short(OutGExamTypistLogEntryPaperNo[adim0]));
    }
    vdf.getEntries()[27].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[28].getDataValue().getObject())[
        adim0].setObject(OutGExamTypistLogEntryTypist[adim0]);
    }
    vdf.getEntries()[28].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[29].getDataValue().getObject())[
        adim0].setObject(OutGExamTypistLogEntryPaperFormat[adim0]);
    }
    vdf.getEntries()[29].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[30].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateReceived[adim0]))
        ;
    }
    vdf.getEntries()[30].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[31].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateProof1[adim0]));
    }
    vdf.getEntries()[31].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[32].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateProof2[adim0]));
    }
    vdf.getEntries()[32].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[33].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateProof3[adim0]));
    }
    vdf.getEntries()[33].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[34].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateToPrint[adim0]))
        ;
    }
    vdf.getEntries()[34].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[35].getDataValue().getObject())[
        adim0].setObject(OutGExamTypistLogEntryCpfReportPrinted[adim0]);
    }
    vdf.getEntries()[35].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[36].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateInSafe[adim0]));
    }
    vdf.getEntries()[36].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[37].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateToDept[adim0]));
    }
    vdf.getEntries()[37].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[38].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateFromDept[adim0]))
        ;
    }
    vdf.getEntries()[38].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[39].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDate2ToPrint[adim0]))
        ;
    }
    vdf.getEntries()[39].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[40].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDate2FromPrint[adim0]
        ));
    }
    vdf.getEntries()[40].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[41].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDate3ToPrint[adim0]))
        ;
    }
    vdf.getEntries()[41].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[42].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDate3FromPrint[adim0]
        ));
    }
    vdf.getEntries()[42].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[43].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryQuant3ToPrint[adim0])
        );
    }
    vdf.getEntries()[43].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[44].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryQuantToPrint[adim0]))
        ;
    }
    vdf.getEntries()[44].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[45].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryQuantCalcedOn[adim0])
        );
    }
    vdf.getEntries()[45].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[46].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryQuant2ToPrint[adim0])
        );
    }
    vdf.getEntries()[46].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[47].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryQuant2CalcedOn[adim0]
        ));
    }
    vdf.getEntries()[47].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[48].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntrySurplusQuant[adim0]))
        ;
    }
    vdf.getEntries()[48].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[49].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateScanned[adim0]))
        ;
    }
    vdf.getEntries()[49].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[50].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGExamTypistLogEntryDateAfrScanned[adim0]
        ));
    }
    vdf.getEntries()[50].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[51].getDataValue().getObject())[
        adim0].setObject(OutGExamTypistLogEntryOpenForWeb[adim0]);
    }
    vdf.getEntries()[51].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[52].getDataValue().getObject())[
        adim0].setObject(OutGExamTypistLogEntryDocketChanges[adim0]);
    }
    vdf.getEntries()[52].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[53].getDataValue().getObject())[
        adim0].setObject(OutGExamTypistLogEntryPaperChanges[adim0]);
    }
    vdf.getEntries()[53].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[54].getDataValue().getObject())[
        adim0].setObject(OutGExamTypistLogEntryElectronicPaper[adim0]);
    }
    vdf.getEntries()[54].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[55].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGMyunisaWsRegistrationDatesFromDate[
        adim0]));
    }
    vdf.getEntries()[55].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[56].getDataValue().getObject())[
        adim0].setObject(OutGEngPaperCsfStringsString1[adim0]);
    }
    vdf.getEntries()[56].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[57].getDataValue().getObject())[
        adim0].setObject(OutGAfrPaperCsfStringsString1[adim0]);
    }
    vdf.getEntries()[57].setCountUsed((short)OutLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[58].getDataValue().getObject())[
        adim0].setObject(OutGElectronicLogsCsfStringsString1[adim0]);
    }
    vdf.getEntries()[58].setCountUsed((short)OutLogEntriesGrp_MA);
    // predicate view item
    vdf.getEntries()[59].getDataValue().setObject(OutScCpfAccessIefSuppliedFlag)
      ;
    // predicate view item
    vdf.getEntries()[60].getDataValue().setObject(OutScTypAccessIefSuppliedFlag)
      ;
    // predicate view item
    vdf.getEntries()[61].getDataValue().setObject(OutIefSuppliedFlag);
    // predicate view item
    vdf.getEntries()[62].getDataValue().setObject(new Integer(
      OutWsFunctionNumber));
    // group view current cardinality
    vdf.getEntries()[63].getDataValue().setObject(new Integer(OutListGroup_MA))
      ;
    // group view active flags
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      if ( adim0 < OutListGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[64].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[64].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[64].setCountUsed((short)OutListGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[65].getDataValue().getObject())[
        adim0].setObject(OutGListIefSuppliedSelectChar[adim0]);
    }
    vdf.getEntries()[65].setCountUsed((short)OutListGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[66].getDataValue().getObject())[
        adim0].setObject(OutGListCsfStringsString100[adim0]);
    }
    vdf.getEntries()[66].setCountUsed((short)OutListGroup_MA);
    // predicate view item
    vdf.getEntries()[67].getDataValue().setObject(new Short(
      OutWsStudyUnitMkDepartmentCode));
    // predicate view item
    vdf.getEntries()[68].getDataValue().setObject(
      OutWsStudyUnitEngLongDescription);
    // predicate view item
    vdf.getEntries()[69].getDataValue().setObject(OutWsStudyUnitCollegeFlag);
    // predicate view item
    vdf.getEntries()[70].getDataValue().setObject(OutErrMsgCsfStringsString500)
      ;
    // predicate view item
    vdf.getEntries()[71].getDataValue().setObject(new Integer(
      OutSecurityWsUserNumber));
    // predicate view item
    vdf.getEntries()[72].getDataValue().setObject(OutSecurityWsPrinterCode);
    // predicate view item
    vdf.getEntries()[73].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsReturnCode));
    // predicate view item
    vdf.getEntries()[74].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsServerVersionNumber));
    // predicate view item
    vdf.getEntries()[75].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsServerRevisionNumber));
    // predicate view item
    vdf.getEntries()[76].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerDevelopmentPhase);
    // predicate view item
    vdf.getEntries()[77].getDataValue().setObject(
      OutCsfClientServerCommunicationsAction);
    // predicate view item
    vdf.getEntries()[78].getDataValue().setObject(new Integer(
      OutCsfClientServerCommunicationsServerDate));
    // predicate view item
    vdf.getEntries()[79].getDataValue().setObject(new Integer(
      OutCsfClientServerCommunicationsServerTime));
    // predicate view item
    vdf.getEntries()[80].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerTimestamp);
    // predicate view item
    vdf.getEntries()[81].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerTransactionCode);
    // predicate view item
    vdf.getEntries()[82].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerUserId);
    // predicate view item
    vdf.getEntries()[83].getDataValue().setObject(
      OutCsfClientServerCommunicationsServerRollbackFlag);
    // predicate view item
    vdf.getEntries()[84].getDataValue().setObject(
      OutCsfClientServerCommunicationsClientIsGuiFlag);
    // predicate view item
    vdf.getEntries()[85].getDataValue().setObject(
      OutCsfClientServerCommunicationsActionsPendingFlag);
    // predicate view item
    vdf.getEntries()[86].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsClientVersionNumber));
    // predicate view item
    vdf.getEntries()[87].getDataValue().setObject(new Short(
      OutCsfClientServerCommunicationsClientRevisionNumber));
    // predicate view item
    vdf.getEntries()[88].getDataValue().setObject(
      OutCsfClientServerCommunicationsClientDevelopmentPhase);
    // predicate view item
    vdf.getEntries()[89].getDataValue().setObject(
      OutCsfClientServerCommunicationsListLinkFlag);
    // predicate view item
    vdf.getEntries()[90].getDataValue().setObject(
      OutCsfClientServerCommunicationsCancelFlag);
    // predicate view item
    vdf.getEntries()[91].getDataValue().setObject(
      OutCsfClientServerCommunicationsMaintLinkFlag);
    // predicate view item
    vdf.getEntries()[92].getDataValue().setObject(
      OutCsfClientServerCommunicationsForceDatabaseRead);
    // predicate view item
    vdf.getEntries()[93].getDataValue().setObject(
      OutCsfClientServerCommunicationsRgvScrollUpFlag);
    // predicate view item
    vdf.getEntries()[94].getDataValue().setObject(
      OutCsfClientServerCommunicationsRgvScrollDownFlag);
    // predicate view item
    vdf.getEntries()[95].getDataValue().setObject(
      OutCsfClientServerCommunicationsObjectRetrievedFlag);
    // predicate view item
    vdf.getEntries()[96].getDataValue().setObject(
      OutReportWizfuncReportingControlFunction);
    // predicate view item
    vdf.getEntries()[97].getDataValue().setObject(
      OutReportWizfuncReportingControlPathAndFilename);
    // predicate view item
    vdf.getEntries()[98].getDataValue().setObject(new Short(
      OutReportWizfuncReportingControlReportWidth));
    // predicate view item
    vdf.getEntries()[99].getDataValue().setObject(new Integer(
      OutReportWizfuncReportingControlStartingLineCount));
    // predicate view item
    vdf.getEntries()[100].getDataValue().setObject(new Integer(
      OutReportWizfuncReportingControlEndingLineCount));
    // predicate view item
    vdf.getEntries()[101].getDataValue().setObject(
      OutReportWizfuncReportingControlWizfuncReturnCode);
    // predicate view item
    vdf.getEntries()[102].getDataValue().setObject(
      OutReportWizfuncReportingControlWizfuncReturnMessage);
    // group view current cardinality
    vdf.getEntries()[103].getDataValue().setObject(new Integer(OutEquGroup_MA))
      ;
    // group view active flags
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      if ( adim0 < OutEquGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[104].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[104].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[104].setCountUsed((short)OutEquGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[105].getDataValue().getObject())[
        adim0].setObject(OutEquGWsExamEquivalentsWsEquivalentCode[adim0]);
    }
    vdf.getEntries()[105].setCountUsed((short)OutEquGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 20; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[106].getDataValue().getObject())[
        adim0].setObject(OutEquGWsExamEquivalentsWsSamePaperFlag[adim0]);
    }
    vdf.getEntries()[106].setCountUsed((short)OutEquGroup_MA);
    // predicate view item
    vdf.getEntries()[107].getDataValue().setObject(new Integer(
      OutPrintQuantityIefSuppliedCount));
    return(vdf);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((EXPLL01S_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(EXPLL01S_OA orig)
  {
    OutNrOfCombinedPapersIefSuppliedCount_AT = 
      orig.OutNrOfCombinedPapersIefSuppliedCount_AT;
    OutNrOfCombinedPapersIefSuppliedCount_AS = 
      orig.OutNrOfCombinedPapersIefSuppliedCount_AS;
    OutNrOfCombinedPapersIefSuppliedCount = 
      orig.OutNrOfCombinedPapersIefSuppliedCount;
    OutNextExamTypistLogExamYear_AT = orig.OutNextExamTypistLogExamYear_AT;
    OutNextExamTypistLogExamYear_AS = orig.OutNextExamTypistLogExamYear_AS;
    OutNextExamTypistLogExamYear = orig.OutNextExamTypistLogExamYear;
    OutNextExamTypistLogMkExamPeriodCod_AT = 
      orig.OutNextExamTypistLogMkExamPeriodCod_AT;
    OutNextExamTypistLogMkExamPeriodCod_AS = 
      orig.OutNextExamTypistLogMkExamPeriodCod_AS;
    OutNextExamTypistLogMkExamPeriodCod = 
      orig.OutNextExamTypistLogMkExamPeriodCod;
    OutPrevExamTypistLogExamYear_AT = orig.OutPrevExamTypistLogExamYear_AT;
    OutPrevExamTypistLogExamYear_AS = orig.OutPrevExamTypistLogExamYear_AS;
    OutPrevExamTypistLogExamYear = orig.OutPrevExamTypistLogExamYear;
    OutPrevExamTypistLogMkExamPeriodCod_AT = 
      orig.OutPrevExamTypistLogMkExamPeriodCod_AT;
    OutPrevExamTypistLogMkExamPeriodCod_AS = 
      orig.OutPrevExamTypistLogMkExamPeriodCod_AS;
    OutPrevExamTypistLogMkExamPeriodCod = 
      orig.OutPrevExamTypistLogMkExamPeriodCod;
    OutKeyExamTypistLogExamYear_AT = orig.OutKeyExamTypistLogExamYear_AT;
    OutKeyExamTypistLogExamYear_AS = orig.OutKeyExamTypistLogExamYear_AS;
    OutKeyExamTypistLogExamYear = orig.OutKeyExamTypistLogExamYear;
    OutKeyExamTypistLogMkExamPeriodCod_AT = 
      orig.OutKeyExamTypistLogMkExamPeriodCod_AT;
    OutKeyExamTypistLogMkExamPeriodCod_AS = 
      orig.OutKeyExamTypistLogMkExamPeriodCod_AS;
    OutKeyExamTypistLogMkExamPeriodCod = 
      orig.OutKeyExamTypistLogMkExamPeriodCod;
    OutKeyExamTypistLogMkStudyUnitCode_AT = 
      orig.OutKeyExamTypistLogMkStudyUnitCode_AT;
    OutKeyExamTypistLogMkStudyUnitCode_AS = 
      orig.OutKeyExamTypistLogMkStudyUnitCode_AS;
    OutKeyExamTypistLogMkStudyUnitCode = 
      orig.OutKeyExamTypistLogMkStudyUnitCode;
    OutKeyExamTypistLogCombinedWith_AT = 
      orig.OutKeyExamTypistLogCombinedWith_AT;
    OutKeyExamTypistLogCombinedWith_AS = 
      orig.OutKeyExamTypistLogCombinedWith_AS;
    OutKeyExamTypistLogCombinedWith = orig.OutKeyExamTypistLogCombinedWith;
    OutKeyExamTypistLogRemarks_AT = orig.OutKeyExamTypistLogRemarks_AT;
    OutKeyExamTypistLogRemarks_AS = orig.OutKeyExamTypistLogRemarks_AS;
    OutKeyExamTypistLogRemarks = orig.OutKeyExamTypistLogRemarks;
    OutKeyExamTypistLogRemarks2_AT = orig.OutKeyExamTypistLogRemarks2_AT;
    OutKeyExamTypistLogRemarks2_AS = orig.OutKeyExamTypistLogRemarks2_AS;
    OutKeyExamTypistLogRemarks2 = orig.OutKeyExamTypistLogRemarks2;
    OutKeyExamTypistLogRemarks3_AT = orig.OutKeyExamTypistLogRemarks3_AT;
    OutKeyExamTypistLogRemarks3_AS = orig.OutKeyExamTypistLogRemarks3_AS;
    OutKeyExamTypistLogRemarks3 = orig.OutKeyExamTypistLogRemarks3;
    OutKeyExamTypistLogRemarks4_AT = orig.OutKeyExamTypistLogRemarks4_AT;
    OutKeyExamTypistLogRemarks4_AS = orig.OutKeyExamTypistLogRemarks4_AS;
    OutKeyExamTypistLogRemarks4 = orig.OutKeyExamTypistLogRemarks4;
    OutKeyExamTypistLogRemarks5_AT = orig.OutKeyExamTypistLogRemarks5_AT;
    OutKeyExamTypistLogRemarks5_AS = orig.OutKeyExamTypistLogRemarks5_AS;
    OutKeyExamTypistLogRemarks5 = orig.OutKeyExamTypistLogRemarks5;
    OutKeyExamTypistLogRemarks6_AT = orig.OutKeyExamTypistLogRemarks6_AT;
    OutKeyExamTypistLogRemarks6_AS = orig.OutKeyExamTypistLogRemarks6_AS;
    OutKeyExamTypistLogRemarks6 = orig.OutKeyExamTypistLogRemarks6;
    OutKeyExamTypistLogPaperExpected_AT = 
      orig.OutKeyExamTypistLogPaperExpected_AT;
    OutKeyExamTypistLogPaperExpected_AS = 
      orig.OutKeyExamTypistLogPaperExpected_AS;
    OutKeyExamTypistLogPaperExpected = orig.OutKeyExamTypistLogPaperExpected;
    OutSearchCriteriaExamTypistLogExamYear_AT = 
      orig.OutSearchCriteriaExamTypistLogExamYear_AT;
    OutSearchCriteriaExamTypistLogExamYear_AS = 
      orig.OutSearchCriteriaExamTypistLogExamYear_AS;
    OutSearchCriteriaExamTypistLogExamYear = 
      orig.OutSearchCriteriaExamTypistLogExamYear;
    OutSearchCriteriaExamTypistLogMkExamPeriodCod_AT = 
      orig.OutSearchCriteriaExamTypistLogMkExamPeriodCod_AT;
    OutSearchCriteriaExamTypistLogMkExamPeriodCod_AS = 
      orig.OutSearchCriteriaExamTypistLogMkExamPeriodCod_AS;
    OutSearchCriteriaExamTypistLogMkExamPeriodCod = 
      orig.OutSearchCriteriaExamTypistLogMkExamPeriodCod;
    OutSearchCriteriaExamTypistLogMkStudyUnitCode_AT = 
      orig.OutSearchCriteriaExamTypistLogMkStudyUnitCode_AT;
    OutSearchCriteriaExamTypistLogMkStudyUnitCode_AS = 
      orig.OutSearchCriteriaExamTypistLogMkStudyUnitCode_AS;
    OutSearchCriteriaExamTypistLogMkStudyUnitCode = 
      orig.OutSearchCriteriaExamTypistLogMkStudyUnitCode;
    OutLogEntriesGrp_MA = orig.OutLogEntriesGrp_MA;
    for(int a = 0; a < 5; a++)
    {
      OutLogEntriesGrp_AC[a] = orig.OutLogEntriesGrp_AC[a];
      OutGCalcQuantIefSuppliedCount_AT[a] = 
        orig.OutGCalcQuantIefSuppliedCount_AT[a];
      OutGCalcQuantIefSuppliedCount_AS[a] = 
        orig.OutGCalcQuantIefSuppliedCount_AS[a];
      OutGCalcQuantIefSuppliedCount[a] = orig.OutGCalcQuantIefSuppliedCount[a];
      OutGPaperColourCsfStringsString10_AT[a] = 
        orig.OutGPaperColourCsfStringsString10_AT[a];
      OutGPaperColourCsfStringsString10_AS[a] = 
        orig.OutGPaperColourCsfStringsString10_AS[a];
      OutGPaperColourCsfStringsString10[a] = 
        orig.OutGPaperColourCsfStringsString10[a];
      OutGExamPeriodDateDate_AT[a] = orig.OutGExamPeriodDateDate_AT[a];
      OutGExamPeriodDateDate_AS[a] = orig.OutGExamPeriodDateDate_AS[a];
      OutGExamPeriodDateDate[a] = orig.OutGExamPeriodDateDate[a];
      OutGIefSuppliedCount_AT[a] = orig.OutGIefSuppliedCount_AT[a];
      OutGIefSuppliedCount_AS[a] = orig.OutGIefSuppliedCount_AS[a];
      OutGIefSuppliedCount[a] = orig.OutGIefSuppliedCount[a];
      OutGIefSuppliedCommand_AT[a] = orig.OutGIefSuppliedCommand_AT[a];
      OutGIefSuppliedCommand_AS[a] = orig.OutGIefSuppliedCommand_AS[a];
      OutGIefSuppliedCommand[a] = orig.OutGIefSuppliedCommand[a];
      OutGIefSuppliedSelectChar_AT[a] = orig.OutGIefSuppliedSelectChar_AT[a];
      OutGIefSuppliedSelectChar_AS[a] = orig.OutGIefSuppliedSelectChar_AS[a];
      OutGIefSuppliedSelectChar[a] = orig.OutGIefSuppliedSelectChar[a];
      OutGExamTypistLogEntryPaperNo_AT[a] = 
        orig.OutGExamTypistLogEntryPaperNo_AT[a];
      OutGExamTypistLogEntryPaperNo_AS[a] = 
        orig.OutGExamTypistLogEntryPaperNo_AS[a];
      OutGExamTypistLogEntryPaperNo[a] = orig.OutGExamTypistLogEntryPaperNo[a];
      OutGExamTypistLogEntryTypist_AT[a] = orig.OutGExamTypistLogEntryTypist_AT[
        a];
      OutGExamTypistLogEntryTypist_AS[a] = orig.OutGExamTypistLogEntryTypist_AS[
        a];
      OutGExamTypistLogEntryTypist[a] = orig.OutGExamTypistLogEntryTypist[a];
      OutGExamTypistLogEntryPaperFormat_AT[a] = 
        orig.OutGExamTypistLogEntryPaperFormat_AT[a];
      OutGExamTypistLogEntryPaperFormat_AS[a] = 
        orig.OutGExamTypistLogEntryPaperFormat_AS[a];
      OutGExamTypistLogEntryPaperFormat[a] = 
        orig.OutGExamTypistLogEntryPaperFormat[a];
      OutGExamTypistLogEntryDateReceived_AT[a] = 
        orig.OutGExamTypistLogEntryDateReceived_AT[a];
      OutGExamTypistLogEntryDateReceived_AS[a] = 
        orig.OutGExamTypistLogEntryDateReceived_AS[a];
      OutGExamTypistLogEntryDateReceived[a] = 
        orig.OutGExamTypistLogEntryDateReceived[a];
      OutGExamTypistLogEntryDateProof1_AT[a] = 
        orig.OutGExamTypistLogEntryDateProof1_AT[a];
      OutGExamTypistLogEntryDateProof1_AS[a] = 
        orig.OutGExamTypistLogEntryDateProof1_AS[a];
      OutGExamTypistLogEntryDateProof1[a] = 
        orig.OutGExamTypistLogEntryDateProof1[a];
      OutGExamTypistLogEntryDateProof2_AT[a] = 
        orig.OutGExamTypistLogEntryDateProof2_AT[a];
      OutGExamTypistLogEntryDateProof2_AS[a] = 
        orig.OutGExamTypistLogEntryDateProof2_AS[a];
      OutGExamTypistLogEntryDateProof2[a] = 
        orig.OutGExamTypistLogEntryDateProof2[a];
      OutGExamTypistLogEntryDateProof3_AT[a] = 
        orig.OutGExamTypistLogEntryDateProof3_AT[a];
      OutGExamTypistLogEntryDateProof3_AS[a] = 
        orig.OutGExamTypistLogEntryDateProof3_AS[a];
      OutGExamTypistLogEntryDateProof3[a] = 
        orig.OutGExamTypistLogEntryDateProof3[a];
      OutGExamTypistLogEntryDateToPrint_AT[a] = 
        orig.OutGExamTypistLogEntryDateToPrint_AT[a];
      OutGExamTypistLogEntryDateToPrint_AS[a] = 
        orig.OutGExamTypistLogEntryDateToPrint_AS[a];
      OutGExamTypistLogEntryDateToPrint[a] = 
        orig.OutGExamTypistLogEntryDateToPrint[a];
      OutGExamTypistLogEntryCpfReportPrinted_AT[a] = 
        orig.OutGExamTypistLogEntryCpfReportPrinted_AT[a];
      OutGExamTypistLogEntryCpfReportPrinted_AS[a] = 
        orig.OutGExamTypistLogEntryCpfReportPrinted_AS[a];
      OutGExamTypistLogEntryCpfReportPrinted[a] = 
        orig.OutGExamTypistLogEntryCpfReportPrinted[a];
      OutGExamTypistLogEntryDateInSafe_AT[a] = 
        orig.OutGExamTypistLogEntryDateInSafe_AT[a];
      OutGExamTypistLogEntryDateInSafe_AS[a] = 
        orig.OutGExamTypistLogEntryDateInSafe_AS[a];
      OutGExamTypistLogEntryDateInSafe[a] = 
        orig.OutGExamTypistLogEntryDateInSafe[a];
      OutGExamTypistLogEntryDateToDept_AT[a] = 
        orig.OutGExamTypistLogEntryDateToDept_AT[a];
      OutGExamTypistLogEntryDateToDept_AS[a] = 
        orig.OutGExamTypistLogEntryDateToDept_AS[a];
      OutGExamTypistLogEntryDateToDept[a] = 
        orig.OutGExamTypistLogEntryDateToDept[a];
      OutGExamTypistLogEntryDateFromDept_AT[a] = 
        orig.OutGExamTypistLogEntryDateFromDept_AT[a];
      OutGExamTypistLogEntryDateFromDept_AS[a] = 
        orig.OutGExamTypistLogEntryDateFromDept_AS[a];
      OutGExamTypistLogEntryDateFromDept[a] = 
        orig.OutGExamTypistLogEntryDateFromDept[a];
      OutGExamTypistLogEntryDate2ToPrint_AT[a] = 
        orig.OutGExamTypistLogEntryDate2ToPrint_AT[a];
      OutGExamTypistLogEntryDate2ToPrint_AS[a] = 
        orig.OutGExamTypistLogEntryDate2ToPrint_AS[a];
      OutGExamTypistLogEntryDate2ToPrint[a] = 
        orig.OutGExamTypistLogEntryDate2ToPrint[a];
      OutGExamTypistLogEntryDate2FromPrint_AT[a] = 
        orig.OutGExamTypistLogEntryDate2FromPrint_AT[a];
      OutGExamTypistLogEntryDate2FromPrint_AS[a] = 
        orig.OutGExamTypistLogEntryDate2FromPrint_AS[a];
      OutGExamTypistLogEntryDate2FromPrint[a] = 
        orig.OutGExamTypistLogEntryDate2FromPrint[a];
      OutGExamTypistLogEntryDate3ToPrint_AT[a] = 
        orig.OutGExamTypistLogEntryDate3ToPrint_AT[a];
      OutGExamTypistLogEntryDate3ToPrint_AS[a] = 
        orig.OutGExamTypistLogEntryDate3ToPrint_AS[a];
      OutGExamTypistLogEntryDate3ToPrint[a] = 
        orig.OutGExamTypistLogEntryDate3ToPrint[a];
      OutGExamTypistLogEntryDate3FromPrint_AT[a] = 
        orig.OutGExamTypistLogEntryDate3FromPrint_AT[a];
      OutGExamTypistLogEntryDate3FromPrint_AS[a] = 
        orig.OutGExamTypistLogEntryDate3FromPrint_AS[a];
      OutGExamTypistLogEntryDate3FromPrint[a] = 
        orig.OutGExamTypistLogEntryDate3FromPrint[a];
      OutGExamTypistLogEntryQuant3ToPrint_AT[a] = 
        orig.OutGExamTypistLogEntryQuant3ToPrint_AT[a];
      OutGExamTypistLogEntryQuant3ToPrint_AS[a] = 
        orig.OutGExamTypistLogEntryQuant3ToPrint_AS[a];
      OutGExamTypistLogEntryQuant3ToPrint[a] = 
        orig.OutGExamTypistLogEntryQuant3ToPrint[a];
      OutGExamTypistLogEntryQuantToPrint_AT[a] = 
        orig.OutGExamTypistLogEntryQuantToPrint_AT[a];
      OutGExamTypistLogEntryQuantToPrint_AS[a] = 
        orig.OutGExamTypistLogEntryQuantToPrint_AS[a];
      OutGExamTypistLogEntryQuantToPrint[a] = 
        orig.OutGExamTypistLogEntryQuantToPrint[a];
      OutGExamTypistLogEntryQuantCalcedOn_AT[a] = 
        orig.OutGExamTypistLogEntryQuantCalcedOn_AT[a];
      OutGExamTypistLogEntryQuantCalcedOn_AS[a] = 
        orig.OutGExamTypistLogEntryQuantCalcedOn_AS[a];
      OutGExamTypistLogEntryQuantCalcedOn[a] = 
        orig.OutGExamTypistLogEntryQuantCalcedOn[a];
      OutGExamTypistLogEntryQuant2ToPrint_AT[a] = 
        orig.OutGExamTypistLogEntryQuant2ToPrint_AT[a];
      OutGExamTypistLogEntryQuant2ToPrint_AS[a] = 
        orig.OutGExamTypistLogEntryQuant2ToPrint_AS[a];
      OutGExamTypistLogEntryQuant2ToPrint[a] = 
        orig.OutGExamTypistLogEntryQuant2ToPrint[a];
      OutGExamTypistLogEntryQuant2CalcedOn_AT[a] = 
        orig.OutGExamTypistLogEntryQuant2CalcedOn_AT[a];
      OutGExamTypistLogEntryQuant2CalcedOn_AS[a] = 
        orig.OutGExamTypistLogEntryQuant2CalcedOn_AS[a];
      OutGExamTypistLogEntryQuant2CalcedOn[a] = 
        orig.OutGExamTypistLogEntryQuant2CalcedOn[a];
      OutGExamTypistLogEntrySurplusQuant_AT[a] = 
        orig.OutGExamTypistLogEntrySurplusQuant_AT[a];
      OutGExamTypistLogEntrySurplusQuant_AS[a] = 
        orig.OutGExamTypistLogEntrySurplusQuant_AS[a];
      OutGExamTypistLogEntrySurplusQuant[a] = 
        orig.OutGExamTypistLogEntrySurplusQuant[a];
      OutGExamTypistLogEntryDateScanned_AT[a] = 
        orig.OutGExamTypistLogEntryDateScanned_AT[a];
      OutGExamTypistLogEntryDateScanned_AS[a] = 
        orig.OutGExamTypistLogEntryDateScanned_AS[a];
      OutGExamTypistLogEntryDateScanned[a] = 
        orig.OutGExamTypistLogEntryDateScanned[a];
      OutGExamTypistLogEntryDateAfrScanned_AT[a] = 
        orig.OutGExamTypistLogEntryDateAfrScanned_AT[a];
      OutGExamTypistLogEntryDateAfrScanned_AS[a] = 
        orig.OutGExamTypistLogEntryDateAfrScanned_AS[a];
      OutGExamTypistLogEntryDateAfrScanned[a] = 
        orig.OutGExamTypistLogEntryDateAfrScanned[a];
      OutGExamTypistLogEntryOpenForWeb_AT[a] = 
        orig.OutGExamTypistLogEntryOpenForWeb_AT[a];
      OutGExamTypistLogEntryOpenForWeb_AS[a] = 
        orig.OutGExamTypistLogEntryOpenForWeb_AS[a];
      OutGExamTypistLogEntryOpenForWeb[a] = 
        orig.OutGExamTypistLogEntryOpenForWeb[a];
      OutGExamTypistLogEntryDocketChanges_AT[a] = 
        orig.OutGExamTypistLogEntryDocketChanges_AT[a];
      OutGExamTypistLogEntryDocketChanges_AS[a] = 
        orig.OutGExamTypistLogEntryDocketChanges_AS[a];
      OutGExamTypistLogEntryDocketChanges[a] = 
        orig.OutGExamTypistLogEntryDocketChanges[a];
      OutGExamTypistLogEntryPaperChanges_AT[a] = 
        orig.OutGExamTypistLogEntryPaperChanges_AT[a];
      OutGExamTypistLogEntryPaperChanges_AS[a] = 
        orig.OutGExamTypistLogEntryPaperChanges_AS[a];
      OutGExamTypistLogEntryPaperChanges[a] = 
        orig.OutGExamTypistLogEntryPaperChanges[a];
      OutGExamTypistLogEntryElectronicPaper_AT[a] = 
        orig.OutGExamTypistLogEntryElectronicPaper_AT[a];
      OutGExamTypistLogEntryElectronicPaper_AS[a] = 
        orig.OutGExamTypistLogEntryElectronicPaper_AS[a];
      OutGExamTypistLogEntryElectronicPaper[a] = 
        orig.OutGExamTypistLogEntryElectronicPaper[a];
      OutGMyunisaWsRegistrationDatesFromDate_AT[a] = 
        orig.OutGMyunisaWsRegistrationDatesFromDate_AT[a];
      OutGMyunisaWsRegistrationDatesFromDate_AS[a] = 
        orig.OutGMyunisaWsRegistrationDatesFromDate_AS[a];
      OutGMyunisaWsRegistrationDatesFromDate[a] = 
        orig.OutGMyunisaWsRegistrationDatesFromDate[a];
      OutGEngPaperCsfStringsString1_AT[a] = 
        orig.OutGEngPaperCsfStringsString1_AT[a];
      OutGEngPaperCsfStringsString1_AS[a] = 
        orig.OutGEngPaperCsfStringsString1_AS[a];
      OutGEngPaperCsfStringsString1[a] = orig.OutGEngPaperCsfStringsString1[a];
      OutGAfrPaperCsfStringsString1_AT[a] = 
        orig.OutGAfrPaperCsfStringsString1_AT[a];
      OutGAfrPaperCsfStringsString1_AS[a] = 
        orig.OutGAfrPaperCsfStringsString1_AS[a];
      OutGAfrPaperCsfStringsString1[a] = orig.OutGAfrPaperCsfStringsString1[a];
      OutGElectronicLogsCsfStringsString1_AT[a] = 
        orig.OutGElectronicLogsCsfStringsString1_AT[a];
      OutGElectronicLogsCsfStringsString1_AS[a] = 
        orig.OutGElectronicLogsCsfStringsString1_AS[a];
      OutGElectronicLogsCsfStringsString1[a] = 
        orig.OutGElectronicLogsCsfStringsString1[a];
    }
    OutScCpfAccessIefSuppliedFlag_AT = orig.OutScCpfAccessIefSuppliedFlag_AT;
    OutScCpfAccessIefSuppliedFlag_AS = orig.OutScCpfAccessIefSuppliedFlag_AS;
    OutScCpfAccessIefSuppliedFlag = orig.OutScCpfAccessIefSuppliedFlag;
    OutScTypAccessIefSuppliedFlag_AT = orig.OutScTypAccessIefSuppliedFlag_AT;
    OutScTypAccessIefSuppliedFlag_AS = orig.OutScTypAccessIefSuppliedFlag_AS;
    OutScTypAccessIefSuppliedFlag = orig.OutScTypAccessIefSuppliedFlag;
    OutIefSuppliedFlag_AT = orig.OutIefSuppliedFlag_AT;
    OutIefSuppliedFlag_AS = orig.OutIefSuppliedFlag_AS;
    OutIefSuppliedFlag = orig.OutIefSuppliedFlag;
    OutWsFunctionNumber_AT = orig.OutWsFunctionNumber_AT;
    OutWsFunctionNumber_AS = orig.OutWsFunctionNumber_AS;
    OutWsFunctionNumber = orig.OutWsFunctionNumber;
    OutListGroup_MA = orig.OutListGroup_MA;
    for(int a = 0; a < 100; a++)
    {
      OutListGroup_AC[a] = orig.OutListGroup_AC[a];
      OutGListIefSuppliedSelectChar_AT[a] = 
        orig.OutGListIefSuppliedSelectChar_AT[a];
      OutGListIefSuppliedSelectChar_AS[a] = 
        orig.OutGListIefSuppliedSelectChar_AS[a];
      OutGListIefSuppliedSelectChar[a] = orig.OutGListIefSuppliedSelectChar[a];
      OutGListCsfStringsString100_AT[a] = orig.OutGListCsfStringsString100_AT[a]
        ;
      OutGListCsfStringsString100_AS[a] = orig.OutGListCsfStringsString100_AS[a]
        ;
      OutGListCsfStringsString100[a] = orig.OutGListCsfStringsString100[a];
    }
    OutWsStudyUnitMkDepartmentCode_AT = orig.OutWsStudyUnitMkDepartmentCode_AT;
    OutWsStudyUnitMkDepartmentCode_AS = orig.OutWsStudyUnitMkDepartmentCode_AS;
    OutWsStudyUnitMkDepartmentCode = orig.OutWsStudyUnitMkDepartmentCode;
    OutWsStudyUnitEngLongDescription_AT = 
      orig.OutWsStudyUnitEngLongDescription_AT;
    OutWsStudyUnitEngLongDescription_AS = 
      orig.OutWsStudyUnitEngLongDescription_AS;
    OutWsStudyUnitEngLongDescription = orig.OutWsStudyUnitEngLongDescription;
    OutWsStudyUnitCollegeFlag_AT = orig.OutWsStudyUnitCollegeFlag_AT;
    OutWsStudyUnitCollegeFlag_AS = orig.OutWsStudyUnitCollegeFlag_AS;
    OutWsStudyUnitCollegeFlag = orig.OutWsStudyUnitCollegeFlag;
    OutErrMsgCsfStringsString500_AT = orig.OutErrMsgCsfStringsString500_AT;
    OutErrMsgCsfStringsString500_AS = orig.OutErrMsgCsfStringsString500_AS;
    OutErrMsgCsfStringsString500 = orig.OutErrMsgCsfStringsString500;
    OutSecurityWsUserNumber_AT = orig.OutSecurityWsUserNumber_AT;
    OutSecurityWsUserNumber_AS = orig.OutSecurityWsUserNumber_AS;
    OutSecurityWsUserNumber = orig.OutSecurityWsUserNumber;
    OutSecurityWsPrinterCode_AT = orig.OutSecurityWsPrinterCode_AT;
    OutSecurityWsPrinterCode_AS = orig.OutSecurityWsPrinterCode_AS;
    OutSecurityWsPrinterCode = orig.OutSecurityWsPrinterCode;
    OutCsfClientServerCommunicationsReturnCode_AT = 
      orig.OutCsfClientServerCommunicationsReturnCode_AT;
    OutCsfClientServerCommunicationsReturnCode_AS = 
      orig.OutCsfClientServerCommunicationsReturnCode_AS;
    OutCsfClientServerCommunicationsReturnCode = 
      orig.OutCsfClientServerCommunicationsReturnCode;
    OutCsfClientServerCommunicationsServerVersionNumber_AT = 
      orig.OutCsfClientServerCommunicationsServerVersionNumber_AT;
    OutCsfClientServerCommunicationsServerVersionNumber_AS = 
      orig.OutCsfClientServerCommunicationsServerVersionNumber_AS;
    OutCsfClientServerCommunicationsServerVersionNumber = 
      orig.OutCsfClientServerCommunicationsServerVersionNumber;
    OutCsfClientServerCommunicationsServerRevisionNumber_AT = 
      orig.OutCsfClientServerCommunicationsServerRevisionNumber_AT;
    OutCsfClientServerCommunicationsServerRevisionNumber_AS = 
      orig.OutCsfClientServerCommunicationsServerRevisionNumber_AS;
    OutCsfClientServerCommunicationsServerRevisionNumber = 
      orig.OutCsfClientServerCommunicationsServerRevisionNumber;
    OutCsfClientServerCommunicationsServerDevelopmentPhase_AT = 
      orig.OutCsfClientServerCommunicationsServerDevelopmentPhase_AT;
    OutCsfClientServerCommunicationsServerDevelopmentPhase_AS = 
      orig.OutCsfClientServerCommunicationsServerDevelopmentPhase_AS;
    OutCsfClientServerCommunicationsServerDevelopmentPhase = 
      orig.OutCsfClientServerCommunicationsServerDevelopmentPhase;
    OutCsfClientServerCommunicationsAction_AT = 
      orig.OutCsfClientServerCommunicationsAction_AT;
    OutCsfClientServerCommunicationsAction_AS = 
      orig.OutCsfClientServerCommunicationsAction_AS;
    OutCsfClientServerCommunicationsAction = 
      orig.OutCsfClientServerCommunicationsAction;
    OutCsfClientServerCommunicationsServerDate_AT = 
      orig.OutCsfClientServerCommunicationsServerDate_AT;
    OutCsfClientServerCommunicationsServerDate_AS = 
      orig.OutCsfClientServerCommunicationsServerDate_AS;
    OutCsfClientServerCommunicationsServerDate = 
      orig.OutCsfClientServerCommunicationsServerDate;
    OutCsfClientServerCommunicationsServerTime_AT = 
      orig.OutCsfClientServerCommunicationsServerTime_AT;
    OutCsfClientServerCommunicationsServerTime_AS = 
      orig.OutCsfClientServerCommunicationsServerTime_AS;
    OutCsfClientServerCommunicationsServerTime = 
      orig.OutCsfClientServerCommunicationsServerTime;
    OutCsfClientServerCommunicationsServerTimestamp_AT = 
      orig.OutCsfClientServerCommunicationsServerTimestamp_AT;
    OutCsfClientServerCommunicationsServerTimestamp_AS = 
      orig.OutCsfClientServerCommunicationsServerTimestamp_AS;
    OutCsfClientServerCommunicationsServerTimestamp = 
      orig.OutCsfClientServerCommunicationsServerTimestamp;
    OutCsfClientServerCommunicationsServerTransactionCode_AT = 
      orig.OutCsfClientServerCommunicationsServerTransactionCode_AT;
    OutCsfClientServerCommunicationsServerTransactionCode_AS = 
      orig.OutCsfClientServerCommunicationsServerTransactionCode_AS;
    OutCsfClientServerCommunicationsServerTransactionCode = 
      orig.OutCsfClientServerCommunicationsServerTransactionCode;
    OutCsfClientServerCommunicationsServerUserId_AT = 
      orig.OutCsfClientServerCommunicationsServerUserId_AT;
    OutCsfClientServerCommunicationsServerUserId_AS = 
      orig.OutCsfClientServerCommunicationsServerUserId_AS;
    OutCsfClientServerCommunicationsServerUserId = 
      orig.OutCsfClientServerCommunicationsServerUserId;
    OutCsfClientServerCommunicationsServerRollbackFlag_AT = 
      orig.OutCsfClientServerCommunicationsServerRollbackFlag_AT;
    OutCsfClientServerCommunicationsServerRollbackFlag_AS = 
      orig.OutCsfClientServerCommunicationsServerRollbackFlag_AS;
    OutCsfClientServerCommunicationsServerRollbackFlag = 
      orig.OutCsfClientServerCommunicationsServerRollbackFlag;
    OutCsfClientServerCommunicationsClientIsGuiFlag_AT = 
      orig.OutCsfClientServerCommunicationsClientIsGuiFlag_AT;
    OutCsfClientServerCommunicationsClientIsGuiFlag_AS = 
      orig.OutCsfClientServerCommunicationsClientIsGuiFlag_AS;
    OutCsfClientServerCommunicationsClientIsGuiFlag = 
      orig.OutCsfClientServerCommunicationsClientIsGuiFlag;
    OutCsfClientServerCommunicationsActionsPendingFlag_AT = 
      orig.OutCsfClientServerCommunicationsActionsPendingFlag_AT;
    OutCsfClientServerCommunicationsActionsPendingFlag_AS = 
      orig.OutCsfClientServerCommunicationsActionsPendingFlag_AS;
    OutCsfClientServerCommunicationsActionsPendingFlag = 
      orig.OutCsfClientServerCommunicationsActionsPendingFlag;
    OutCsfClientServerCommunicationsClientVersionNumber_AT = 
      orig.OutCsfClientServerCommunicationsClientVersionNumber_AT;
    OutCsfClientServerCommunicationsClientVersionNumber_AS = 
      orig.OutCsfClientServerCommunicationsClientVersionNumber_AS;
    OutCsfClientServerCommunicationsClientVersionNumber = 
      orig.OutCsfClientServerCommunicationsClientVersionNumber;
    OutCsfClientServerCommunicationsClientRevisionNumber_AT = 
      orig.OutCsfClientServerCommunicationsClientRevisionNumber_AT;
    OutCsfClientServerCommunicationsClientRevisionNumber_AS = 
      orig.OutCsfClientServerCommunicationsClientRevisionNumber_AS;
    OutCsfClientServerCommunicationsClientRevisionNumber = 
      orig.OutCsfClientServerCommunicationsClientRevisionNumber;
    OutCsfClientServerCommunicationsClientDevelopmentPhase_AT = 
      orig.OutCsfClientServerCommunicationsClientDevelopmentPhase_AT;
    OutCsfClientServerCommunicationsClientDevelopmentPhase_AS = 
      orig.OutCsfClientServerCommunicationsClientDevelopmentPhase_AS;
    OutCsfClientServerCommunicationsClientDevelopmentPhase = 
      orig.OutCsfClientServerCommunicationsClientDevelopmentPhase;
    OutCsfClientServerCommunicationsListLinkFlag_AT = 
      orig.OutCsfClientServerCommunicationsListLinkFlag_AT;
    OutCsfClientServerCommunicationsListLinkFlag_AS = 
      orig.OutCsfClientServerCommunicationsListLinkFlag_AS;
    OutCsfClientServerCommunicationsListLinkFlag = 
      orig.OutCsfClientServerCommunicationsListLinkFlag;
    OutCsfClientServerCommunicationsCancelFlag_AT = 
      orig.OutCsfClientServerCommunicationsCancelFlag_AT;
    OutCsfClientServerCommunicationsCancelFlag_AS = 
      orig.OutCsfClientServerCommunicationsCancelFlag_AS;
    OutCsfClientServerCommunicationsCancelFlag = 
      orig.OutCsfClientServerCommunicationsCancelFlag;
    OutCsfClientServerCommunicationsMaintLinkFlag_AT = 
      orig.OutCsfClientServerCommunicationsMaintLinkFlag_AT;
    OutCsfClientServerCommunicationsMaintLinkFlag_AS = 
      orig.OutCsfClientServerCommunicationsMaintLinkFlag_AS;
    OutCsfClientServerCommunicationsMaintLinkFlag = 
      orig.OutCsfClientServerCommunicationsMaintLinkFlag;
    OutCsfClientServerCommunicationsForceDatabaseRead_AT = 
      orig.OutCsfClientServerCommunicationsForceDatabaseRead_AT;
    OutCsfClientServerCommunicationsForceDatabaseRead_AS = 
      orig.OutCsfClientServerCommunicationsForceDatabaseRead_AS;
    OutCsfClientServerCommunicationsForceDatabaseRead = 
      orig.OutCsfClientServerCommunicationsForceDatabaseRead;
    OutCsfClientServerCommunicationsRgvScrollUpFlag_AT = 
      orig.OutCsfClientServerCommunicationsRgvScrollUpFlag_AT;
    OutCsfClientServerCommunicationsRgvScrollUpFlag_AS = 
      orig.OutCsfClientServerCommunicationsRgvScrollUpFlag_AS;
    OutCsfClientServerCommunicationsRgvScrollUpFlag = 
      orig.OutCsfClientServerCommunicationsRgvScrollUpFlag;
    OutCsfClientServerCommunicationsRgvScrollDownFlag_AT = 
      orig.OutCsfClientServerCommunicationsRgvScrollDownFlag_AT;
    OutCsfClientServerCommunicationsRgvScrollDownFlag_AS = 
      orig.OutCsfClientServerCommunicationsRgvScrollDownFlag_AS;
    OutCsfClientServerCommunicationsRgvScrollDownFlag = 
      orig.OutCsfClientServerCommunicationsRgvScrollDownFlag;
    OutCsfClientServerCommunicationsObjectRetrievedFlag_AT = 
      orig.OutCsfClientServerCommunicationsObjectRetrievedFlag_AT;
    OutCsfClientServerCommunicationsObjectRetrievedFlag_AS = 
      orig.OutCsfClientServerCommunicationsObjectRetrievedFlag_AS;
    OutCsfClientServerCommunicationsObjectRetrievedFlag = 
      orig.OutCsfClientServerCommunicationsObjectRetrievedFlag;
    OutReportWizfuncReportingControlFunction_AT = 
      orig.OutReportWizfuncReportingControlFunction_AT;
    OutReportWizfuncReportingControlFunction_AS = 
      orig.OutReportWizfuncReportingControlFunction_AS;
    OutReportWizfuncReportingControlFunction = 
      orig.OutReportWizfuncReportingControlFunction;
    OutReportWizfuncReportingControlPathAndFilename_AT = 
      orig.OutReportWizfuncReportingControlPathAndFilename_AT;
    OutReportWizfuncReportingControlPathAndFilename_AS = 
      orig.OutReportWizfuncReportingControlPathAndFilename_AS;
    OutReportWizfuncReportingControlPathAndFilename = 
      orig.OutReportWizfuncReportingControlPathAndFilename;
    OutReportWizfuncReportingControlReportWidth_AT = 
      orig.OutReportWizfuncReportingControlReportWidth_AT;
    OutReportWizfuncReportingControlReportWidth_AS = 
      orig.OutReportWizfuncReportingControlReportWidth_AS;
    OutReportWizfuncReportingControlReportWidth = 
      orig.OutReportWizfuncReportingControlReportWidth;
    OutReportWizfuncReportingControlStartingLineCount_AT = 
      orig.OutReportWizfuncReportingControlStartingLineCount_AT;
    OutReportWizfuncReportingControlStartingLineCount_AS = 
      orig.OutReportWizfuncReportingControlStartingLineCount_AS;
    OutReportWizfuncReportingControlStartingLineCount = 
      orig.OutReportWizfuncReportingControlStartingLineCount;
    OutReportWizfuncReportingControlEndingLineCount_AT = 
      orig.OutReportWizfuncReportingControlEndingLineCount_AT;
    OutReportWizfuncReportingControlEndingLineCount_AS = 
      orig.OutReportWizfuncReportingControlEndingLineCount_AS;
    OutReportWizfuncReportingControlEndingLineCount = 
      orig.OutReportWizfuncReportingControlEndingLineCount;
    OutReportWizfuncReportingControlWizfuncReturnCode_AT = 
      orig.OutReportWizfuncReportingControlWizfuncReturnCode_AT;
    OutReportWizfuncReportingControlWizfuncReturnCode_AS = 
      orig.OutReportWizfuncReportingControlWizfuncReturnCode_AS;
    OutReportWizfuncReportingControlWizfuncReturnCode = 
      orig.OutReportWizfuncReportingControlWizfuncReturnCode;
    OutReportWizfuncReportingControlWizfuncReturnMessage_AT = 
      orig.OutReportWizfuncReportingControlWizfuncReturnMessage_AT;
    OutReportWizfuncReportingControlWizfuncReturnMessage_AS = 
      orig.OutReportWizfuncReportingControlWizfuncReturnMessage_AS;
    OutReportWizfuncReportingControlWizfuncReturnMessage = 
      orig.OutReportWizfuncReportingControlWizfuncReturnMessage;
    OutEquGroup_MA = orig.OutEquGroup_MA;
    for(int a = 0; a < 20; a++)
    {
      OutEquGroup_AC[a] = orig.OutEquGroup_AC[a];
      OutEquGWsExamEquivalentsWsEquivalentCode_AT[a] = 
        orig.OutEquGWsExamEquivalentsWsEquivalentCode_AT[a];
      OutEquGWsExamEquivalentsWsEquivalentCode_AS[a] = 
        orig.OutEquGWsExamEquivalentsWsEquivalentCode_AS[a];
      OutEquGWsExamEquivalentsWsEquivalentCode[a] = 
        orig.OutEquGWsExamEquivalentsWsEquivalentCode[a];
      OutEquGWsExamEquivalentsWsSamePaperFlag_AT[a] = 
        orig.OutEquGWsExamEquivalentsWsSamePaperFlag_AT[a];
      OutEquGWsExamEquivalentsWsSamePaperFlag_AS[a] = 
        orig.OutEquGWsExamEquivalentsWsSamePaperFlag_AS[a];
      OutEquGWsExamEquivalentsWsSamePaperFlag[a] = 
        orig.OutEquGWsExamEquivalentsWsSamePaperFlag[a];
    }
    OutPrintQuantityIefSuppliedCount_AT = 
      orig.OutPrintQuantityIefSuppliedCount_AT;
    OutPrintQuantityIefSuppliedCount_AS = 
      orig.OutPrintQuantityIefSuppliedCount_AS;
    OutPrintQuantityIefSuppliedCount = orig.OutPrintQuantityIefSuppliedCount;
  }
}
