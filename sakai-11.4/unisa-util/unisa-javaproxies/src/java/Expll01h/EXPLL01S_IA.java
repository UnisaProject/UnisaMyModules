package Expll01h;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                            CA Gen r8
//
//           Copyright (c) 2012 CA. All rights reserved.
//
//    Name: EXPLL01S_IA                      Date: 2012/05/15
//    User: Tanderw                          Time: 15:10:34
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen80.vwrt.*;
import com.ca.gen80.vwrt.types.*;
import com.ca.gen80.vwrt.vdf.*;
import com.ca.gen80.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: EXPLL01S_IA
 **/
public class EXPLL01S_IA extends ViewBase implements IImportView, Serializable
{
  static VDF localVdf = null;
  
  // Entity View: IN
  //        Type: EXAM_TYPIST_LOG_ENTRY
  /**
   * Attribute missing flag for: InExamTypistLogEntryPaperNo
   **/
  public char InExamTypistLogEntryPaperNo_AS;
  /**
   * Attribute for: InExamTypistLogEntryPaperNo
   **/
  public short InExamTypistLogEntryPaperNo;
  // Entity View: IN
  //        Type: WS_EXPLL01_QUEST_PAP
  /**
   * Attribute missing flag for: InWsExpll01QuestPapOption
   **/
  public char InWsExpll01QuestPapOption_AS;
  /**
   * Attribute for: InWsExpll01QuestPapOption
   **/
  public String InWsExpll01QuestPapOption;
  // Entity View: IN
  //        Type: WS_EXPLL01_LOGISTICS
  /**
   * Attribute missing flag for: InWsExpll01LogisticsOption
   **/
  public char InWsExpll01LogisticsOption_AS;
  /**
   * Attribute for: InWsExpll01LogisticsOption
   **/
  public String InWsExpll01LogisticsOption;
  // Entity View: IN_NR_OF_COMBINED_PAPERS
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: InNrOfCombinedPapersIefSuppliedCount
   **/
  public char InNrOfCombinedPapersIefSuppliedCount_AS;
  /**
   * Attribute for: InNrOfCombinedPapersIefSuppliedCount
   **/
  public int InNrOfCombinedPapersIefSuppliedCount;
  // Entity View: IN_NEXT
  //        Type: EXAM_TYPIST_LOG
  /**
   * Attribute missing flag for: InNextExamTypistLogExamYear
   **/
  public char InNextExamTypistLogExamYear_AS;
  /**
   * Attribute for: InNextExamTypistLogExamYear
   **/
  public short InNextExamTypistLogExamYear;
  /**
   * Attribute missing flag for: InNextExamTypistLogMkExamPeriodCod
   **/
  public char InNextExamTypistLogMkExamPeriodCod_AS;
  /**
   * Attribute for: InNextExamTypistLogMkExamPeriodCod
   **/
  public short InNextExamTypistLogMkExamPeriodCod;
  // Entity View: IN_PREV
  //        Type: EXAM_TYPIST_LOG
  /**
   * Attribute missing flag for: InPrevExamTypistLogExamYear
   **/
  public char InPrevExamTypistLogExamYear_AS;
  /**
   * Attribute for: InPrevExamTypistLogExamYear
   **/
  public short InPrevExamTypistLogExamYear;
  /**
   * Attribute missing flag for: InPrevExamTypistLogMkExamPeriodCod
   **/
  public char InPrevExamTypistLogMkExamPeriodCod_AS;
  /**
   * Attribute for: InPrevExamTypistLogMkExamPeriodCod
   **/
  public short InPrevExamTypistLogMkExamPeriodCod;
  // Repeating GV:  IN_LOG_ENTRIES_GRP
  //     Repeats: 5 times
  /**
   * Repeating group view count
   **/
  public int InLogEntriesGrp_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char InLogEntriesGrp_AC[] = new char[5];
  // Entity View: IN_G_CALC_QUANT
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: InGCalcQuantIefSuppliedCount
   **/
  public char InGCalcQuantIefSuppliedCount_AS[] = new char[5];
  /**
   * Attribute for: InGCalcQuantIefSuppliedCount
   **/
  public int InGCalcQuantIefSuppliedCount[] = new int[5];
  // Entity View: IN_G_PAPER_COLOUR
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: InGPaperColourCsfStringsString10
   **/
  public char InGPaperColourCsfStringsString10_AS[] = new char[5];
  /**
   * Attribute for: InGPaperColourCsfStringsString10
   **/
  public String InGPaperColourCsfStringsString10[] = new String[5];
  // Entity View: IN_G
  //        Type: EXAM_PERIOD_DATE
  /**
   * Attribute missing flag for: InGExamPeriodDateDate
   **/
  public char InGExamPeriodDateDate_AS[] = new char[5];
  /**
   * Attribute for: InGExamPeriodDateDate
   **/
  public int InGExamPeriodDateDate[] = new int[5];
  // Entity View: IN_G
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: InGIefSuppliedCount
   **/
  public char InGIefSuppliedCount_AS[] = new char[5];
  /**
   * Attribute for: InGIefSuppliedCount
   **/
  public int InGIefSuppliedCount[] = new int[5];
  /**
   * Attribute missing flag for: InGIefSuppliedCommand
   **/
  public char InGIefSuppliedCommand_AS[] = new char[5];
  /**
   * Attribute for: InGIefSuppliedCommand
   **/
  public String InGIefSuppliedCommand[] = new String[5];
  /**
   * Attribute missing flag for: InGIefSuppliedSelectChar
   **/
  public char InGIefSuppliedSelectChar_AS[] = new char[5];
  /**
   * Attribute for: InGIefSuppliedSelectChar
   **/
  public String InGIefSuppliedSelectChar[] = new String[5];
  // Entity View: IN_G
  //        Type: EXAM_TYPIST_LOG_ENTRY
  /**
   * Attribute missing flag for: InGExamTypistLogEntryPaperNo
   **/
  public char InGExamTypistLogEntryPaperNo_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryPaperNo
   **/
  public short InGExamTypistLogEntryPaperNo[] = new short[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryTypist
   **/
  public char InGExamTypistLogEntryTypist_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryTypist
   **/
  public String InGExamTypistLogEntryTypist[] = new String[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryPaperFormat
   **/
  public char InGExamTypistLogEntryPaperFormat_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryPaperFormat
   **/
  public String InGExamTypistLogEntryPaperFormat[] = new String[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateReceived
   **/
  public char InGExamTypistLogEntryDateReceived_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateReceived
   **/
  public int InGExamTypistLogEntryDateReceived[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateProof1
   **/
  public char InGExamTypistLogEntryDateProof1_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateProof1
   **/
  public int InGExamTypistLogEntryDateProof1[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateProof2
   **/
  public char InGExamTypistLogEntryDateProof2_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateProof2
   **/
  public int InGExamTypistLogEntryDateProof2[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateProof3
   **/
  public char InGExamTypistLogEntryDateProof3_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateProof3
   **/
  public int InGExamTypistLogEntryDateProof3[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateToPrint
   **/
  public char InGExamTypistLogEntryDateToPrint_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateToPrint
   **/
  public int InGExamTypistLogEntryDateToPrint[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryCpfReportPrinted
   **/
  public char InGExamTypistLogEntryCpfReportPrinted_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryCpfReportPrinted
   **/
  public String InGExamTypistLogEntryCpfReportPrinted[] = new String[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateInSafe
   **/
  public char InGExamTypistLogEntryDateInSafe_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateInSafe
   **/
  public int InGExamTypistLogEntryDateInSafe[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateToDept
   **/
  public char InGExamTypistLogEntryDateToDept_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateToDept
   **/
  public int InGExamTypistLogEntryDateToDept[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateFromDept
   **/
  public char InGExamTypistLogEntryDateFromDept_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateFromDept
   **/
  public int InGExamTypistLogEntryDateFromDept[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDate2ToPrint
   **/
  public char InGExamTypistLogEntryDate2ToPrint_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDate2ToPrint
   **/
  public int InGExamTypistLogEntryDate2ToPrint[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDate2FromPrint
   **/
  public char InGExamTypistLogEntryDate2FromPrint_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDate2FromPrint
   **/
  public int InGExamTypistLogEntryDate2FromPrint[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDate3ToPrint
   **/
  public char InGExamTypistLogEntryDate3ToPrint_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDate3ToPrint
   **/
  public int InGExamTypistLogEntryDate3ToPrint[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDate3FromPrint
   **/
  public char InGExamTypistLogEntryDate3FromPrint_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDate3FromPrint
   **/
  public int InGExamTypistLogEntryDate3FromPrint[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryQuant3ToPrint
   **/
  public char InGExamTypistLogEntryQuant3ToPrint_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryQuant3ToPrint
   **/
  public int InGExamTypistLogEntryQuant3ToPrint[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryQuantToPrint
   **/
  public char InGExamTypistLogEntryQuantToPrint_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryQuantToPrint
   **/
  public int InGExamTypistLogEntryQuantToPrint[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryQuantCalcedOn
   **/
  public char InGExamTypistLogEntryQuantCalcedOn_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryQuantCalcedOn
   **/
  public int InGExamTypistLogEntryQuantCalcedOn[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryQuant2ToPrint
   **/
  public char InGExamTypistLogEntryQuant2ToPrint_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryQuant2ToPrint
   **/
  public int InGExamTypistLogEntryQuant2ToPrint[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryQuant2CalcedOn
   **/
  public char InGExamTypistLogEntryQuant2CalcedOn_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryQuant2CalcedOn
   **/
  public int InGExamTypistLogEntryQuant2CalcedOn[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntrySurplusQuant
   **/
  public char InGExamTypistLogEntrySurplusQuant_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntrySurplusQuant
   **/
  public int InGExamTypistLogEntrySurplusQuant[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateScanned
   **/
  public char InGExamTypistLogEntryDateScanned_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateScanned
   **/
  public int InGExamTypistLogEntryDateScanned[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDateAfrScanned
   **/
  public char InGExamTypistLogEntryDateAfrScanned_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDateAfrScanned
   **/
  public int InGExamTypistLogEntryDateAfrScanned[] = new int[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryOpenForWeb
   **/
  public char InGExamTypistLogEntryOpenForWeb_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryOpenForWeb
   **/
  public String InGExamTypistLogEntryOpenForWeb[] = new String[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryDocketChanges
   **/
  public char InGExamTypistLogEntryDocketChanges_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryDocketChanges
   **/
  public String InGExamTypistLogEntryDocketChanges[] = new String[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryPaperChanges
   **/
  public char InGExamTypistLogEntryPaperChanges_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryPaperChanges
   **/
  public String InGExamTypistLogEntryPaperChanges[] = new String[5];
  /**
   * Attribute missing flag for: InGExamTypistLogEntryElectronicPaper
   **/
  public char InGExamTypistLogEntryElectronicPaper_AS[] = new char[5];
  /**
   * Attribute for: InGExamTypistLogEntryElectronicPaper
   **/
  public String InGExamTypistLogEntryElectronicPaper[] = new String[5];
  // Entity View: IN_G_MYUNISA
  //        Type: WS_REGISTRATION_DATES
  /**
   * Attribute missing flag for: InGMyunisaWsRegistrationDatesFromDate
   **/
  public char InGMyunisaWsRegistrationDatesFromDate_AS[] = new char[5];
  /**
   * Attribute for: InGMyunisaWsRegistrationDatesFromDate
   **/
  public int InGMyunisaWsRegistrationDatesFromDate[] = new int[5];
  // Entity View: IN_G_ENG_PAPER
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: InGEngPaperCsfStringsString1
   **/
  public char InGEngPaperCsfStringsString1_AS[] = new char[5];
  /**
   * Attribute for: InGEngPaperCsfStringsString1
   **/
  public String InGEngPaperCsfStringsString1[] = new String[5];
  // Entity View: IN_G_AFR_PAPER
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: InGAfrPaperCsfStringsString1
   **/
  public char InGAfrPaperCsfStringsString1_AS[] = new char[5];
  /**
   * Attribute for: InGAfrPaperCsfStringsString1
   **/
  public String InGAfrPaperCsfStringsString1[] = new String[5];
  // Entity View: IN_SEARCH_CRITERIA
  //        Type: EXAM_TYPIST_LOG
  /**
   * Attribute missing flag for: InSearchCriteriaExamTypistLogExamYear
   **/
  public char InSearchCriteriaExamTypistLogExamYear_AS;
  /**
   * Attribute for: InSearchCriteriaExamTypistLogExamYear
   **/
  public short InSearchCriteriaExamTypistLogExamYear;
  /**
   * Attribute missing flag for: InSearchCriteriaExamTypistLogMkExamPeriodCod
   **/
  public char InSearchCriteriaExamTypistLogMkExamPeriodCod_AS;
  /**
   * Attribute for: InSearchCriteriaExamTypistLogMkExamPeriodCod
   **/
  public short InSearchCriteriaExamTypistLogMkExamPeriodCod;
  /**
   * Attribute missing flag for: InSearchCriteriaExamTypistLogMkStudyUnitCode
   **/
  public char InSearchCriteriaExamTypistLogMkStudyUnitCode_AS;
  /**
   * Attribute for: InSearchCriteriaExamTypistLogMkStudyUnitCode
   **/
  public String InSearchCriteriaExamTypistLogMkStudyUnitCode;
  // Entity View: IN_KEY
  //        Type: EXAM_TYPIST_LOG
  /**
   * Attribute missing flag for: InKeyExamTypistLogExamYear
   **/
  public char InKeyExamTypistLogExamYear_AS;
  /**
   * Attribute for: InKeyExamTypistLogExamYear
   **/
  public short InKeyExamTypistLogExamYear;
  /**
   * Attribute missing flag for: InKeyExamTypistLogMkExamPeriodCod
   **/
  public char InKeyExamTypistLogMkExamPeriodCod_AS;
  /**
   * Attribute for: InKeyExamTypistLogMkExamPeriodCod
   **/
  public short InKeyExamTypistLogMkExamPeriodCod;
  /**
   * Attribute missing flag for: InKeyExamTypistLogMkStudyUnitCode
   **/
  public char InKeyExamTypistLogMkStudyUnitCode_AS;
  /**
   * Attribute for: InKeyExamTypistLogMkStudyUnitCode
   **/
  public String InKeyExamTypistLogMkStudyUnitCode;
  /**
   * Attribute missing flag for: InKeyExamTypistLogCombinedWith
   **/
  public char InKeyExamTypistLogCombinedWith_AS;
  /**
   * Attribute for: InKeyExamTypistLogCombinedWith
   **/
  public String InKeyExamTypistLogCombinedWith;
  /**
   * Attribute missing flag for: InKeyExamTypistLogRemarks
   **/
  public char InKeyExamTypistLogRemarks_AS;
  /**
   * Attribute for: InKeyExamTypistLogRemarks
   **/
  public String InKeyExamTypistLogRemarks;
  /**
   * Attribute missing flag for: InKeyExamTypistLogRemarks2
   **/
  public char InKeyExamTypistLogRemarks2_AS;
  /**
   * Attribute for: InKeyExamTypistLogRemarks2
   **/
  public String InKeyExamTypistLogRemarks2;
  /**
   * Attribute missing flag for: InKeyExamTypistLogRemarks3
   **/
  public char InKeyExamTypistLogRemarks3_AS;
  /**
   * Attribute for: InKeyExamTypistLogRemarks3
   **/
  public String InKeyExamTypistLogRemarks3;
  /**
   * Attribute missing flag for: InKeyExamTypistLogRemarks4
   **/
  public char InKeyExamTypistLogRemarks4_AS;
  /**
   * Attribute for: InKeyExamTypistLogRemarks4
   **/
  public String InKeyExamTypistLogRemarks4;
  /**
   * Attribute missing flag for: InKeyExamTypistLogRemarks5
   **/
  public char InKeyExamTypistLogRemarks5_AS;
  /**
   * Attribute for: InKeyExamTypistLogRemarks5
   **/
  public String InKeyExamTypistLogRemarks5;
  /**
   * Attribute missing flag for: InKeyExamTypistLogRemarks6
   **/
  public char InKeyExamTypistLogRemarks6_AS;
  /**
   * Attribute for: InKeyExamTypistLogRemarks6
   **/
  public String InKeyExamTypistLogRemarks6;
  /**
   * Attribute missing flag for: InKeyExamTypistLogPaperExpected
   **/
  public char InKeyExamTypistLogPaperExpected_AS;
  /**
   * Attribute for: InKeyExamTypistLogPaperExpected
   **/
  public String InKeyExamTypistLogPaperExpected;
  // Entity View: IN_REPORT_DATE
  //        Type: EXAM_TYPIST_LOG_ENTRY
  /**
   * Attribute missing flag for: InReportDateExamTypistLogEntryDateToPrint
   **/
  public char InReportDateExamTypistLogEntryDateToPrint_AS;
  /**
   * Attribute for: InReportDateExamTypistLogEntryDateToPrint
   **/
  public int InReportDateExamTypistLogEntryDateToPrint;
  // Entity View: IN_REPORT
  //        Type: WIZFUNC_REPORTING_CONTROL
  /**
   * Attribute missing flag for: InReportWizfuncReportingControlPathAndFilename
   **/
  public char InReportWizfuncReportingControlPathAndFilename_AS;
  /**
   * Attribute for: InReportWizfuncReportingControlPathAndFilename
   **/
  public String InReportWizfuncReportingControlPathAndFilename;
  // Entity View: IN_OUTST_EXAM_PAPERS
  //        Type: WS_STUDY_UNIT_PERIOD_DETAIL
  /**
   * Attribute missing flag for: 
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod
   **/
  public char InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod_AS;
  /**
   * Attribute for: InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod
   **/
  public short InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod;
  /**
   * Attribute missing flag for: 
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear
   **/
  public char InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear_AS;
  /**
   * Attribute for: InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear
   **/
  public short InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear;
  /**
   * Attribute missing flag for: 
    InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear
   **/
  public char InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear_AS;
  /**
   * Attribute for: InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear
   **/
  public short InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear;
  /**
   * Attribute missing flag for: 
    InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod
   **/
  public char InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod_AS;
  /**
   * Attribute for: InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod
   **/
  public short InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod;
  // Entity View: IN_SC_CPF_ACCESS
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: InScCpfAccessIefSuppliedFlag
   **/
  public char InScCpfAccessIefSuppliedFlag_AS;
  /**
   * Attribute for: InScCpfAccessIefSuppliedFlag
   **/
  public String InScCpfAccessIefSuppliedFlag;
  // Entity View: IN_SC_TYP_ACCESS
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: InScTypAccessIefSuppliedFlag
   **/
  public char InScTypAccessIefSuppliedFlag_AS;
  /**
   * Attribute for: InScTypAccessIefSuppliedFlag
   **/
  public String InScTypAccessIefSuppliedFlag;
  // Entity View: IN
  //        Type: WS_FUNCTION
  /**
   * Attribute missing flag for: InWsFunctionNumber
   **/
  public char InWsFunctionNumber_AS;
  /**
   * Attribute for: InWsFunctionNumber
   **/
  public int InWsFunctionNumber;
  // Entity View: IN
  //        Type: WS_STUDY_UNIT
  /**
   * Attribute missing flag for: InWsStudyUnitMkDepartmentCode
   **/
  public char InWsStudyUnitMkDepartmentCode_AS;
  /**
   * Attribute for: InWsStudyUnitMkDepartmentCode
   **/
  public short InWsStudyUnitMkDepartmentCode;
  /**
   * Attribute missing flag for: InWsStudyUnitEngLongDescription
   **/
  public char InWsStudyUnitEngLongDescription_AS;
  /**
   * Attribute for: InWsStudyUnitEngLongDescription
   **/
  public String InWsStudyUnitEngLongDescription;
  /**
   * Attribute missing flag for: InWsStudyUnitCollegeFlag
   **/
  public char InWsStudyUnitCollegeFlag_AS;
  /**
   * Attribute for: InWsStudyUnitCollegeFlag
   **/
  public String InWsStudyUnitCollegeFlag;
  // Entity View: IN_SECURITY
  //        Type: WS_USER
  /**
   * Attribute missing flag for: InSecurityWsUserNumber
   **/
  public char InSecurityWsUserNumber_AS;
  /**
   * Attribute for: InSecurityWsUserNumber
   **/
  public int InSecurityWsUserNumber;
  /**
   * Attribute missing flag for: InSecurityWsUserEMail
   **/
  public char InSecurityWsUserEMail_AS;
  /**
   * Attribute for: InSecurityWsUserEMail
   **/
  public String InSecurityWsUserEMail;
  /**
   * Attribute missing flag for: InSecurityWsUserNovellUserCode
   **/
  public char InSecurityWsUserNovellUserCode_AS;
  /**
   * Attribute for: InSecurityWsUserNovellUserCode
   **/
  public String InSecurityWsUserNovellUserCode;
  // Entity View: IN_SECURITY
  //        Type: WS_PRINTER
  /**
   * Attribute missing flag for: InSecurityWsPrinterCode
   **/
  public char InSecurityWsPrinterCode_AS;
  /**
   * Attribute for: InSecurityWsPrinterCode
   **/
  public String InSecurityWsPrinterCode;
  // Entity View: IN
  //        Type: CSF_CLIENT_SERVER_COMMUNICATIONS
  /**
   * Attribute missing flag for: 
    InCsfClientServerCommunicationsClientVersionNumber
   **/
  public char InCsfClientServerCommunicationsClientVersionNumber_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsClientVersionNumber
   **/
  public short InCsfClientServerCommunicationsClientVersionNumber;
  /**
   * Attribute missing flag for: 
    InCsfClientServerCommunicationsClientRevisionNumber
   **/
  public char InCsfClientServerCommunicationsClientRevisionNumber_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsClientRevisionNumber
   **/
  public short InCsfClientServerCommunicationsClientRevisionNumber;
  /**
   * Attribute missing flag for: 
    InCsfClientServerCommunicationsClientDevelopmentPhase
   **/
  public char InCsfClientServerCommunicationsClientDevelopmentPhase_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsClientDevelopmentPhase
   **/
  public String InCsfClientServerCommunicationsClientDevelopmentPhase;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsAction
   **/
  public char InCsfClientServerCommunicationsAction_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsAction
   **/
  public String InCsfClientServerCommunicationsAction;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsClientDate
   **/
  public char InCsfClientServerCommunicationsClientDate_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsClientDate
   **/
  public int InCsfClientServerCommunicationsClientDate;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsClientTime
   **/
  public char InCsfClientServerCommunicationsClientTime_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsClientTime
   **/
  public int InCsfClientServerCommunicationsClientTime;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsClientTimestamp
   **/
  public char InCsfClientServerCommunicationsClientTimestamp_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsClientTimestamp
   **/
  public String InCsfClientServerCommunicationsClientTimestamp;
  /**
   * Attribute missing flag for: 
    InCsfClientServerCommunicationsClientTransactionCode
   **/
  public char InCsfClientServerCommunicationsClientTransactionCode_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsClientTransactionCode
   **/
  public String InCsfClientServerCommunicationsClientTransactionCode;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsClientUserId
   **/
  public char InCsfClientServerCommunicationsClientUserId_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsClientUserId
   **/
  public String InCsfClientServerCommunicationsClientUserId;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsClientIsGuiFlag
   **/
  public char InCsfClientServerCommunicationsClientIsGuiFlag_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsClientIsGuiFlag
   **/
  public String InCsfClientServerCommunicationsClientIsGuiFlag;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsListLinkFlag
   **/
  public char InCsfClientServerCommunicationsListLinkFlag_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsListLinkFlag
   **/
  public String InCsfClientServerCommunicationsListLinkFlag;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsMaintLinkFlag
   **/
  public char InCsfClientServerCommunicationsMaintLinkFlag_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsMaintLinkFlag
   **/
  public String InCsfClientServerCommunicationsMaintLinkFlag;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsRgvScrollUpFlag
   **/
  public char InCsfClientServerCommunicationsRgvScrollUpFlag_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsRgvScrollUpFlag
   **/
  public String InCsfClientServerCommunicationsRgvScrollUpFlag;
  /**
   * Attribute missing flag for: 
    InCsfClientServerCommunicationsRgvScrollDownFlag
   **/
  public char InCsfClientServerCommunicationsRgvScrollDownFlag_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsRgvScrollDownFlag
   **/
  public String InCsfClientServerCommunicationsRgvScrollDownFlag;
  /**
   * Attribute missing flag for: 
    InCsfClientServerCommunicationsObjectRetrievedFlag
   **/
  public char InCsfClientServerCommunicationsObjectRetrievedFlag_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsObjectRetrievedFlag
   **/
  public String InCsfClientServerCommunicationsObjectRetrievedFlag;
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsFirstpassFlag
   **/
  public char InCsfClientServerCommunicationsFirstpassFlag_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsFirstpassFlag
   **/
  public String InCsfClientServerCommunicationsFirstpassFlag;
  // Entity View: IN
  //        Type: WS_DEPARTMENT
  /**
   * Attribute missing flag for: InWsDepartmentCode
   **/
  public char InWsDepartmentCode_AS;
  /**
   * Attribute for: InWsDepartmentCode
   **/
  public short InWsDepartmentCode;
  // Entity View: IN
  //        Type: WS_UNISA_COLLEGE
  /**
   * Attribute missing flag for: InWsUnisaCollegeCode
   **/
  public char InWsUnisaCollegeCode_AS;
  /**
   * Attribute for: InWsUnisaCollegeCode
   **/
  public short InWsUnisaCollegeCode;
  // Entity View: IN_ONLINE_OR_INTERNET
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: InOnlineOrInternetCsfStringsString1
   **/
  public char InOnlineOrInternetCsfStringsString1_AS;
  /**
   * Attribute for: InOnlineOrInternetCsfStringsString1
   **/
  public String InOnlineOrInternetCsfStringsString1;
  /**
   * Default Constructor
   **/
  
  public EXPLL01S_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public EXPLL01S_IA(EXPLL01S_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static EXPLL01S_IA getInstance()
  {
    return new EXPLL01S_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new EXPLL01S_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    InExamTypistLogEntryPaperNo_AS = ' ';
    InExamTypistLogEntryPaperNo = 0;
    InWsExpll01QuestPapOption_AS = ' ';
    InWsExpll01QuestPapOption = " ";
    InWsExpll01LogisticsOption_AS = ' ';
    InWsExpll01LogisticsOption = " ";
    InNrOfCombinedPapersIefSuppliedCount_AS = ' ';
    InNrOfCombinedPapersIefSuppliedCount = 0;
    InNextExamTypistLogExamYear_AS = ' ';
    InNextExamTypistLogExamYear = 0;
    InNextExamTypistLogMkExamPeriodCod_AS = ' ';
    InNextExamTypistLogMkExamPeriodCod = 0;
    InPrevExamTypistLogExamYear_AS = ' ';
    InPrevExamTypistLogExamYear = 0;
    InPrevExamTypistLogMkExamPeriodCod_AS = ' ';
    InPrevExamTypistLogMkExamPeriodCod = 0;
    InLogEntriesGrp_MA = 0;
    for(int a = 0; a < 5; a++)
    {
      InLogEntriesGrp_AC[a] = ' ';
      InGCalcQuantIefSuppliedCount_AS[a] = ' ';
      InGCalcQuantIefSuppliedCount[a] = 0;
      InGPaperColourCsfStringsString10_AS[a] = ' ';
      InGPaperColourCsfStringsString10[a] = "          ";
      InGExamPeriodDateDate_AS[a] = ' ';
      InGExamPeriodDateDate[a] = 00000000;
      InGIefSuppliedCount_AS[a] = ' ';
      InGIefSuppliedCount[a] = 0;
      InGIefSuppliedCommand_AS[a] = ' ';
      InGIefSuppliedCommand[a] = 
"                                                                                "
        ;
      InGIefSuppliedSelectChar_AS[a] = ' ';
      InGIefSuppliedSelectChar[a] = " ";
      InGExamTypistLogEntryPaperNo_AS[a] = ' ';
      InGExamTypistLogEntryPaperNo[a] = 0;
      InGExamTypistLogEntryTypist_AS[a] = ' ';
      InGExamTypistLogEntryTypist[a] = "";
      InGExamTypistLogEntryPaperFormat_AS[a] = ' ';
      InGExamTypistLogEntryPaperFormat[a] = " ";
      InGExamTypistLogEntryDateReceived_AS[a] = ' ';
      InGExamTypistLogEntryDateReceived[a] = 00000000;
      InGExamTypistLogEntryDateProof1_AS[a] = ' ';
      InGExamTypistLogEntryDateProof1[a] = 00000000;
      InGExamTypistLogEntryDateProof2_AS[a] = ' ';
      InGExamTypistLogEntryDateProof2[a] = 00000000;
      InGExamTypistLogEntryDateProof3_AS[a] = ' ';
      InGExamTypistLogEntryDateProof3[a] = 00000000;
      InGExamTypistLogEntryDateToPrint_AS[a] = ' ';
      InGExamTypistLogEntryDateToPrint[a] = 00000000;
      InGExamTypistLogEntryCpfReportPrinted_AS[a] = ' ';
      InGExamTypistLogEntryCpfReportPrinted[a] = "";
      InGExamTypistLogEntryDateInSafe_AS[a] = ' ';
      InGExamTypistLogEntryDateInSafe[a] = 00000000;
      InGExamTypistLogEntryDateToDept_AS[a] = ' ';
      InGExamTypistLogEntryDateToDept[a] = 00000000;
      InGExamTypistLogEntryDateFromDept_AS[a] = ' ';
      InGExamTypistLogEntryDateFromDept[a] = 00000000;
      InGExamTypistLogEntryDate2ToPrint_AS[a] = ' ';
      InGExamTypistLogEntryDate2ToPrint[a] = 00000000;
      InGExamTypistLogEntryDate2FromPrint_AS[a] = ' ';
      InGExamTypistLogEntryDate2FromPrint[a] = 00000000;
      InGExamTypistLogEntryDate3ToPrint_AS[a] = ' ';
      InGExamTypistLogEntryDate3ToPrint[a] = 00000000;
      InGExamTypistLogEntryDate3FromPrint_AS[a] = ' ';
      InGExamTypistLogEntryDate3FromPrint[a] = 00000000;
      InGExamTypistLogEntryQuant3ToPrint_AS[a] = ' ';
      InGExamTypistLogEntryQuant3ToPrint[a] = 0;
      InGExamTypistLogEntryQuantToPrint_AS[a] = ' ';
      InGExamTypistLogEntryQuantToPrint[a] = 0;
      InGExamTypistLogEntryQuantCalcedOn_AS[a] = ' ';
      InGExamTypistLogEntryQuantCalcedOn[a] = 00000000;
      InGExamTypistLogEntryQuant2ToPrint_AS[a] = ' ';
      InGExamTypistLogEntryQuant2ToPrint[a] = 0;
      InGExamTypistLogEntryQuant2CalcedOn_AS[a] = ' ';
      InGExamTypistLogEntryQuant2CalcedOn[a] = 00000000;
      InGExamTypistLogEntrySurplusQuant_AS[a] = ' ';
      InGExamTypistLogEntrySurplusQuant[a] = 0;
      InGExamTypistLogEntryDateScanned_AS[a] = ' ';
      InGExamTypistLogEntryDateScanned[a] = 00000000;
      InGExamTypistLogEntryDateAfrScanned_AS[a] = ' ';
      InGExamTypistLogEntryDateAfrScanned[a] = 00000000;
      InGExamTypistLogEntryOpenForWeb_AS[a] = ' ';
      InGExamTypistLogEntryOpenForWeb[a] = "";
      InGExamTypistLogEntryDocketChanges_AS[a] = ' ';
      InGExamTypistLogEntryDocketChanges[a] = " ";
      InGExamTypistLogEntryPaperChanges_AS[a] = ' ';
      InGExamTypistLogEntryPaperChanges[a] = " ";
      InGExamTypistLogEntryElectronicPaper_AS[a] = ' ';
      InGExamTypistLogEntryElectronicPaper[a] = " ";
      InGMyunisaWsRegistrationDatesFromDate_AS[a] = ' ';
      InGMyunisaWsRegistrationDatesFromDate[a] = 00000000;
      InGEngPaperCsfStringsString1_AS[a] = ' ';
      InGEngPaperCsfStringsString1[a] = " ";
      InGAfrPaperCsfStringsString1_AS[a] = ' ';
      InGAfrPaperCsfStringsString1[a] = " ";
    }
    InSearchCriteriaExamTypistLogExamYear_AS = ' ';
    InSearchCriteriaExamTypistLogExamYear = 0;
    InSearchCriteriaExamTypistLogMkExamPeriodCod_AS = ' ';
    InSearchCriteriaExamTypistLogMkExamPeriodCod = 0;
    InSearchCriteriaExamTypistLogMkStudyUnitCode_AS = ' ';
    InSearchCriteriaExamTypistLogMkStudyUnitCode = "";
    InKeyExamTypistLogExamYear_AS = ' ';
    InKeyExamTypistLogExamYear = 0;
    InKeyExamTypistLogMkExamPeriodCod_AS = ' ';
    InKeyExamTypistLogMkExamPeriodCod = 0;
    InKeyExamTypistLogMkStudyUnitCode_AS = ' ';
    InKeyExamTypistLogMkStudyUnitCode = "";
    InKeyExamTypistLogCombinedWith_AS = ' ';
    InKeyExamTypistLogCombinedWith = "                         ";
    InKeyExamTypistLogRemarks_AS = ' ';
    InKeyExamTypistLogRemarks = "";
    InKeyExamTypistLogRemarks2_AS = ' ';
    InKeyExamTypistLogRemarks2 = "";
    InKeyExamTypistLogRemarks3_AS = ' ';
    InKeyExamTypistLogRemarks3 = "                              ";
    InKeyExamTypistLogRemarks4_AS = ' ';
    InKeyExamTypistLogRemarks4 = "";
    InKeyExamTypistLogRemarks5_AS = ' ';
    InKeyExamTypistLogRemarks5 = "";
    InKeyExamTypistLogRemarks6_AS = ' ';
    InKeyExamTypistLogRemarks6 = "";
    InKeyExamTypistLogPaperExpected_AS = ' ';
    InKeyExamTypistLogPaperExpected = " ";
    InReportDateExamTypistLogEntryDateToPrint_AS = ' ';
    InReportDateExamTypistLogEntryDateToPrint = 00000000;
    InReportWizfuncReportingControlPathAndFilename_AS = ' ';
    InReportWizfuncReportingControlPathAndFilename = "";
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod_AS = ' ';
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod = 0;
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear_AS = ' ';
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear = 0;
    InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear_AS = ' ';
    InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear = 0;
    InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod_AS = ' ';
    InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod = 0;
    InScCpfAccessIefSuppliedFlag_AS = ' ';
    InScCpfAccessIefSuppliedFlag = " ";
    InScTypAccessIefSuppliedFlag_AS = ' ';
    InScTypAccessIefSuppliedFlag = " ";
    InWsFunctionNumber_AS = ' ';
    InWsFunctionNumber = 0;
    InWsStudyUnitMkDepartmentCode_AS = ' ';
    InWsStudyUnitMkDepartmentCode = 0;
    InWsStudyUnitEngLongDescription_AS = ' ';
    InWsStudyUnitEngLongDescription = 
"                                                                                                                                                                        "
      ;
    InWsStudyUnitCollegeFlag_AS = ' ';
    InWsStudyUnitCollegeFlag = " ";
    InSecurityWsUserNumber_AS = ' ';
    InSecurityWsUserNumber = 0;
    InSecurityWsUserEMail_AS = ' ';
    InSecurityWsUserEMail = 
      "                                                            ";
    InSecurityWsUserNovellUserCode_AS = ' ';
    InSecurityWsUserNovellUserCode = "                    ";
    InSecurityWsPrinterCode_AS = ' ';
    InSecurityWsPrinterCode = "          ";
    InCsfClientServerCommunicationsClientVersionNumber_AS = ' ';
    InCsfClientServerCommunicationsClientVersionNumber = 0;
    InCsfClientServerCommunicationsClientRevisionNumber_AS = ' ';
    InCsfClientServerCommunicationsClientRevisionNumber = 0;
    InCsfClientServerCommunicationsClientDevelopmentPhase_AS = ' ';
    InCsfClientServerCommunicationsClientDevelopmentPhase = " ";
    InCsfClientServerCommunicationsAction_AS = ' ';
    InCsfClientServerCommunicationsAction = "  ";
    InCsfClientServerCommunicationsClientDate_AS = ' ';
    InCsfClientServerCommunicationsClientDate = 00000000;
    InCsfClientServerCommunicationsClientTime_AS = ' ';
    InCsfClientServerCommunicationsClientTime = 00000000;
    InCsfClientServerCommunicationsClientTimestamp_AS = ' ';
    InCsfClientServerCommunicationsClientTimestamp = "00000000000000000000";
    InCsfClientServerCommunicationsClientTransactionCode_AS = ' ';
    InCsfClientServerCommunicationsClientTransactionCode = "        ";
    InCsfClientServerCommunicationsClientUserId_AS = ' ';
    InCsfClientServerCommunicationsClientUserId = "        ";
    InCsfClientServerCommunicationsClientIsGuiFlag_AS = ' ';
    InCsfClientServerCommunicationsClientIsGuiFlag = " ";
    InCsfClientServerCommunicationsListLinkFlag_AS = ' ';
    InCsfClientServerCommunicationsListLinkFlag = " ";
    InCsfClientServerCommunicationsMaintLinkFlag_AS = ' ';
    InCsfClientServerCommunicationsMaintLinkFlag = " ";
    InCsfClientServerCommunicationsRgvScrollUpFlag_AS = ' ';
    InCsfClientServerCommunicationsRgvScrollUpFlag = " ";
    InCsfClientServerCommunicationsRgvScrollDownFlag_AS = ' ';
    InCsfClientServerCommunicationsRgvScrollDownFlag = " ";
    InCsfClientServerCommunicationsObjectRetrievedFlag_AS = ' ';
    InCsfClientServerCommunicationsObjectRetrievedFlag = " ";
    InCsfClientServerCommunicationsFirstpassFlag_AS = ' ';
    InCsfClientServerCommunicationsFirstpassFlag = " ";
    InWsDepartmentCode_AS = ' ';
    InWsDepartmentCode = 0;
    InWsUnisaCollegeCode_AS = ' ';
    InWsUnisaCollegeCode = 0;
    InOnlineOrInternetCsfStringsString1_AS = ' ';
    InOnlineOrInternetCsfStringsString1 = " ";
  }
  /**
   * Gets the VDF array for the instance, initialized.
   **/
  
  public static VDF getViewDefinition()
  {
    if ( localVdf == null )
    {
      VDFEntry [] vdfEntries = {
new VDFEntry((int)1, "", "InExamTypistLogEntry", "ExamTypistLogEntry", 
          "PaperNo", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null)
          , 
        new VDFEntry((int)2, "", "InWsExpll01QuestPap", "WsExpll01QuestPap", 
          "Option", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null)
          , 
new VDFEntry((int)3, "", "InWsExpll01Logistics", "WsExpll01Logistics", 
          "Option", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null)
          , 
        new VDFEntry((int)4, "", "InNrOfCombinedPapersIefSupplied", 
          "IefSupplied", "Count", VDFEntry.TYPE_INT, (short)1, (short)0, 8, (
          short)0, null), 
        new VDFEntry((int)5, "", "InNextExamTypistLog", "ExamTypistLog", 
          "ExamYear", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)6, "", "InNextExamTypistLog", "ExamTypistLog", 
          "MkExamPeriodCod", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)
          0, null), 
        new VDFEntry((int)7, "", "InPrevExamTypistLog", "ExamTypistLog", 
          "ExamYear", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)8, "", "InPrevExamTypistLog", "ExamTypistLog", 
          "MkExamPeriodCod", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)
          0, null), 
        new VDFEntry((int)9, "InLogEntriesGrp", "", "", "MA", VDFEntry.TYPE_INT,
           (short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)10, "InLogEntriesGrp", "", "", "AC", 
          VDFEntry.TYPE_CHAR, (short)5, (short)0, 1, (short)0, null), 
        new VDFEntry((int)11, "InLogEntriesGrp", "InGCalcQuantIefSupplied", 
          "IefSupplied", "Count", VDFEntry.TYPE_INT, (short)5, (short)0, 8, (
          short)0, null), 
        new VDFEntry((int)12, "InLogEntriesGrp", "InGPaperColourCsfStrings", 
          "CsfStrings", "String10", VDFEntry.TYPE_STRING, (short)5, (short)0, 
          10, (short)0, null), 
        new VDFEntry((int)13, "InLogEntriesGrp", "InGExamPeriodDate", 
          "ExamPeriodDate", "Date", VDFEntry.TYPE_DATE, (short)5, (short)0, 8, (
          short)0, null), 
        new VDFEntry((int)14, "InLogEntriesGrp", "InGIefSupplied", "IefSupplied"
          , "Count", VDFEntry.TYPE_INT, (short)5, (short)0, 8, (short)0, null), 
          
        new VDFEntry((int)15, "InLogEntriesGrp", "InGIefSupplied", "IefSupplied"
          , "Command", VDFEntry.TYPE_STRING, (short)5, (short)0, 80, (short)0, 
          null), 
        new VDFEntry((int)16, "InLogEntriesGrp", "InGIefSupplied", "IefSupplied"
          , "SelectChar", VDFEntry.TYPE_STRING, (short)5, (short)0, 1, (short)0,
           null), 
        new VDFEntry((int)17, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "PaperNo", VDFEntry.TYPE_SHORT, (short)5, (
          short)0, 2, (short)0, null), 
        new VDFEntry((int)18, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Typist", VDFEntry.TYPE_STRING, (short)5, (
          short)0, 3, (short)0, null), 
        new VDFEntry((int)19, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "PaperFormat", VDFEntry.TYPE_STRING, (short)5, (
          short)0, 1, (short)0, null), 
        new VDFEntry((int)20, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateReceived", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)21, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateProof1", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)22, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateProof2", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)23, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateProof3", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)24, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateToPrint", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)25, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "CpfReportPrinted", VDFEntry.TYPE_STRING, (
          short)5, (short)0, 1, (short)0, null), 
        new VDFEntry((int)26, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateInSafe", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)27, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateToDept", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)28, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateFromDept", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)29, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Date2ToPrint", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)30, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Date2FromPrint", VDFEntry.TYPE_DATE, (short)5, 
          (short)0, 8, (short)0, null), 
        new VDFEntry((int)31, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Date3ToPrint", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)32, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Date3FromPrint", VDFEntry.TYPE_DATE, (short)5, 
          (short)0, 8, (short)0, null), 
        new VDFEntry((int)33, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Quant3ToPrint", VDFEntry.TYPE_INT, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)34, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "QuantToPrint", VDFEntry.TYPE_INT, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)35, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "QuantCalcedOn", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)36, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Quant2ToPrint", VDFEntry.TYPE_INT, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)37, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "Quant2CalcedOn", VDFEntry.TYPE_DATE, (short)5, 
          (short)0, 8, (short)0, null), 
        new VDFEntry((int)38, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "SurplusQuant", VDFEntry.TYPE_INT, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)39, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateScanned", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)40, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateAfrScanned", VDFEntry.TYPE_DATE, (short)5, 
          (short)0, 8, (short)0, null), 
        new VDFEntry((int)41, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "OpenForWeb", VDFEntry.TYPE_STRING, (short)5, (
          short)0, 1, (short)0, null), 
        new VDFEntry((int)42, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "DocketChanges", VDFEntry.TYPE_STRING, (short)5,
           (short)0, 1, (short)0, null), 
        new VDFEntry((int)43, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "PaperChanges", VDFEntry.TYPE_STRING, (short)5, 
          (short)0, 1, (short)0, null), 
        new VDFEntry((int)44, "InLogEntriesGrp", "InGExamTypistLogEntry", 
          "ExamTypistLogEntry", "ElectronicPaper", VDFEntry.TYPE_STRING, (short)
          5, (short)0, 1, (short)0, null), 
        new VDFEntry((int)45, "InLogEntriesGrp", "InGMyunisaWsRegistrationDates"
          , "WsRegistrationDates", "FromDate", VDFEntry.TYPE_DATE, (short)5, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)46, "InLogEntriesGrp", "InGEngPaperCsfStrings", 
          "CsfStrings", "String1", VDFEntry.TYPE_STRING, (short)5, (short)0, 1, 
          (short)0, null), 
        new VDFEntry((int)47, "InLogEntriesGrp", "InGAfrPaperCsfStrings", 
          "CsfStrings", "String1", VDFEntry.TYPE_STRING, (short)5, (short)0, 1, 
          (short)0, null), 
        new VDFEntry((int)48, "", "InSearchCriteriaExamTypistLog", 
          "ExamTypistLog", "ExamYear", VDFEntry.TYPE_SHORT, (short)1, (short)0, 
          2, (short)0, null), 
        new VDFEntry((int)49, "", "InSearchCriteriaExamTypistLog", 
          "ExamTypistLog", "MkExamPeriodCod", VDFEntry.TYPE_SHORT, (short)1, (
          short)0, 2, (short)0, null), 
        new VDFEntry((int)50, "", "InSearchCriteriaExamTypistLog", 
          "ExamTypistLog", "MkStudyUnitCode", VDFEntry.TYPE_STRING, (short)1, (
          short)0, 7, (short)0, null), 
        new VDFEntry((int)51, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "ExamYear", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, 
          null), 
        new VDFEntry((int)52, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "MkExamPeriodCod", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)
          0, null), 
        new VDFEntry((int)53, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "MkStudyUnitCode", VDFEntry.TYPE_STRING, (short)1, (short)0, 7, (
          short)0, null), 
        new VDFEntry((int)54, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "CombinedWith", VDFEntry.TYPE_STRING, (short)1, (short)0, 25, (short)
          0, null), 
        new VDFEntry((int)55, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "Remarks", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)56, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "Remarks2", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)57, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "Remarks3", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)58, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "Remarks4", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)59, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "Remarks5", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)60, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "Remarks6", VDFEntry.TYPE_STRING, (short)1, (short)0, 30, (short)0, 
          null), 
        new VDFEntry((int)61, "", "InKeyExamTypistLog", "ExamTypistLog", 
          "PaperExpected", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)
          0, null), 
        new VDFEntry((int)62, "", "InReportDateExamTypistLogEntry", 
          "ExamTypistLogEntry", "DateToPrint", VDFEntry.TYPE_DATE, (short)1, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)63, "", "InReportWizfuncReportingControl", 
          "WizfuncReportingControl", "PathAndFilename", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 256, (short)0, null), 
        new VDFEntry((int)64, "", "InOutstExamPapersWsStudyUnitPeriodDetail", 
          "WsStudyUnitPeriodDetail", "MkExamPeriod", VDFEntry.TYPE_SHORT, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)65, "", "InOutstExamPapersWsStudyUnitPeriodDetail", 
          "WsStudyUnitPeriodDetail", "MkExamYear", VDFEntry.TYPE_SHORT, (short)
          1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)66, "", "InOutstExamPapersWsStudyUnitPeriodDetail", 
          "WsStudyUnitPeriodDetail", "MkAcademicYear", VDFEntry.TYPE_SHORT, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)67, "", "InOutstExamPapersWsStudyUnitPeriodDetail", 
          "WsStudyUnitPeriodDetail", "SemesterPeriod", VDFEntry.TYPE_SHORT, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)68, "", "InScCpfAccessIefSupplied", "IefSupplied", 
          "Flag", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
          
        new VDFEntry((int)69, "", "InScTypAccessIefSupplied", "IefSupplied", 
          "Flag", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
          
        new VDFEntry((int)70, "", "InWsFunction", "WsFunction", "Number", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)71, "", "InWsStudyUnit", "WsStudyUnit", 
          "MkDepartmentCode", VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (
          short)0, null), 
        new VDFEntry((int)72, "", "InWsStudyUnit", "WsStudyUnit", 
          "EngLongDescription", VDFEntry.TYPE_STRING, (short)1, (short)0, 168, (
          short)0, null), 
        new VDFEntry((int)73, "", "InWsStudyUnit", "WsStudyUnit", "CollegeFlag",
           VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)74, "", "InSecurityWsUser", "WsUser", "Number", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)75, "", "InSecurityWsUser", "WsUser", "EMail", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 60, (short)0, null), 
        new VDFEntry((int)76, "", "InSecurityWsUser", "WsUser", "NovellUserCode"
          , VDFEntry.TYPE_STRING, (short)1, (short)0, 20, (short)0, null), 
        new VDFEntry((int)77, "", "InSecurityWsPrinter", "WsPrinter", "Code", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 10, (short)0, null), 
        new VDFEntry((int)78, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientVersionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)79, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientRevisionNumber", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)80, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientDevelopmentPhase", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)81, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "Action", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)82, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientDate", VDFEntry.TYPE_DATE, (
          short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)83, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientTime", VDFEntry.TYPE_TIME, (
          short)1, (short)0, 6, (short)0, null), 
        new VDFEntry((int)84, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientTimestamp", 
          VDFEntry.TYPE_TIMESTAMP, (short)1, (short)0, 20, (short)0, null), 
        new VDFEntry((int)85, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientTransactionCode", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)86, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientUserId", VDFEntry.TYPE_STRING,
           (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)87, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ClientIsGuiFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)88, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ListLinkFlag", VDFEntry.TYPE_STRING,
           (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)89, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "MaintLinkFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)90, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "RgvScrollUpFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)91, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "RgvScrollDownFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)92, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "ObjectRetrievedFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)93, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "FirstpassFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)94, "", "InWsDepartment", "WsDepartment", "Code", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)95, "", "InWsUnisaCollege", "WsUnisaCollege", "Code", 
          VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)96, "", "InOnlineOrInternetCsfStrings", "CsfStrings", 
          "String1", VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, 
          null), 
      };
      localVdf = new VDF(vdfEntries);
    }
    try {
      VDF result = (VDF)localVdf.clone();
      result.initViewData();
      return result;
    } catch( CloneNotSupportedException e ) {
      return null;
    }
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    VDF vdf = getViewDefinition();
    // predicate view item
    vdf.getEntries()[0].getDataValue().setObject(new Short(
      InExamTypistLogEntryPaperNo));
    // predicate view item
    vdf.getEntries()[1].getDataValue().setObject(InWsExpll01QuestPapOption);
    // predicate view item
    vdf.getEntries()[2].getDataValue().setObject(InWsExpll01LogisticsOption);
    // predicate view item
    vdf.getEntries()[3].getDataValue().setObject(new Integer(
      InNrOfCombinedPapersIefSuppliedCount));
    // predicate view item
    vdf.getEntries()[4].getDataValue().setObject(new Short(
      InNextExamTypistLogExamYear));
    // predicate view item
    vdf.getEntries()[5].getDataValue().setObject(new Short(
      InNextExamTypistLogMkExamPeriodCod));
    // predicate view item
    vdf.getEntries()[6].getDataValue().setObject(new Short(
      InPrevExamTypistLogExamYear));
    // predicate view item
    vdf.getEntries()[7].getDataValue().setObject(new Short(
      InPrevExamTypistLogMkExamPeriodCod));
    // group view current cardinality
    vdf.getEntries()[8].getDataValue().setObject(new Integer(InLogEntriesGrp_MA)
      );
    // group view active flags
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      if ( adim0 < InLogEntriesGrp_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[9].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[9].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[9].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[10].getDataValue().getObject())[
        adim0].setObject(new Integer(InGCalcQuantIefSuppliedCount[adim0]));
    }
    vdf.getEntries()[10].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[11].getDataValue().getObject())[
        adim0].setObject(InGPaperColourCsfStringsString10[adim0]);
    }
    vdf.getEntries()[11].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[12].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamPeriodDateDate[adim0]));
    }
    vdf.getEntries()[12].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[13].getDataValue().getObject())[
        adim0].setObject(new Integer(InGIefSuppliedCount[adim0]));
    }
    vdf.getEntries()[13].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[14].getDataValue().getObject())[
        adim0].setObject(InGIefSuppliedCommand[adim0]);
    }
    vdf.getEntries()[14].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[15].getDataValue().getObject())[
        adim0].setObject(InGIefSuppliedSelectChar[adim0]);
    }
    vdf.getEntries()[15].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[16].getDataValue().getObject())[
        adim0].setObject(new Short(InGExamTypistLogEntryPaperNo[adim0]));
    }
    vdf.getEntries()[16].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[17].getDataValue().getObject())[
        adim0].setObject(InGExamTypistLogEntryTypist[adim0]);
    }
    vdf.getEntries()[17].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[18].getDataValue().getObject())[
        adim0].setObject(InGExamTypistLogEntryPaperFormat[adim0]);
    }
    vdf.getEntries()[18].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[19].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateReceived[adim0]))
        ;
    }
    vdf.getEntries()[19].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[20].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateProof1[adim0]));
    }
    vdf.getEntries()[20].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[21].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateProof2[adim0]));
    }
    vdf.getEntries()[21].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[22].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateProof3[adim0]));
    }
    vdf.getEntries()[22].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[23].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateToPrint[adim0]));
    }
    vdf.getEntries()[23].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[24].getDataValue().getObject())[
        adim0].setObject(InGExamTypistLogEntryCpfReportPrinted[adim0]);
    }
    vdf.getEntries()[24].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[25].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateInSafe[adim0]));
    }
    vdf.getEntries()[25].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[26].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateToDept[adim0]));
    }
    vdf.getEntries()[26].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[27].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateFromDept[adim0]))
        ;
    }
    vdf.getEntries()[27].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[28].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDate2ToPrint[adim0]))
        ;
    }
    vdf.getEntries()[28].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[29].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDate2FromPrint[adim0])
        );
    }
    vdf.getEntries()[29].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[30].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDate3ToPrint[adim0]))
        ;
    }
    vdf.getEntries()[30].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[31].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDate3FromPrint[adim0])
        );
    }
    vdf.getEntries()[31].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[32].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryQuant3ToPrint[adim0]))
        ;
    }
    vdf.getEntries()[32].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[33].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryQuantToPrint[adim0]))
        ;
    }
    vdf.getEntries()[33].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[34].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryQuantCalcedOn[adim0]))
        ;
    }
    vdf.getEntries()[34].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[35].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryQuant2ToPrint[adim0]))
        ;
    }
    vdf.getEntries()[35].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[36].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryQuant2CalcedOn[adim0])
        );
    }
    vdf.getEntries()[36].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[37].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntrySurplusQuant[adim0]))
        ;
    }
    vdf.getEntries()[37].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[38].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateScanned[adim0]));
    }
    vdf.getEntries()[38].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[39].getDataValue().getObject())[
        adim0].setObject(new Integer(InGExamTypistLogEntryDateAfrScanned[adim0])
        );
    }
    vdf.getEntries()[39].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[40].getDataValue().getObject())[
        adim0].setObject(InGExamTypistLogEntryOpenForWeb[adim0]);
    }
    vdf.getEntries()[40].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[41].getDataValue().getObject())[
        adim0].setObject(InGExamTypistLogEntryDocketChanges[adim0]);
    }
    vdf.getEntries()[41].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[42].getDataValue().getObject())[
        adim0].setObject(InGExamTypistLogEntryPaperChanges[adim0]);
    }
    vdf.getEntries()[42].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[43].getDataValue().getObject())[
        adim0].setObject(InGExamTypistLogEntryElectronicPaper[adim0]);
    }
    vdf.getEntries()[43].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[44].getDataValue().getObject())[
        adim0].setObject(new Integer(InGMyunisaWsRegistrationDatesFromDate[
        adim0]));
    }
    vdf.getEntries()[44].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[45].getDataValue().getObject())[
        adim0].setObject(InGEngPaperCsfStringsString1[adim0]);
    }
    vdf.getEntries()[45].setCountUsed((short)InLogEntriesGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 5; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[46].getDataValue().getObject())[
        adim0].setObject(InGAfrPaperCsfStringsString1[adim0]);
    }
    vdf.getEntries()[46].setCountUsed((short)InLogEntriesGrp_MA);
    // predicate view item
    vdf.getEntries()[47].getDataValue().setObject(new Short(
      InSearchCriteriaExamTypistLogExamYear));
    // predicate view item
    vdf.getEntries()[48].getDataValue().setObject(new Short(
      InSearchCriteriaExamTypistLogMkExamPeriodCod));
    // predicate view item
    vdf.getEntries()[49].getDataValue().setObject(
      InSearchCriteriaExamTypistLogMkStudyUnitCode);
    // predicate view item
    vdf.getEntries()[50].getDataValue().setObject(new Short(
      InKeyExamTypistLogExamYear));
    // predicate view item
    vdf.getEntries()[51].getDataValue().setObject(new Short(
      InKeyExamTypistLogMkExamPeriodCod));
    // predicate view item
    vdf.getEntries()[52].getDataValue().setObject(
      InKeyExamTypistLogMkStudyUnitCode);
    // predicate view item
    vdf.getEntries()[53].getDataValue().setObject(
      InKeyExamTypistLogCombinedWith);
    // predicate view item
    vdf.getEntries()[54].getDataValue().setObject(InKeyExamTypistLogRemarks);
    // predicate view item
    vdf.getEntries()[55].getDataValue().setObject(InKeyExamTypistLogRemarks2);
    // predicate view item
    vdf.getEntries()[56].getDataValue().setObject(InKeyExamTypistLogRemarks3);
    // predicate view item
    vdf.getEntries()[57].getDataValue().setObject(InKeyExamTypistLogRemarks4);
    // predicate view item
    vdf.getEntries()[58].getDataValue().setObject(InKeyExamTypistLogRemarks5);
    // predicate view item
    vdf.getEntries()[59].getDataValue().setObject(InKeyExamTypistLogRemarks6);
    // predicate view item
    vdf.getEntries()[60].getDataValue().setObject(
      InKeyExamTypistLogPaperExpected);
    // predicate view item
    vdf.getEntries()[61].getDataValue().setObject(new Integer(
      InReportDateExamTypistLogEntryDateToPrint));
    // predicate view item
    vdf.getEntries()[62].getDataValue().setObject(
      InReportWizfuncReportingControlPathAndFilename);
    // predicate view item
    vdf.getEntries()[63].getDataValue().setObject(new Short(
      InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod));
    // predicate view item
    vdf.getEntries()[64].getDataValue().setObject(new Short(
      InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear));
    // predicate view item
    vdf.getEntries()[65].getDataValue().setObject(new Short(
      InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear));
    // predicate view item
    vdf.getEntries()[66].getDataValue().setObject(new Short(
      InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod));
    // predicate view item
    vdf.getEntries()[67].getDataValue().setObject(InScCpfAccessIefSuppliedFlag)
      ;
    // predicate view item
    vdf.getEntries()[68].getDataValue().setObject(InScTypAccessIefSuppliedFlag)
      ;
    // predicate view item
    vdf.getEntries()[69].getDataValue().setObject(new Integer(
      InWsFunctionNumber));
    // predicate view item
    vdf.getEntries()[70].getDataValue().setObject(new Short(
      InWsStudyUnitMkDepartmentCode));
    // predicate view item
    vdf.getEntries()[71].getDataValue().setObject(
      InWsStudyUnitEngLongDescription);
    // predicate view item
    vdf.getEntries()[72].getDataValue().setObject(InWsStudyUnitCollegeFlag);
    // predicate view item
    vdf.getEntries()[73].getDataValue().setObject(new Integer(
      InSecurityWsUserNumber));
    // predicate view item
    vdf.getEntries()[74].getDataValue().setObject(InSecurityWsUserEMail);
    // predicate view item
    vdf.getEntries()[75].getDataValue().setObject(
      InSecurityWsUserNovellUserCode);
    // predicate view item
    vdf.getEntries()[76].getDataValue().setObject(InSecurityWsPrinterCode);
    // predicate view item
    vdf.getEntries()[77].getDataValue().setObject(new Short(
      InCsfClientServerCommunicationsClientVersionNumber));
    // predicate view item
    vdf.getEntries()[78].getDataValue().setObject(new Short(
      InCsfClientServerCommunicationsClientRevisionNumber));
    // predicate view item
    vdf.getEntries()[79].getDataValue().setObject(
      InCsfClientServerCommunicationsClientDevelopmentPhase);
    // predicate view item
    vdf.getEntries()[80].getDataValue().setObject(
      InCsfClientServerCommunicationsAction);
    // predicate view item
    vdf.getEntries()[81].getDataValue().setObject(new Integer(
      InCsfClientServerCommunicationsClientDate));
    // predicate view item
    vdf.getEntries()[82].getDataValue().setObject(new Integer(
      InCsfClientServerCommunicationsClientTime));
    // predicate view item
    vdf.getEntries()[83].getDataValue().setObject(
      InCsfClientServerCommunicationsClientTimestamp);
    // predicate view item
    vdf.getEntries()[84].getDataValue().setObject(
      InCsfClientServerCommunicationsClientTransactionCode);
    // predicate view item
    vdf.getEntries()[85].getDataValue().setObject(
      InCsfClientServerCommunicationsClientUserId);
    // predicate view item
    vdf.getEntries()[86].getDataValue().setObject(
      InCsfClientServerCommunicationsClientIsGuiFlag);
    // predicate view item
    vdf.getEntries()[87].getDataValue().setObject(
      InCsfClientServerCommunicationsListLinkFlag);
    // predicate view item
    vdf.getEntries()[88].getDataValue().setObject(
      InCsfClientServerCommunicationsMaintLinkFlag);
    // predicate view item
    vdf.getEntries()[89].getDataValue().setObject(
      InCsfClientServerCommunicationsRgvScrollUpFlag);
    // predicate view item
    vdf.getEntries()[90].getDataValue().setObject(
      InCsfClientServerCommunicationsRgvScrollDownFlag);
    // predicate view item
    vdf.getEntries()[91].getDataValue().setObject(
      InCsfClientServerCommunicationsObjectRetrievedFlag);
    // predicate view item
    vdf.getEntries()[92].getDataValue().setObject(
      InCsfClientServerCommunicationsFirstpassFlag);
    // predicate view item
    vdf.getEntries()[93].getDataValue().setObject(new Short(InWsDepartmentCode))
      ;
    // predicate view item
    vdf.getEntries()[94].getDataValue().setObject(new Short(
      InWsUnisaCollegeCode));
    // predicate view item
    vdf.getEntries()[95].getDataValue().setObject(
      InOnlineOrInternetCsfStringsString1);
    return(vdf);
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    // predicate view item
    if ( vdf.getEntries()[0].getDataValue().getObject() != null )
    {
      InExamTypistLogEntryPaperNo = ((Short)vdf.getEntries()[0].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      InExamTypistLogEntryPaperNo = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[1].getDataValue().getObject() != null )
    {
      InWsExpll01QuestPapOption = ((String)vdf.getEntries()[1].getDataValue()
        .getObject());
    }
    else 
    {
      InWsExpll01QuestPapOption = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[2].getDataValue().getObject() != null )
    {
      InWsExpll01LogisticsOption = ((String)vdf.getEntries()[2].getDataValue()
        .getObject());
    }
    else 
    {
      InWsExpll01LogisticsOption = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[3].getDataValue().getObject() != null )
    {
      InNrOfCombinedPapersIefSuppliedCount = ((Integer)vdf.getEntries()[3]
        .getDataValue().getObject()).intValue();
    }
    else 
    {
      InNrOfCombinedPapersIefSuppliedCount = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[4].getDataValue().getObject() != null )
    {
      InNextExamTypistLogExamYear = ((Short)vdf.getEntries()[4].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      InNextExamTypistLogExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[5].getDataValue().getObject() != null )
    {
      InNextExamTypistLogMkExamPeriodCod = ((Short)vdf.getEntries()[5]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      InNextExamTypistLogMkExamPeriodCod = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[6].getDataValue().getObject() != null )
    {
      InPrevExamTypistLogExamYear = ((Short)vdf.getEntries()[6].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      InPrevExamTypistLogExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[7].getDataValue().getObject() != null )
    {
      InPrevExamTypistLogMkExamPeriodCod = ((Short)vdf.getEntries()[7]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      InPrevExamTypistLogMkExamPeriodCod = 0;
    }
    // group view current cardinality
    if ( vdf.getEntries()[8].getDataValue().getObject() != null )
    {
      InLogEntriesGrp_MA = ((Integer)vdf.getEntries()[8].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      InLogEntriesGrp_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[9].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InLogEntriesGrp_AC[adim0] = ((Character)((VDFEntryObject [])
          vdf.getEntries()[9].getDataValue().getObject())[adim0].getObject())
          .charValue();
      }
      else 
      {
        InLogEntriesGrp_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[10].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGCalcQuantIefSuppliedCount[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[10].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGCalcQuantIefSuppliedCount[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[11].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGPaperColourCsfStringsString10[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[11].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGPaperColourCsfStringsString10[adim0] = "          ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[12].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamPeriodDateDate[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[12].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamPeriodDateDate[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[13].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGIefSuppliedCount[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[13].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGIefSuppliedCount[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[14].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGIefSuppliedCommand[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[14].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGIefSuppliedCommand[adim0] = 
"                                                                                "
          ;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[15].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGIefSuppliedSelectChar[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[15].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGIefSuppliedSelectChar[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[16].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryPaperNo[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[16].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        InGExamTypistLogEntryPaperNo[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[17].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryTypist[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[17].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGExamTypistLogEntryTypist[adim0] = "";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[18].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryPaperFormat[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[18].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGExamTypistLogEntryPaperFormat[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[19].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateReceived[adim0] = ((Integer)((VDFEntryObject []
          )vdf.getEntries()[19].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateReceived[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[20].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateProof1[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[20].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateProof1[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[21].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateProof2[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[21].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateProof2[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[22].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateProof3[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[22].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateProof3[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[23].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateToPrint[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[23].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateToPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[24].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryCpfReportPrinted[adim0] = ((String)((
          VDFEntryObject [])vdf.getEntries()[24].getDataValue().getObject())[
          adim0].getObject());
      }
      else 
      {
        InGExamTypistLogEntryCpfReportPrinted[adim0] = "";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[25].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateInSafe[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[25].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateInSafe[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[26].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateToDept[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[26].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateToDept[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[27].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateFromDept[adim0] = ((Integer)((VDFEntryObject []
          )vdf.getEntries()[27].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateFromDept[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[28].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDate2ToPrint[adim0] = ((Integer)((VDFEntryObject []
          )vdf.getEntries()[28].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDate2ToPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[29].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDate2FromPrint[adim0] = ((Integer)((VDFEntryObject 
          [])vdf.getEntries()[29].getDataValue().getObject())[adim0].getObject()
          ).intValue();
      }
      else 
      {
        InGExamTypistLogEntryDate2FromPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[30].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDate3ToPrint[adim0] = ((Integer)((VDFEntryObject []
          )vdf.getEntries()[30].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDate3ToPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[31].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDate3FromPrint[adim0] = ((Integer)((VDFEntryObject 
          [])vdf.getEntries()[31].getDataValue().getObject())[adim0].getObject()
          ).intValue();
      }
      else 
      {
        InGExamTypistLogEntryDate3FromPrint[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[32].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryQuant3ToPrint[adim0] = ((Integer)((VDFEntryObject [
          ])vdf.getEntries()[32].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryQuant3ToPrint[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[33].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryQuantToPrint[adim0] = ((Integer)((VDFEntryObject []
          )vdf.getEntries()[33].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryQuantToPrint[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[34].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryQuantCalcedOn[adim0] = ((Integer)((VDFEntryObject [
          ])vdf.getEntries()[34].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryQuantCalcedOn[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[35].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryQuant2ToPrint[adim0] = ((Integer)((VDFEntryObject [
          ])vdf.getEntries()[35].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryQuant2ToPrint[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[36].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryQuant2CalcedOn[adim0] = ((Integer)((VDFEntryObject 
          [])vdf.getEntries()[36].getDataValue().getObject())[adim0].getObject()
          ).intValue();
      }
      else 
      {
        InGExamTypistLogEntryQuant2CalcedOn[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[37].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntrySurplusQuant[adim0] = ((Integer)((VDFEntryObject []
          )vdf.getEntries()[37].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntrySurplusQuant[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[38].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateScanned[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[38].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateScanned[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[39].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDateAfrScanned[adim0] = ((Integer)((VDFEntryObject 
          [])vdf.getEntries()[39].getDataValue().getObject())[adim0].getObject()
          ).intValue();
      }
      else 
      {
        InGExamTypistLogEntryDateAfrScanned[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[40].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryOpenForWeb[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[40].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGExamTypistLogEntryOpenForWeb[adim0] = "";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[41].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryDocketChanges[adim0] = ((String)((VDFEntryObject []
          )vdf.getEntries()[41].getDataValue().getObject())[adim0].getObject())
          ;
      }
      else 
      {
        InGExamTypistLogEntryDocketChanges[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[42].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryPaperChanges[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[42].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGExamTypistLogEntryPaperChanges[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[43].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGExamTypistLogEntryElectronicPaper[adim0] = ((String)((VDFEntryObject 
          [])vdf.getEntries()[43].getDataValue().getObject())[adim0].getObject()
          );
      }
      else 
      {
        InGExamTypistLogEntryElectronicPaper[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[44].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGMyunisaWsRegistrationDatesFromDate[adim0] = ((Integer)((
          VDFEntryObject [])vdf.getEntries()[44].getDataValue().getObject())[
          adim0].getObject()).intValue();
      }
      else 
      {
        InGMyunisaWsRegistrationDatesFromDate[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[45].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGEngPaperCsfStringsString1[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[45].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGEngPaperCsfStringsString1[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InLogEntriesGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[46].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGAfrPaperCsfStringsString1[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[46].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGAfrPaperCsfStringsString1[adim0] = " ";
      }
    }
    // predicate view item
    if ( vdf.getEntries()[47].getDataValue().getObject() != null )
    {
      InSearchCriteriaExamTypistLogExamYear = ((Short)vdf.getEntries()[47]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      InSearchCriteriaExamTypistLogExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[48].getDataValue().getObject() != null )
    {
      InSearchCriteriaExamTypistLogMkExamPeriodCod = ((Short)vdf.getEntries()[
        48].getDataValue().getObject()).shortValue();
    }
    else 
    {
      InSearchCriteriaExamTypistLogMkExamPeriodCod = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[49].getDataValue().getObject() != null )
    {
      InSearchCriteriaExamTypistLogMkStudyUnitCode = ((String)vdf.getEntries()[
        49].getDataValue().getObject());
    }
    else 
    {
      InSearchCriteriaExamTypistLogMkStudyUnitCode = "";
    }
    // predicate view item
    if ( vdf.getEntries()[50].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogExamYear = ((Short)vdf.getEntries()[50].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      InKeyExamTypistLogExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[51].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogMkExamPeriodCod = ((Short)vdf.getEntries()[51]
        .getDataValue().getObject()).shortValue();
    }
    else 
    {
      InKeyExamTypistLogMkExamPeriodCod = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[52].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogMkStudyUnitCode = ((String)vdf.getEntries()[52]
        .getDataValue().getObject());
    }
    else 
    {
      InKeyExamTypistLogMkStudyUnitCode = "";
    }
    // predicate view item
    if ( vdf.getEntries()[53].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogCombinedWith = ((String)vdf.getEntries()[53]
        .getDataValue().getObject());
    }
    else 
    {
      InKeyExamTypistLogCombinedWith = "                         ";
    }
    // predicate view item
    if ( vdf.getEntries()[54].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogRemarks = ((String)vdf.getEntries()[54].getDataValue()
        .getObject());
    }
    else 
    {
      InKeyExamTypistLogRemarks = "";
    }
    // predicate view item
    if ( vdf.getEntries()[55].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogRemarks2 = ((String)vdf.getEntries()[55].getDataValue()
        .getObject());
    }
    else 
    {
      InKeyExamTypistLogRemarks2 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[56].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogRemarks3 = ((String)vdf.getEntries()[56].getDataValue()
        .getObject());
    }
    else 
    {
      InKeyExamTypistLogRemarks3 = "                              ";
    }
    // predicate view item
    if ( vdf.getEntries()[57].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogRemarks4 = ((String)vdf.getEntries()[57].getDataValue()
        .getObject());
    }
    else 
    {
      InKeyExamTypistLogRemarks4 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[58].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogRemarks5 = ((String)vdf.getEntries()[58].getDataValue()
        .getObject());
    }
    else 
    {
      InKeyExamTypistLogRemarks5 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[59].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogRemarks6 = ((String)vdf.getEntries()[59].getDataValue()
        .getObject());
    }
    else 
    {
      InKeyExamTypistLogRemarks6 = "";
    }
    // predicate view item
    if ( vdf.getEntries()[60].getDataValue().getObject() != null )
    {
      InKeyExamTypistLogPaperExpected = ((String)vdf.getEntries()[60]
        .getDataValue().getObject());
    }
    else 
    {
      InKeyExamTypistLogPaperExpected = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[61].getDataValue().getObject() != null )
    {
      InReportDateExamTypistLogEntryDateToPrint = ((Integer)vdf.getEntries()[61]
        .getDataValue().getObject()).intValue();
    }
    else 
    {
      InReportDateExamTypistLogEntryDateToPrint = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[62].getDataValue().getObject() != null )
    {
      InReportWizfuncReportingControlPathAndFilename = ((String)vdf.getEntries()
        [62].getDataValue().getObject());
    }
    else 
    {
      InReportWizfuncReportingControlPathAndFilename = "";
    }
    // predicate view item
    if ( vdf.getEntries()[63].getDataValue().getObject() != null )
    {
      InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod = ((Short)
        vdf.getEntries()[63].getDataValue().getObject()).shortValue();
    }
    else 
    {
      InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[64].getDataValue().getObject() != null )
    {
      InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear = ((Short)
        vdf.getEntries()[64].getDataValue().getObject()).shortValue();
    }
    else 
    {
      InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[65].getDataValue().getObject() != null )
    {
      InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear = ((Short)
        vdf.getEntries()[65].getDataValue().getObject()).shortValue();
    }
    else 
    {
      InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[66].getDataValue().getObject() != null )
    {
      InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod = ((Short)
        vdf.getEntries()[66].getDataValue().getObject()).shortValue();
    }
    else 
    {
      InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[67].getDataValue().getObject() != null )
    {
      InScCpfAccessIefSuppliedFlag = ((String)vdf.getEntries()[67].getDataValue(
        ).getObject());
    }
    else 
    {
      InScCpfAccessIefSuppliedFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[68].getDataValue().getObject() != null )
    {
      InScTypAccessIefSuppliedFlag = ((String)vdf.getEntries()[68].getDataValue(
        ).getObject());
    }
    else 
    {
      InScTypAccessIefSuppliedFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[69].getDataValue().getObject() != null )
    {
      InWsFunctionNumber = ((Integer)vdf.getEntries()[69].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      InWsFunctionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[70].getDataValue().getObject() != null )
    {
      InWsStudyUnitMkDepartmentCode = ((Short)vdf.getEntries()[70].getDataValue(
        ).getObject()).shortValue();
    }
    else 
    {
      InWsStudyUnitMkDepartmentCode = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[71].getDataValue().getObject() != null )
    {
      InWsStudyUnitEngLongDescription = ((String)vdf.getEntries()[71]
        .getDataValue().getObject());
    }
    else 
    {
      InWsStudyUnitEngLongDescription = 
"                                                                                                                                                                        "
        ;
    }
    // predicate view item
    if ( vdf.getEntries()[72].getDataValue().getObject() != null )
    {
      InWsStudyUnitCollegeFlag = ((String)vdf.getEntries()[72].getDataValue()
        .getObject());
    }
    else 
    {
      InWsStudyUnitCollegeFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[73].getDataValue().getObject() != null )
    {
      InSecurityWsUserNumber = ((Integer)vdf.getEntries()[73].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      InSecurityWsUserNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[74].getDataValue().getObject() != null )
    {
      InSecurityWsUserEMail = ((String)vdf.getEntries()[74].getDataValue()
        .getObject());
    }
    else 
    {
      InSecurityWsUserEMail = 
        "                                                            ";
    }
    // predicate view item
    if ( vdf.getEntries()[75].getDataValue().getObject() != null )
    {
      InSecurityWsUserNovellUserCode = ((String)vdf.getEntries()[75]
        .getDataValue().getObject());
    }
    else 
    {
      InSecurityWsUserNovellUserCode = "                    ";
    }
    // predicate view item
    if ( vdf.getEntries()[76].getDataValue().getObject() != null )
    {
      InSecurityWsPrinterCode = ((String)vdf.getEntries()[76].getDataValue()
        .getObject());
    }
    else 
    {
      InSecurityWsPrinterCode = "          ";
    }
    // predicate view item
    if ( vdf.getEntries()[77].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsClientVersionNumber = ((Short)
        vdf.getEntries()[77].getDataValue().getObject()).shortValue();
    }
    else 
    {
      InCsfClientServerCommunicationsClientVersionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[78].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsClientRevisionNumber = ((Short)
        vdf.getEntries()[78].getDataValue().getObject()).shortValue();
    }
    else 
    {
      InCsfClientServerCommunicationsClientRevisionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[79].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsClientDevelopmentPhase = ((String)
        vdf.getEntries()[79].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsClientDevelopmentPhase = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[80].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsAction = ((String)vdf.getEntries()[80]
        .getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsAction = "  ";
    }
    // predicate view item
    if ( vdf.getEntries()[81].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsClientDate = ((Integer)vdf.getEntries()[81]
        .getDataValue().getObject()).intValue();
    }
    else 
    {
      InCsfClientServerCommunicationsClientDate = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[82].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsClientTime = ((Integer)vdf.getEntries()[82]
        .getDataValue().getObject()).intValue();
    }
    else 
    {
      InCsfClientServerCommunicationsClientTime = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[83].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsClientTimestamp = ((String)vdf.getEntries()
        [83].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsClientTimestamp = "00000000000000000000";
    }
    // predicate view item
    if ( vdf.getEntries()[84].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsClientTransactionCode = ((String)
        vdf.getEntries()[84].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsClientTransactionCode = "        ";
    }
    // predicate view item
    if ( vdf.getEntries()[85].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsClientUserId = ((String)vdf.getEntries()[
        85].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsClientUserId = "        ";
    }
    // predicate view item
    if ( vdf.getEntries()[86].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsClientIsGuiFlag = ((String)vdf.getEntries()
        [86].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsClientIsGuiFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[87].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsListLinkFlag = ((String)vdf.getEntries()[
        87].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsListLinkFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[88].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsMaintLinkFlag = ((String)vdf.getEntries()[
        88].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsMaintLinkFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[89].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsRgvScrollUpFlag = ((String)vdf.getEntries()
        [89].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsRgvScrollUpFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[90].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsRgvScrollDownFlag = ((String)
        vdf.getEntries()[90].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsRgvScrollDownFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[91].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsObjectRetrievedFlag = ((String)
        vdf.getEntries()[91].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsObjectRetrievedFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[92].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsFirstpassFlag = ((String)vdf.getEntries()[
        92].getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsFirstpassFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[93].getDataValue().getObject() != null )
    {
      InWsDepartmentCode = ((Short)vdf.getEntries()[93].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      InWsDepartmentCode = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[94].getDataValue().getObject() != null )
    {
      InWsUnisaCollegeCode = ((Short)vdf.getEntries()[94].getDataValue()
        .getObject()).shortValue();
    }
    else 
    {
      InWsUnisaCollegeCode = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[95].getDataValue().getObject() != null )
    {
      InOnlineOrInternetCsfStringsString1 = ((String)vdf.getEntries()[95]
        .getDataValue().getObject());
    }
    else 
    {
      InOnlineOrInternetCsfStringsString1 = " ";
    }
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((EXPLL01S_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(EXPLL01S_IA orig)
  {
    InExamTypistLogEntryPaperNo_AS = orig.InExamTypistLogEntryPaperNo_AS;
    InExamTypistLogEntryPaperNo = orig.InExamTypistLogEntryPaperNo;
    InWsExpll01QuestPapOption_AS = orig.InWsExpll01QuestPapOption_AS;
    InWsExpll01QuestPapOption = orig.InWsExpll01QuestPapOption;
    InWsExpll01LogisticsOption_AS = orig.InWsExpll01LogisticsOption_AS;
    InWsExpll01LogisticsOption = orig.InWsExpll01LogisticsOption;
    InNrOfCombinedPapersIefSuppliedCount_AS = 
      orig.InNrOfCombinedPapersIefSuppliedCount_AS;
    InNrOfCombinedPapersIefSuppliedCount = 
      orig.InNrOfCombinedPapersIefSuppliedCount;
    InNextExamTypistLogExamYear_AS = orig.InNextExamTypistLogExamYear_AS;
    InNextExamTypistLogExamYear = orig.InNextExamTypistLogExamYear;
    InNextExamTypistLogMkExamPeriodCod_AS = 
      orig.InNextExamTypistLogMkExamPeriodCod_AS;
    InNextExamTypistLogMkExamPeriodCod = 
      orig.InNextExamTypistLogMkExamPeriodCod;
    InPrevExamTypistLogExamYear_AS = orig.InPrevExamTypistLogExamYear_AS;
    InPrevExamTypistLogExamYear = orig.InPrevExamTypistLogExamYear;
    InPrevExamTypistLogMkExamPeriodCod_AS = 
      orig.InPrevExamTypistLogMkExamPeriodCod_AS;
    InPrevExamTypistLogMkExamPeriodCod = 
      orig.InPrevExamTypistLogMkExamPeriodCod;
    InLogEntriesGrp_MA = orig.InLogEntriesGrp_MA;
    for(int a = 0; a < 5; a++)
    {
      InLogEntriesGrp_AC[a] = orig.InLogEntriesGrp_AC[a];
      InGCalcQuantIefSuppliedCount_AS[a] = orig.InGCalcQuantIefSuppliedCount_AS[
        a];
      InGCalcQuantIefSuppliedCount[a] = orig.InGCalcQuantIefSuppliedCount[a];
      InGPaperColourCsfStringsString10_AS[a] = 
        orig.InGPaperColourCsfStringsString10_AS[a];
      InGPaperColourCsfStringsString10[a] = 
        orig.InGPaperColourCsfStringsString10[a];
      InGExamPeriodDateDate_AS[a] = orig.InGExamPeriodDateDate_AS[a];
      InGExamPeriodDateDate[a] = orig.InGExamPeriodDateDate[a];
      InGIefSuppliedCount_AS[a] = orig.InGIefSuppliedCount_AS[a];
      InGIefSuppliedCount[a] = orig.InGIefSuppliedCount[a];
      InGIefSuppliedCommand_AS[a] = orig.InGIefSuppliedCommand_AS[a];
      InGIefSuppliedCommand[a] = orig.InGIefSuppliedCommand[a];
      InGIefSuppliedSelectChar_AS[a] = orig.InGIefSuppliedSelectChar_AS[a];
      InGIefSuppliedSelectChar[a] = orig.InGIefSuppliedSelectChar[a];
      InGExamTypistLogEntryPaperNo_AS[a] = orig.InGExamTypistLogEntryPaperNo_AS[
        a];
      InGExamTypistLogEntryPaperNo[a] = orig.InGExamTypistLogEntryPaperNo[a];
      InGExamTypistLogEntryTypist_AS[a] = orig.InGExamTypistLogEntryTypist_AS[a]
        ;
      InGExamTypistLogEntryTypist[a] = orig.InGExamTypistLogEntryTypist[a];
      InGExamTypistLogEntryPaperFormat_AS[a] = 
        orig.InGExamTypistLogEntryPaperFormat_AS[a];
      InGExamTypistLogEntryPaperFormat[a] = 
        orig.InGExamTypistLogEntryPaperFormat[a];
      InGExamTypistLogEntryDateReceived_AS[a] = 
        orig.InGExamTypistLogEntryDateReceived_AS[a];
      InGExamTypistLogEntryDateReceived[a] = 
        orig.InGExamTypistLogEntryDateReceived[a];
      InGExamTypistLogEntryDateProof1_AS[a] = 
        orig.InGExamTypistLogEntryDateProof1_AS[a];
      InGExamTypistLogEntryDateProof1[a] = orig.InGExamTypistLogEntryDateProof1[
        a];
      InGExamTypistLogEntryDateProof2_AS[a] = 
        orig.InGExamTypistLogEntryDateProof2_AS[a];
      InGExamTypistLogEntryDateProof2[a] = orig.InGExamTypistLogEntryDateProof2[
        a];
      InGExamTypistLogEntryDateProof3_AS[a] = 
        orig.InGExamTypistLogEntryDateProof3_AS[a];
      InGExamTypistLogEntryDateProof3[a] = orig.InGExamTypistLogEntryDateProof3[
        a];
      InGExamTypistLogEntryDateToPrint_AS[a] = 
        orig.InGExamTypistLogEntryDateToPrint_AS[a];
      InGExamTypistLogEntryDateToPrint[a] = 
        orig.InGExamTypistLogEntryDateToPrint[a];
      InGExamTypistLogEntryCpfReportPrinted_AS[a] = 
        orig.InGExamTypistLogEntryCpfReportPrinted_AS[a];
      InGExamTypistLogEntryCpfReportPrinted[a] = 
        orig.InGExamTypistLogEntryCpfReportPrinted[a];
      InGExamTypistLogEntryDateInSafe_AS[a] = 
        orig.InGExamTypistLogEntryDateInSafe_AS[a];
      InGExamTypistLogEntryDateInSafe[a] = orig.InGExamTypistLogEntryDateInSafe[
        a];
      InGExamTypistLogEntryDateToDept_AS[a] = 
        orig.InGExamTypistLogEntryDateToDept_AS[a];
      InGExamTypistLogEntryDateToDept[a] = orig.InGExamTypistLogEntryDateToDept[
        a];
      InGExamTypistLogEntryDateFromDept_AS[a] = 
        orig.InGExamTypistLogEntryDateFromDept_AS[a];
      InGExamTypistLogEntryDateFromDept[a] = 
        orig.InGExamTypistLogEntryDateFromDept[a];
      InGExamTypistLogEntryDate2ToPrint_AS[a] = 
        orig.InGExamTypistLogEntryDate2ToPrint_AS[a];
      InGExamTypistLogEntryDate2ToPrint[a] = 
        orig.InGExamTypistLogEntryDate2ToPrint[a];
      InGExamTypistLogEntryDate2FromPrint_AS[a] = 
        orig.InGExamTypistLogEntryDate2FromPrint_AS[a];
      InGExamTypistLogEntryDate2FromPrint[a] = 
        orig.InGExamTypistLogEntryDate2FromPrint[a];
      InGExamTypistLogEntryDate3ToPrint_AS[a] = 
        orig.InGExamTypistLogEntryDate3ToPrint_AS[a];
      InGExamTypistLogEntryDate3ToPrint[a] = 
        orig.InGExamTypistLogEntryDate3ToPrint[a];
      InGExamTypistLogEntryDate3FromPrint_AS[a] = 
        orig.InGExamTypistLogEntryDate3FromPrint_AS[a];
      InGExamTypistLogEntryDate3FromPrint[a] = 
        orig.InGExamTypistLogEntryDate3FromPrint[a];
      InGExamTypistLogEntryQuant3ToPrint_AS[a] = 
        orig.InGExamTypistLogEntryQuant3ToPrint_AS[a];
      InGExamTypistLogEntryQuant3ToPrint[a] = 
        orig.InGExamTypistLogEntryQuant3ToPrint[a];
      InGExamTypistLogEntryQuantToPrint_AS[a] = 
        orig.InGExamTypistLogEntryQuantToPrint_AS[a];
      InGExamTypistLogEntryQuantToPrint[a] = 
        orig.InGExamTypistLogEntryQuantToPrint[a];
      InGExamTypistLogEntryQuantCalcedOn_AS[a] = 
        orig.InGExamTypistLogEntryQuantCalcedOn_AS[a];
      InGExamTypistLogEntryQuantCalcedOn[a] = 
        orig.InGExamTypistLogEntryQuantCalcedOn[a];
      InGExamTypistLogEntryQuant2ToPrint_AS[a] = 
        orig.InGExamTypistLogEntryQuant2ToPrint_AS[a];
      InGExamTypistLogEntryQuant2ToPrint[a] = 
        orig.InGExamTypistLogEntryQuant2ToPrint[a];
      InGExamTypistLogEntryQuant2CalcedOn_AS[a] = 
        orig.InGExamTypistLogEntryQuant2CalcedOn_AS[a];
      InGExamTypistLogEntryQuant2CalcedOn[a] = 
        orig.InGExamTypistLogEntryQuant2CalcedOn[a];
      InGExamTypistLogEntrySurplusQuant_AS[a] = 
        orig.InGExamTypistLogEntrySurplusQuant_AS[a];
      InGExamTypistLogEntrySurplusQuant[a] = 
        orig.InGExamTypistLogEntrySurplusQuant[a];
      InGExamTypistLogEntryDateScanned_AS[a] = 
        orig.InGExamTypistLogEntryDateScanned_AS[a];
      InGExamTypistLogEntryDateScanned[a] = 
        orig.InGExamTypistLogEntryDateScanned[a];
      InGExamTypistLogEntryDateAfrScanned_AS[a] = 
        orig.InGExamTypistLogEntryDateAfrScanned_AS[a];
      InGExamTypistLogEntryDateAfrScanned[a] = 
        orig.InGExamTypistLogEntryDateAfrScanned[a];
      InGExamTypistLogEntryOpenForWeb_AS[a] = 
        orig.InGExamTypistLogEntryOpenForWeb_AS[a];
      InGExamTypistLogEntryOpenForWeb[a] = orig.InGExamTypistLogEntryOpenForWeb[
        a];
      InGExamTypistLogEntryDocketChanges_AS[a] = 
        orig.InGExamTypistLogEntryDocketChanges_AS[a];
      InGExamTypistLogEntryDocketChanges[a] = 
        orig.InGExamTypistLogEntryDocketChanges[a];
      InGExamTypistLogEntryPaperChanges_AS[a] = 
        orig.InGExamTypistLogEntryPaperChanges_AS[a];
      InGExamTypistLogEntryPaperChanges[a] = 
        orig.InGExamTypistLogEntryPaperChanges[a];
      InGExamTypistLogEntryElectronicPaper_AS[a] = 
        orig.InGExamTypistLogEntryElectronicPaper_AS[a];
      InGExamTypistLogEntryElectronicPaper[a] = 
        orig.InGExamTypistLogEntryElectronicPaper[a];
      InGMyunisaWsRegistrationDatesFromDate_AS[a] = 
        orig.InGMyunisaWsRegistrationDatesFromDate_AS[a];
      InGMyunisaWsRegistrationDatesFromDate[a] = 
        orig.InGMyunisaWsRegistrationDatesFromDate[a];
      InGEngPaperCsfStringsString1_AS[a] = orig.InGEngPaperCsfStringsString1_AS[
        a];
      InGEngPaperCsfStringsString1[a] = orig.InGEngPaperCsfStringsString1[a];
      InGAfrPaperCsfStringsString1_AS[a] = orig.InGAfrPaperCsfStringsString1_AS[
        a];
      InGAfrPaperCsfStringsString1[a] = orig.InGAfrPaperCsfStringsString1[a];
    }
    InSearchCriteriaExamTypistLogExamYear_AS = 
      orig.InSearchCriteriaExamTypistLogExamYear_AS;
    InSearchCriteriaExamTypistLogExamYear = 
      orig.InSearchCriteriaExamTypistLogExamYear;
    InSearchCriteriaExamTypistLogMkExamPeriodCod_AS = 
      orig.InSearchCriteriaExamTypistLogMkExamPeriodCod_AS;
    InSearchCriteriaExamTypistLogMkExamPeriodCod = 
      orig.InSearchCriteriaExamTypistLogMkExamPeriodCod;
    InSearchCriteriaExamTypistLogMkStudyUnitCode_AS = 
      orig.InSearchCriteriaExamTypistLogMkStudyUnitCode_AS;
    InSearchCriteriaExamTypistLogMkStudyUnitCode = 
      orig.InSearchCriteriaExamTypistLogMkStudyUnitCode;
    InKeyExamTypistLogExamYear_AS = orig.InKeyExamTypistLogExamYear_AS;
    InKeyExamTypistLogExamYear = orig.InKeyExamTypistLogExamYear;
    InKeyExamTypistLogMkExamPeriodCod_AS = 
      orig.InKeyExamTypistLogMkExamPeriodCod_AS;
    InKeyExamTypistLogMkExamPeriodCod = orig.InKeyExamTypistLogMkExamPeriodCod;
    InKeyExamTypistLogMkStudyUnitCode_AS = 
      orig.InKeyExamTypistLogMkStudyUnitCode_AS;
    InKeyExamTypistLogMkStudyUnitCode = orig.InKeyExamTypistLogMkStudyUnitCode;
    InKeyExamTypistLogCombinedWith_AS = orig.InKeyExamTypistLogCombinedWith_AS;
    InKeyExamTypistLogCombinedWith = orig.InKeyExamTypistLogCombinedWith;
    InKeyExamTypistLogRemarks_AS = orig.InKeyExamTypistLogRemarks_AS;
    InKeyExamTypistLogRemarks = orig.InKeyExamTypistLogRemarks;
    InKeyExamTypistLogRemarks2_AS = orig.InKeyExamTypistLogRemarks2_AS;
    InKeyExamTypistLogRemarks2 = orig.InKeyExamTypistLogRemarks2;
    InKeyExamTypistLogRemarks3_AS = orig.InKeyExamTypistLogRemarks3_AS;
    InKeyExamTypistLogRemarks3 = orig.InKeyExamTypistLogRemarks3;
    InKeyExamTypistLogRemarks4_AS = orig.InKeyExamTypistLogRemarks4_AS;
    InKeyExamTypistLogRemarks4 = orig.InKeyExamTypistLogRemarks4;
    InKeyExamTypistLogRemarks5_AS = orig.InKeyExamTypistLogRemarks5_AS;
    InKeyExamTypistLogRemarks5 = orig.InKeyExamTypistLogRemarks5;
    InKeyExamTypistLogRemarks6_AS = orig.InKeyExamTypistLogRemarks6_AS;
    InKeyExamTypistLogRemarks6 = orig.InKeyExamTypistLogRemarks6;
    InKeyExamTypistLogPaperExpected_AS = 
      orig.InKeyExamTypistLogPaperExpected_AS;
    InKeyExamTypistLogPaperExpected = orig.InKeyExamTypistLogPaperExpected;
    InReportDateExamTypistLogEntryDateToPrint_AS = 
      orig.InReportDateExamTypistLogEntryDateToPrint_AS;
    InReportDateExamTypistLogEntryDateToPrint = 
      orig.InReportDateExamTypistLogEntryDateToPrint;
    InReportWizfuncReportingControlPathAndFilename_AS = 
      orig.InReportWizfuncReportingControlPathAndFilename_AS;
    InReportWizfuncReportingControlPathAndFilename = 
      orig.InReportWizfuncReportingControlPathAndFilename;
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod_AS = 
      orig.InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod_AS;
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod = 
      orig.InOutstExamPapersWsStudyUnitPeriodDetailMkExamPeriod;
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear_AS = 
      orig.InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear_AS;
    InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear = 
      orig.InOutstExamPapersWsStudyUnitPeriodDetailMkExamYear;
    InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear_AS = 
      orig.InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear_AS;
    InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear = 
      orig.InOutstExamPapersWsStudyUnitPeriodDetailMkAcademicYear;
    InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod_AS = 
      orig.InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod_AS;
    InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod = 
      orig.InOutstExamPapersWsStudyUnitPeriodDetailSemesterPeriod;
    InScCpfAccessIefSuppliedFlag_AS = orig.InScCpfAccessIefSuppliedFlag_AS;
    InScCpfAccessIefSuppliedFlag = orig.InScCpfAccessIefSuppliedFlag;
    InScTypAccessIefSuppliedFlag_AS = orig.InScTypAccessIefSuppliedFlag_AS;
    InScTypAccessIefSuppliedFlag = orig.InScTypAccessIefSuppliedFlag;
    InWsFunctionNumber_AS = orig.InWsFunctionNumber_AS;
    InWsFunctionNumber = orig.InWsFunctionNumber;
    InWsStudyUnitMkDepartmentCode_AS = orig.InWsStudyUnitMkDepartmentCode_AS;
    InWsStudyUnitMkDepartmentCode = orig.InWsStudyUnitMkDepartmentCode;
    InWsStudyUnitEngLongDescription_AS = 
      orig.InWsStudyUnitEngLongDescription_AS;
    InWsStudyUnitEngLongDescription = orig.InWsStudyUnitEngLongDescription;
    InWsStudyUnitCollegeFlag_AS = orig.InWsStudyUnitCollegeFlag_AS;
    InWsStudyUnitCollegeFlag = orig.InWsStudyUnitCollegeFlag;
    InSecurityWsUserNumber_AS = orig.InSecurityWsUserNumber_AS;
    InSecurityWsUserNumber = orig.InSecurityWsUserNumber;
    InSecurityWsUserEMail_AS = orig.InSecurityWsUserEMail_AS;
    InSecurityWsUserEMail = orig.InSecurityWsUserEMail;
    InSecurityWsUserNovellUserCode_AS = orig.InSecurityWsUserNovellUserCode_AS;
    InSecurityWsUserNovellUserCode = orig.InSecurityWsUserNovellUserCode;
    InSecurityWsPrinterCode_AS = orig.InSecurityWsPrinterCode_AS;
    InSecurityWsPrinterCode = orig.InSecurityWsPrinterCode;
    InCsfClientServerCommunicationsClientVersionNumber_AS = 
      orig.InCsfClientServerCommunicationsClientVersionNumber_AS;
    InCsfClientServerCommunicationsClientVersionNumber = 
      orig.InCsfClientServerCommunicationsClientVersionNumber;
    InCsfClientServerCommunicationsClientRevisionNumber_AS = 
      orig.InCsfClientServerCommunicationsClientRevisionNumber_AS;
    InCsfClientServerCommunicationsClientRevisionNumber = 
      orig.InCsfClientServerCommunicationsClientRevisionNumber;
    InCsfClientServerCommunicationsClientDevelopmentPhase_AS = 
      orig.InCsfClientServerCommunicationsClientDevelopmentPhase_AS;
    InCsfClientServerCommunicationsClientDevelopmentPhase = 
      orig.InCsfClientServerCommunicationsClientDevelopmentPhase;
    InCsfClientServerCommunicationsAction_AS = 
      orig.InCsfClientServerCommunicationsAction_AS;
    InCsfClientServerCommunicationsAction = 
      orig.InCsfClientServerCommunicationsAction;
    InCsfClientServerCommunicationsClientDate_AS = 
      orig.InCsfClientServerCommunicationsClientDate_AS;
    InCsfClientServerCommunicationsClientDate = 
      orig.InCsfClientServerCommunicationsClientDate;
    InCsfClientServerCommunicationsClientTime_AS = 
      orig.InCsfClientServerCommunicationsClientTime_AS;
    InCsfClientServerCommunicationsClientTime = 
      orig.InCsfClientServerCommunicationsClientTime;
    InCsfClientServerCommunicationsClientTimestamp_AS = 
      orig.InCsfClientServerCommunicationsClientTimestamp_AS;
    InCsfClientServerCommunicationsClientTimestamp = 
      orig.InCsfClientServerCommunicationsClientTimestamp;
    InCsfClientServerCommunicationsClientTransactionCode_AS = 
      orig.InCsfClientServerCommunicationsClientTransactionCode_AS;
    InCsfClientServerCommunicationsClientTransactionCode = 
      orig.InCsfClientServerCommunicationsClientTransactionCode;
    InCsfClientServerCommunicationsClientUserId_AS = 
      orig.InCsfClientServerCommunicationsClientUserId_AS;
    InCsfClientServerCommunicationsClientUserId = 
      orig.InCsfClientServerCommunicationsClientUserId;
    InCsfClientServerCommunicationsClientIsGuiFlag_AS = 
      orig.InCsfClientServerCommunicationsClientIsGuiFlag_AS;
    InCsfClientServerCommunicationsClientIsGuiFlag = 
      orig.InCsfClientServerCommunicationsClientIsGuiFlag;
    InCsfClientServerCommunicationsListLinkFlag_AS = 
      orig.InCsfClientServerCommunicationsListLinkFlag_AS;
    InCsfClientServerCommunicationsListLinkFlag = 
      orig.InCsfClientServerCommunicationsListLinkFlag;
    InCsfClientServerCommunicationsMaintLinkFlag_AS = 
      orig.InCsfClientServerCommunicationsMaintLinkFlag_AS;
    InCsfClientServerCommunicationsMaintLinkFlag = 
      orig.InCsfClientServerCommunicationsMaintLinkFlag;
    InCsfClientServerCommunicationsRgvScrollUpFlag_AS = 
      orig.InCsfClientServerCommunicationsRgvScrollUpFlag_AS;
    InCsfClientServerCommunicationsRgvScrollUpFlag = 
      orig.InCsfClientServerCommunicationsRgvScrollUpFlag;
    InCsfClientServerCommunicationsRgvScrollDownFlag_AS = 
      orig.InCsfClientServerCommunicationsRgvScrollDownFlag_AS;
    InCsfClientServerCommunicationsRgvScrollDownFlag = 
      orig.InCsfClientServerCommunicationsRgvScrollDownFlag;
    InCsfClientServerCommunicationsObjectRetrievedFlag_AS = 
      orig.InCsfClientServerCommunicationsObjectRetrievedFlag_AS;
    InCsfClientServerCommunicationsObjectRetrievedFlag = 
      orig.InCsfClientServerCommunicationsObjectRetrievedFlag;
    InCsfClientServerCommunicationsFirstpassFlag_AS = 
      orig.InCsfClientServerCommunicationsFirstpassFlag_AS;
    InCsfClientServerCommunicationsFirstpassFlag = 
      orig.InCsfClientServerCommunicationsFirstpassFlag;
    InWsDepartmentCode_AS = orig.InWsDepartmentCode_AS;
    InWsDepartmentCode = orig.InWsDepartmentCode;
    InWsUnisaCollegeCode_AS = orig.InWsUnisaCollegeCode_AS;
    InWsUnisaCollegeCode = orig.InWsUnisaCollegeCode;
    InOnlineOrInternetCsfStringsString1_AS = 
      orig.InOnlineOrInternetCsfStringsString1_AS;
    InOnlineOrInternetCsfStringsString1 = 
      orig.InOnlineOrInternetCsfStringsString1;
  }
}
