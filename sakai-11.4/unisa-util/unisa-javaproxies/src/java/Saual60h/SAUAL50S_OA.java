package Saual60h;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                            CA Gen r8
//
//           Copyright (c) 2012 CA. All rights reserved.
//
//    Name: SAUAL50S_OA                      Date: 2012/05/15
//    User: Tanderw                          Time: 13:49:48
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen80.vwrt.*;
import com.ca.gen80.vwrt.types.*;
import com.ca.gen80.vwrt.vdf.*;
import com.ca.gen80.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: SAUAL50S_OA
 **/
public class SAUAL50S_OA extends ViewBase implements IExportView, Serializable
{
  static VDF localVdf = null;
  
  // Repeating GV:  OUT_UNQASS_GRP
  //     Repeats: 100 times
  /**
   * Repeating group view count
   **/
  public int OutUnqassGrp_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char OutUnqassGrp_AC[] = new char[100];
  // Entity View: OUT_G
  //        Type: UNIQUE_ASSIGNMENT
  /**
   * Attribute missing flag for: OutGUniqueAssignmentYear
   **/
  public char OutGUniqueAssignmentYear_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentYear
   **/
  public DynamicAttr OutGUniqueAssignmentYear_AT[] = new DynamicAttr[100];
  /**
   * Attribute for: OutGUniqueAssignmentYear
   **/
  public short OutGUniqueAssignmentYear[] = new short[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentPeriod
   **/
  public char OutGUniqueAssignmentPeriod_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentPeriod
   **/
  public DynamicAttr OutGUniqueAssignmentPeriod_AT[] = new DynamicAttr[100];
  /**
   * Attribute for: OutGUniqueAssignmentPeriod
   **/
  public short OutGUniqueAssignmentPeriod[] = new short[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentUniqueNr
   **/
  public char OutGUniqueAssignmentUniqueNr_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentUniqueNr
   **/
  public DynamicAttr OutGUniqueAssignmentUniqueNr_AT[] = new DynamicAttr[100];
  /**
   * Attribute for: OutGUniqueAssignmentUniqueNr
   **/
  public int OutGUniqueAssignmentUniqueNr[] = new int[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentMkStudyUnitCode
   **/
  public char OutGUniqueAssignmentMkStudyUnitCode_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentMkStudyUnitCode
   **/
  public DynamicAttr OutGUniqueAssignmentMkStudyUnitCode_AT[] = new DynamicAttr[
    100];
  /**
   * Attribute for: OutGUniqueAssignmentMkStudyUnitCode
   **/
  public String OutGUniqueAssignmentMkStudyUnitCode[] = new String[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentAssignmentNr
   **/
  public char OutGUniqueAssignmentAssignmentNr_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentAssignmentNr
   **/
  public DynamicAttr OutGUniqueAssignmentAssignmentNr_AT[] = new DynamicAttr[
    100];
  /**
   * Attribute for: OutGUniqueAssignmentAssignmentNr
   **/
  public short OutGUniqueAssignmentAssignmentNr[] = new short[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentNrOfQuestions
   **/
  public char OutGUniqueAssignmentNrOfQuestions_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentNrOfQuestions
   **/
  public DynamicAttr OutGUniqueAssignmentNrOfQuestions_AT[] = new DynamicAttr[
    100];
  /**
   * Attribute for: OutGUniqueAssignmentNrOfQuestions
   **/
  public short OutGUniqueAssignmentNrOfQuestions[] = new short[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentType
   **/
  public char OutGUniqueAssignmentType_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentType
   **/
  public DynamicAttr OutGUniqueAssignmentType_AT[] = new DynamicAttr[100];
  /**
   * Attribute for: OutGUniqueAssignmentType
   **/
  public String OutGUniqueAssignmentType[] = new String[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentNegativeMarkFactor
   **/
  public char OutGUniqueAssignmentNegativeMarkFactor_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentNegativeMarkFactor
   **/
  public DynamicAttr OutGUniqueAssignmentNegativeMarkFactor_AT[] = new 
    DynamicAttr[100];
  /**
   * Attribute for: OutGUniqueAssignmentNegativeMarkFactor
   **/
  public short OutGUniqueAssignmentNegativeMarkFactor[] = new short[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentMaxCredits
   **/
  public char OutGUniqueAssignmentMaxCredits_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentMaxCredits
   **/
  public DynamicAttr OutGUniqueAssignmentMaxCredits_AT[] = new DynamicAttr[100]
    ;
  /**
   * Attribute for: OutGUniqueAssignmentMaxCredits
   **/
  public short OutGUniqueAssignmentMaxCredits[] = new short[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentCreditSystem
   **/
  public char OutGUniqueAssignmentCreditSystem_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentCreditSystem
   **/
  public DynamicAttr OutGUniqueAssignmentCreditSystem_AT[] = new DynamicAttr[
    100];
  /**
   * Attribute for: OutGUniqueAssignmentCreditSystem
   **/
  public short OutGUniqueAssignmentCreditSystem[] = new short[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentPassMarkPercentage
   **/
  public char OutGUniqueAssignmentPassMarkPercentage_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentPassMarkPercentage
   **/
  public DynamicAttr OutGUniqueAssignmentPassMarkPercentage_AT[] = new 
    DynamicAttr[100];
  /**
   * Attribute for: OutGUniqueAssignmentPassMarkPercentage
   **/
  public short OutGUniqueAssignmentPassMarkPercentage[] = new short[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentClosingDate
   **/
  public char OutGUniqueAssignmentClosingDate_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentClosingDate
   **/
  public DynamicAttr OutGUniqueAssignmentClosingDate_AT[] = new DynamicAttr[100]
    ;
  /**
   * Attribute for: OutGUniqueAssignmentClosingDate
   **/
  public int OutGUniqueAssignmentClosingDate[] = new int[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentCompulsory
   **/
  public char OutGUniqueAssignmentCompulsory_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentCompulsory
   **/
  public DynamicAttr OutGUniqueAssignmentCompulsory_AT[] = new DynamicAttr[100]
    ;
  /**
   * Attribute for: OutGUniqueAssignmentCompulsory
   **/
  public String OutGUniqueAssignmentCompulsory[] = new String[100];
  /**
   * Attribute missing flag for: OutGUniqueAssignmentTsaUniqueNr
   **/
  public char OutGUniqueAssignmentTsaUniqueNr_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGUniqueAssignmentTsaUniqueNr
   **/
  public DynamicAttr OutGUniqueAssignmentTsaUniqueNr_AT[] = new DynamicAttr[100]
    ;
  /**
   * Attribute for: OutGUniqueAssignmentTsaUniqueNr
   **/
  public int OutGUniqueAssignmentTsaUniqueNr[] = new int[100];
  // Entity View: OUT_G
  //        Type: YEAR_MARK_CALCULATION
  /**
   * Attribute missing flag for: OutGYearMarkCalculationType
   **/
  public char OutGYearMarkCalculationType_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGYearMarkCalculationType
   **/
  public DynamicAttr OutGYearMarkCalculationType_AT[] = new DynamicAttr[100];
  /**
   * Attribute for: OutGYearMarkCalculationType
   **/
  public String OutGYearMarkCalculationType[] = new String[100];
  /**
   * Attribute missing flag for: OutGYearMarkCalculationNormalWeight
   **/
  public char OutGYearMarkCalculationNormalWeight_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGYearMarkCalculationNormalWeight
   **/
  public DynamicAttr OutGYearMarkCalculationNormalWeight_AT[] = new DynamicAttr[
    100];
  /**
   * Attribute for: OutGYearMarkCalculationNormalWeight
   **/
  public double OutGYearMarkCalculationNormalWeight[] = new double[100];
  /**
   * Attribute missing flag for: OutGYearMarkCalculationOptionalityGc3
   **/
  public char OutGYearMarkCalculationOptionalityGc3_AS[] = new char[100];
  /**
   * Dynamic attribute for: OutGYearMarkCalculationOptionalityGc3
   **/
  public DynamicAttr OutGYearMarkCalculationOptionalityGc3_AT[] = new 
    DynamicAttr[100];
  /**
   * Attribute for: OutGYearMarkCalculationOptionalityGc3
   **/
  public String OutGYearMarkCalculationOptionalityGc3[] = new String[100];
  /**
   * Default Constructor
   **/
  
  public SAUAL50S_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public SAUAL50S_OA(SAUAL50S_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static SAUAL50S_OA getInstance()
  {
    return new SAUAL50S_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new SAUAL50S_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    OutUnqassGrp_MA = 0;
    for(int a = 0; a < 100; a++)
    {
      OutUnqassGrp_AC[a] = ' ';
      OutGUniqueAssignmentYear_AT[a] = null;
      OutGUniqueAssignmentYear_AS[a] = ' ';
      OutGUniqueAssignmentYear[a] = 0;
      OutGUniqueAssignmentPeriod_AT[a] = null;
      OutGUniqueAssignmentPeriod_AS[a] = ' ';
      OutGUniqueAssignmentPeriod[a] = 0;
      OutGUniqueAssignmentUniqueNr_AT[a] = null;
      OutGUniqueAssignmentUniqueNr_AS[a] = ' ';
      OutGUniqueAssignmentUniqueNr[a] = 0;
      OutGUniqueAssignmentMkStudyUnitCode_AT[a] = null;
      OutGUniqueAssignmentMkStudyUnitCode_AS[a] = ' ';
      OutGUniqueAssignmentMkStudyUnitCode[a] = "       ";
      OutGUniqueAssignmentAssignmentNr_AT[a] = null;
      OutGUniqueAssignmentAssignmentNr_AS[a] = ' ';
      OutGUniqueAssignmentAssignmentNr[a] = 0;
      OutGUniqueAssignmentNrOfQuestions_AT[a] = null;
      OutGUniqueAssignmentNrOfQuestions_AS[a] = ' ';
      OutGUniqueAssignmentNrOfQuestions[a] = 0;
      OutGUniqueAssignmentType_AT[a] = null;
      OutGUniqueAssignmentType_AS[a] = ' ';
      OutGUniqueAssignmentType[a] = " ";
      OutGUniqueAssignmentNegativeMarkFactor_AT[a] = null;
      OutGUniqueAssignmentNegativeMarkFactor_AS[a] = ' ';
      OutGUniqueAssignmentNegativeMarkFactor[a] = 0;
      OutGUniqueAssignmentMaxCredits_AT[a] = null;
      OutGUniqueAssignmentMaxCredits_AS[a] = ' ';
      OutGUniqueAssignmentMaxCredits[a] = 0;
      OutGUniqueAssignmentCreditSystem_AT[a] = null;
      OutGUniqueAssignmentCreditSystem_AS[a] = ' ';
      OutGUniqueAssignmentCreditSystem[a] = 0;
      OutGUniqueAssignmentPassMarkPercentage_AT[a] = null;
      OutGUniqueAssignmentPassMarkPercentage_AS[a] = ' ';
      OutGUniqueAssignmentPassMarkPercentage[a] = 0;
      OutGUniqueAssignmentClosingDate_AT[a] = null;
      OutGUniqueAssignmentClosingDate_AS[a] = ' ';
      OutGUniqueAssignmentClosingDate[a] = 00000000;
      OutGUniqueAssignmentCompulsory_AT[a] = null;
      OutGUniqueAssignmentCompulsory_AS[a] = ' ';
      OutGUniqueAssignmentCompulsory[a] = " ";
      OutGUniqueAssignmentTsaUniqueNr_AT[a] = null;
      OutGUniqueAssignmentTsaUniqueNr_AS[a] = ' ';
      OutGUniqueAssignmentTsaUniqueNr[a] = 0;
      OutGYearMarkCalculationType_AT[a] = null;
      OutGYearMarkCalculationType_AS[a] = ' ';
      OutGYearMarkCalculationType[a] = " ";
      OutGYearMarkCalculationNormalWeight_AT[a] = null;
      OutGYearMarkCalculationNormalWeight_AS[a] = ' ';
      OutGYearMarkCalculationNormalWeight[a] = 0.0;
      OutGYearMarkCalculationOptionalityGc3_AT[a] = null;
      OutGYearMarkCalculationOptionalityGc3_AS[a] = ' ';
      OutGYearMarkCalculationOptionalityGc3[a] = "";
    }
  }
  /**
   * Gets the VDF array for the instance, initialized.
   **/
  
  public static VDF getViewDefinition()
  {
    if ( localVdf == null )
    {
      VDFEntry [] vdfEntries = {
        new VDFEntry((int)1, "OutUnqassGrp", "", "", "MA", VDFEntry.TYPE_INT, (
          short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)2, "OutUnqassGrp", "", "", "AC", VDFEntry.TYPE_CHAR, (
          short)100, (short)0, 1, (short)0, null), 
        new VDFEntry((int)3, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "Year", VDFEntry.TYPE_SHORT, (short)100, (short)0,
           2, (short)0, null), 
        new VDFEntry((int)4, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "Period", VDFEntry.TYPE_SHORT, (short)100, (short)
          0, 2, (short)0, null), 
        new VDFEntry((int)5, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "UniqueNr", VDFEntry.TYPE_INT, (short)100, (short)
          0, 8, (short)0, null), 
        new VDFEntry((int)6, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "MkStudyUnitCode", VDFEntry.TYPE_STRING, (short)
          100, (short)0, 7, (short)0, null), 
        new VDFEntry((int)7, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "AssignmentNr", VDFEntry.TYPE_SHORT, (short)100, (
          short)0, 2, (short)0, null), 
        new VDFEntry((int)8, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "NrOfQuestions", VDFEntry.TYPE_SHORT, (short)100, 
          (short)0, 2, (short)0, null), 
        new VDFEntry((int)9, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "Type", VDFEntry.TYPE_STRING, (short)100, (short)
          0, 1, (short)0, null), 
        new VDFEntry((int)10, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "NegativeMarkFactor", VDFEntry.TYPE_SHORT, (short)
          100, (short)0, 2, (short)0, null), 
        new VDFEntry((int)11, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "MaxCredits", VDFEntry.TYPE_SHORT, (short)100, (
          short)0, 2, (short)0, null), 
        new VDFEntry((int)12, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "CreditSystem", VDFEntry.TYPE_SHORT, (short)100, (
          short)0, 2, (short)0, null), 
        new VDFEntry((int)13, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "PassMarkPercentage", VDFEntry.TYPE_SHORT, (short)
          100, (short)0, 2, (short)0, null), 
        new VDFEntry((int)14, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "ClosingDate", VDFEntry.TYPE_DATE, (short)100, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)15, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "Compulsory", VDFEntry.TYPE_STRING, (short)100, (
          short)0, 1, (short)0, null), 
        new VDFEntry((int)16, "OutUnqassGrp", "OutGUniqueAssignment", 
          "UniqueAssignment", "TsaUniqueNr", VDFEntry.TYPE_INT, (short)100, (
          short)0, 8, (short)0, null), 
        new VDFEntry((int)17, "OutUnqassGrp", "OutGYearMarkCalculation", 
          "YearMarkCalculation", "Type", VDFEntry.TYPE_STRING, (short)100, (
          short)0, 1, (short)0, null), 
        new VDFEntry((int)18, "OutUnqassGrp", "OutGYearMarkCalculation", 
          "YearMarkCalculation", "NormalWeight", VDFEntry.TYPE_DOUBLE, (short)
          100, (short)0, 6, (short)2, null), 
        new VDFEntry((int)19, "OutUnqassGrp", "OutGYearMarkCalculation", 
          "YearMarkCalculation", "OptionalityGc3", VDFEntry.TYPE_STRING, (short)
          100, (short)0, 1, (short)0, null), 
      };
      localVdf = new VDF(vdfEntries);
    }
    try {
      VDF result = (VDF)localVdf.clone();
      result.initViewData();
      return result;
    } catch( CloneNotSupportedException e ) {
      return null;
    }
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    // group view current cardinality
    if ( vdf.getEntries()[0].getDataValue().getObject() != null )
    {
      OutUnqassGrp_MA = ((Integer)vdf.getEntries()[0].getDataValue().getObject()
        ).intValue();
    }
    else 
    {
      OutUnqassGrp_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[1].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutUnqassGrp_AC[adim0] = ((Character)((VDFEntryObject [])vdf.getEntries(
          )[1].getDataValue().getObject())[adim0].getObject()).charValue();
      }
      else 
      {
        OutUnqassGrp_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[2].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentYear[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[2].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGUniqueAssignmentYear[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[3].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentPeriod[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[3].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGUniqueAssignmentPeriod[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[4].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentUniqueNr[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[4].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGUniqueAssignmentUniqueNr[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[5].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentMkStudyUnitCode[adim0] = ((String)((VDFEntryObject [
          ])vdf.getEntries()[5].getDataValue().getObject())[adim0].getObject())
          ;
      }
      else 
      {
        OutGUniqueAssignmentMkStudyUnitCode[adim0] = "       ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[6].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentAssignmentNr[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[6].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGUniqueAssignmentAssignmentNr[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[7].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentNrOfQuestions[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[7].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGUniqueAssignmentNrOfQuestions[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[8].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentType[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[8].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGUniqueAssignmentType[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[9].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentNegativeMarkFactor[adim0] = ((Short)((
          VDFEntryObject [])vdf.getEntries()[9].getDataValue().getObject())[
          adim0].getObject()).shortValue();
      }
      else 
      {
        OutGUniqueAssignmentNegativeMarkFactor[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[10].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentMaxCredits[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[10].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGUniqueAssignmentMaxCredits[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[11].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentCreditSystem[adim0] = ((Short)((VDFEntryObject [])
          vdf.getEntries()[11].getDataValue().getObject())[adim0].getObject())
          .shortValue();
      }
      else 
      {
        OutGUniqueAssignmentCreditSystem[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[12].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentPassMarkPercentage[adim0] = ((Short)((
          VDFEntryObject [])vdf.getEntries()[12].getDataValue().getObject())[
          adim0].getObject()).shortValue();
      }
      else 
      {
        OutGUniqueAssignmentPassMarkPercentage[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[13].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentClosingDate[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[13].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGUniqueAssignmentClosingDate[adim0] = 00000000;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[14].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentCompulsory[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[14].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGUniqueAssignmentCompulsory[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[15].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGUniqueAssignmentTsaUniqueNr[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[15].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        OutGUniqueAssignmentTsaUniqueNr[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[16].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGYearMarkCalculationType[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[16].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        OutGYearMarkCalculationType[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[17].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGYearMarkCalculationNormalWeight[adim0] = ((Double)((VDFEntryObject [
          ])vdf.getEntries()[17].getDataValue().getObject())[adim0].getObject())
          .doubleValue();
      }
      else 
      {
        OutGYearMarkCalculationNormalWeight[adim0] = 0.0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < OutUnqassGrp_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[18].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        OutGYearMarkCalculationOptionalityGc3[adim0] = ((String)((
          VDFEntryObject [])vdf.getEntries()[18].getDataValue().getObject())[
          adim0].getObject());
      }
      else 
      {
        OutGYearMarkCalculationOptionalityGc3[adim0] = "";
      }
    }
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    VDF vdf = getViewDefinition();
    // group view current cardinality
    vdf.getEntries()[0].getDataValue().setObject(new Integer(OutUnqassGrp_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      if ( adim0 < OutUnqassGrp_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[1].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[1].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[1].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[2].getDataValue().getObject())[adim0]
        .setObject(new Short(OutGUniqueAssignmentYear[adim0]));
    }
    vdf.getEntries()[2].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[3].getDataValue().getObject())[adim0]
        .setObject(new Short(OutGUniqueAssignmentPeriod[adim0]));
    }
    vdf.getEntries()[3].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[4].getDataValue().getObject())[adim0]
        .setObject(new Integer(OutGUniqueAssignmentUniqueNr[adim0]));
    }
    vdf.getEntries()[4].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[5].getDataValue().getObject())[adim0]
        .setObject(OutGUniqueAssignmentMkStudyUnitCode[adim0]);
    }
    vdf.getEntries()[5].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[6].getDataValue().getObject())[adim0]
        .setObject(new Short(OutGUniqueAssignmentAssignmentNr[adim0]));
    }
    vdf.getEntries()[6].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[7].getDataValue().getObject())[adim0]
        .setObject(new Short(OutGUniqueAssignmentNrOfQuestions[adim0]));
    }
    vdf.getEntries()[7].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[8].getDataValue().getObject())[adim0]
        .setObject(OutGUniqueAssignmentType[adim0]);
    }
    vdf.getEntries()[8].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[9].getDataValue().getObject())[adim0]
        .setObject(new Short(OutGUniqueAssignmentNegativeMarkFactor[adim0]));
    }
    vdf.getEntries()[9].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[10].getDataValue().getObject())[
        adim0].setObject(new Short(OutGUniqueAssignmentMaxCredits[adim0]));
    }
    vdf.getEntries()[10].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[11].getDataValue().getObject())[
        adim0].setObject(new Short(OutGUniqueAssignmentCreditSystem[adim0]));
    }
    vdf.getEntries()[11].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[12].getDataValue().getObject())[
        adim0].setObject(new Short(OutGUniqueAssignmentPassMarkPercentage[adim0]
        ));
    }
    vdf.getEntries()[12].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[13].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGUniqueAssignmentClosingDate[adim0]));
    }
    vdf.getEntries()[13].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[14].getDataValue().getObject())[
        adim0].setObject(OutGUniqueAssignmentCompulsory[adim0]);
    }
    vdf.getEntries()[14].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[15].getDataValue().getObject())[
        adim0].setObject(new Integer(OutGUniqueAssignmentTsaUniqueNr[adim0]));
    }
    vdf.getEntries()[15].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[16].getDataValue().getObject())[
        adim0].setObject(OutGYearMarkCalculationType[adim0]);
    }
    vdf.getEntries()[16].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[17].getDataValue().getObject())[
        adim0].setObject(new Double(OutGYearMarkCalculationNormalWeight[adim0]))
        ;
    }
    vdf.getEntries()[17].setCountUsed((short)OutUnqassGrp_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 100; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[18].getDataValue().getObject())[
        adim0].setObject(OutGYearMarkCalculationOptionalityGc3[adim0]);
    }
    vdf.getEntries()[18].setCountUsed((short)OutUnqassGrp_MA);
    return(vdf);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((SAUAL50S_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(SAUAL50S_OA orig)
  {
    OutUnqassGrp_MA = orig.OutUnqassGrp_MA;
    for(int a = 0; a < 100; a++)
    {
      OutUnqassGrp_AC[a] = orig.OutUnqassGrp_AC[a];
      OutGUniqueAssignmentYear_AT[a] = orig.OutGUniqueAssignmentYear_AT[a];
      OutGUniqueAssignmentYear_AS[a] = orig.OutGUniqueAssignmentYear_AS[a];
      OutGUniqueAssignmentYear[a] = orig.OutGUniqueAssignmentYear[a];
      OutGUniqueAssignmentPeriod_AT[a] = orig.OutGUniqueAssignmentPeriod_AT[a];
      OutGUniqueAssignmentPeriod_AS[a] = orig.OutGUniqueAssignmentPeriod_AS[a];
      OutGUniqueAssignmentPeriod[a] = orig.OutGUniqueAssignmentPeriod[a];
      OutGUniqueAssignmentUniqueNr_AT[a] = orig.OutGUniqueAssignmentUniqueNr_AT[
        a];
      OutGUniqueAssignmentUniqueNr_AS[a] = orig.OutGUniqueAssignmentUniqueNr_AS[
        a];
      OutGUniqueAssignmentUniqueNr[a] = orig.OutGUniqueAssignmentUniqueNr[a];
      OutGUniqueAssignmentMkStudyUnitCode_AT[a] = 
        orig.OutGUniqueAssignmentMkStudyUnitCode_AT[a];
      OutGUniqueAssignmentMkStudyUnitCode_AS[a] = 
        orig.OutGUniqueAssignmentMkStudyUnitCode_AS[a];
      OutGUniqueAssignmentMkStudyUnitCode[a] = 
        orig.OutGUniqueAssignmentMkStudyUnitCode[a];
      OutGUniqueAssignmentAssignmentNr_AT[a] = 
        orig.OutGUniqueAssignmentAssignmentNr_AT[a];
      OutGUniqueAssignmentAssignmentNr_AS[a] = 
        orig.OutGUniqueAssignmentAssignmentNr_AS[a];
      OutGUniqueAssignmentAssignmentNr[a] = 
        orig.OutGUniqueAssignmentAssignmentNr[a];
      OutGUniqueAssignmentNrOfQuestions_AT[a] = 
        orig.OutGUniqueAssignmentNrOfQuestions_AT[a];
      OutGUniqueAssignmentNrOfQuestions_AS[a] = 
        orig.OutGUniqueAssignmentNrOfQuestions_AS[a];
      OutGUniqueAssignmentNrOfQuestions[a] = 
        orig.OutGUniqueAssignmentNrOfQuestions[a];
      OutGUniqueAssignmentType_AT[a] = orig.OutGUniqueAssignmentType_AT[a];
      OutGUniqueAssignmentType_AS[a] = orig.OutGUniqueAssignmentType_AS[a];
      OutGUniqueAssignmentType[a] = orig.OutGUniqueAssignmentType[a];
      OutGUniqueAssignmentNegativeMarkFactor_AT[a] = 
        orig.OutGUniqueAssignmentNegativeMarkFactor_AT[a];
      OutGUniqueAssignmentNegativeMarkFactor_AS[a] = 
        orig.OutGUniqueAssignmentNegativeMarkFactor_AS[a];
      OutGUniqueAssignmentNegativeMarkFactor[a] = 
        orig.OutGUniqueAssignmentNegativeMarkFactor[a];
      OutGUniqueAssignmentMaxCredits_AT[a] = 
        orig.OutGUniqueAssignmentMaxCredits_AT[a];
      OutGUniqueAssignmentMaxCredits_AS[a] = 
        orig.OutGUniqueAssignmentMaxCredits_AS[a];
      OutGUniqueAssignmentMaxCredits[a] = orig.OutGUniqueAssignmentMaxCredits[a]
        ;
      OutGUniqueAssignmentCreditSystem_AT[a] = 
        orig.OutGUniqueAssignmentCreditSystem_AT[a];
      OutGUniqueAssignmentCreditSystem_AS[a] = 
        orig.OutGUniqueAssignmentCreditSystem_AS[a];
      OutGUniqueAssignmentCreditSystem[a] = 
        orig.OutGUniqueAssignmentCreditSystem[a];
      OutGUniqueAssignmentPassMarkPercentage_AT[a] = 
        orig.OutGUniqueAssignmentPassMarkPercentage_AT[a];
      OutGUniqueAssignmentPassMarkPercentage_AS[a] = 
        orig.OutGUniqueAssignmentPassMarkPercentage_AS[a];
      OutGUniqueAssignmentPassMarkPercentage[a] = 
        orig.OutGUniqueAssignmentPassMarkPercentage[a];
      OutGUniqueAssignmentClosingDate_AT[a] = 
        orig.OutGUniqueAssignmentClosingDate_AT[a];
      OutGUniqueAssignmentClosingDate_AS[a] = 
        orig.OutGUniqueAssignmentClosingDate_AS[a];
      OutGUniqueAssignmentClosingDate[a] = orig.OutGUniqueAssignmentClosingDate[
        a];
      OutGUniqueAssignmentCompulsory_AT[a] = 
        orig.OutGUniqueAssignmentCompulsory_AT[a];
      OutGUniqueAssignmentCompulsory_AS[a] = 
        orig.OutGUniqueAssignmentCompulsory_AS[a];
      OutGUniqueAssignmentCompulsory[a] = orig.OutGUniqueAssignmentCompulsory[a]
        ;
      OutGUniqueAssignmentTsaUniqueNr_AT[a] = 
        orig.OutGUniqueAssignmentTsaUniqueNr_AT[a];
      OutGUniqueAssignmentTsaUniqueNr_AS[a] = 
        orig.OutGUniqueAssignmentTsaUniqueNr_AS[a];
      OutGUniqueAssignmentTsaUniqueNr[a] = orig.OutGUniqueAssignmentTsaUniqueNr[
        a];
      OutGYearMarkCalculationType_AT[a] = orig.OutGYearMarkCalculationType_AT[a]
        ;
      OutGYearMarkCalculationType_AS[a] = orig.OutGYearMarkCalculationType_AS[a]
        ;
      OutGYearMarkCalculationType[a] = orig.OutGYearMarkCalculationType[a];
      OutGYearMarkCalculationNormalWeight_AT[a] = 
        orig.OutGYearMarkCalculationNormalWeight_AT[a];
      OutGYearMarkCalculationNormalWeight_AS[a] = 
        orig.OutGYearMarkCalculationNormalWeight_AS[a];
      OutGYearMarkCalculationNormalWeight[a] = 
        orig.OutGYearMarkCalculationNormalWeight[a];
      OutGYearMarkCalculationOptionalityGc3_AT[a] = 
        orig.OutGYearMarkCalculationOptionalityGc3_AT[a];
      OutGYearMarkCalculationOptionalityGc3_AS[a] = 
        orig.OutGYearMarkCalculationOptionalityGc3_AS[a];
      OutGYearMarkCalculationOptionalityGc3[a] = 
        orig.OutGYearMarkCalculationOptionalityGc3[a];
    }
  }
}
