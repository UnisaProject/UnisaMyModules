package Menu95h;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                            CA Gen r8
//
//           Copyright (c) 2017 CA. All rights reserved.
//
//    Name: MENU95S_IA                       Date: 2017/08/21
//    User: Twilsce                          Time: 07:50:35
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen80.vwrt.*;
import com.ca.gen80.vwrt.types.*;
import com.ca.gen80.vwrt.vdf.*;
import com.ca.gen80.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF IMPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: MENU95S_IA
 **/
public class MENU95S_IA extends ViewBase implements IImportView, Serializable
{
  static VDF localVdf = null;
  
  // Entity View: IN
  //        Type: WS_WORKSTATION
  /**
   * Attribute missing flag for: InWsWorkstationCode
   **/
  public char InWsWorkstationCode_AS;
  /**
   * Attribute for: InWsWorkstationCode
   **/
  public String InWsWorkstationCode;
  /**
   * Attribute missing flag for: InWsWorkstationMacCode
   **/
  public char InWsWorkstationMacCode_AS;
  /**
   * Attribute for: InWsWorkstationMacCode
   **/
  public String InWsWorkstationMacCode;
  /**
   * Attribute missing flag for: InWsWorkstationComputerHostname
   **/
  public char InWsWorkstationComputerHostname_AS;
  /**
   * Attribute for: InWsWorkstationComputerHostname
   **/
  public String InWsWorkstationComputerHostname;
  // Entity View: IN_ORDER_BY_FIELD
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: InOrderByFieldIefSuppliedCount
   **/
  public char InOrderByFieldIefSuppliedCount_AS;
  /**
   * Attribute for: InOrderByFieldIefSuppliedCount
   **/
  public int InOrderByFieldIefSuppliedCount;
  // Repeating GV:  IN_MENU_GROUP
  //     Repeats: 200 times
  /**
   * Repeating group view count
   **/
  public int InMenuGroup_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char InMenuGroup_AC[] = new char[200];
  // Entity View: IN_G
  //        Type: IEF_SUPPLIED
  /**
   * Attribute missing flag for: InGIefSuppliedSelectChar
   **/
  public char InGIefSuppliedSelectChar_AS[] = new char[200];
  /**
   * Attribute for: InGIefSuppliedSelectChar
   **/
  public String InGIefSuppliedSelectChar[] = new String[200];
  // Entity View: IN_G
  //        Type: WS_FUNCTION
  /**
   * Attribute missing flag for: InGWsFunctionNumber
   **/
  public char InGWsFunctionNumber_AS[] = new char[200];
  /**
   * Attribute for: InGWsFunctionNumber
   **/
  public int InGWsFunctionNumber[] = new int[200];
  /**
   * Attribute missing flag for: InGWsFunctionTrancode
   **/
  public char InGWsFunctionTrancode_AS[] = new char[200];
  /**
   * Attribute for: InGWsFunctionTrancode
   **/
  public String InGWsFunctionTrancode[] = new String[200];
  /**
   * Attribute missing flag for: InGWsFunctionDescription
   **/
  public char InGWsFunctionDescription_AS[] = new char[200];
  /**
   * Attribute for: InGWsFunctionDescription
   **/
  public String InGWsFunctionDescription[] = new String[200];
  // Entity View: IN
  //        Type: WS_PRINTER
  /**
   * Attribute missing flag for: InWsPrinterCode
   **/
  public char InWsPrinterCode_AS;
  /**
   * Attribute for: InWsPrinterCode
   **/
  public String InWsPrinterCode;
  // Entity View: IN
  //        Type: CSF_CLIENT_SERVER_COMMUNICATIONS
  /**
   * Attribute missing flag for: InCsfClientServerCommunicationsAction
   **/
  public char InCsfClientServerCommunicationsAction_AS;
  /**
   * Attribute for: InCsfClientServerCommunicationsAction
   **/
  public String InCsfClientServerCommunicationsAction;
  // Entity View: IN
  //        Type: WS_USER
  /**
   * Attribute missing flag for: InWsUserNumber
   **/
  public char InWsUserNumber_AS;
  /**
   * Attribute for: InWsUserNumber
   **/
  public int InWsUserNumber;
  /**
   * Attribute missing flag for: InWsUserNumberOfLogonAttempts
   **/
  public char InWsUserNumberOfLogonAttempts_AS;
  /**
   * Attribute for: InWsUserNumberOfLogonAttempts
   **/
  public short InWsUserNumberOfLogonAttempts;
  /**
   * Attribute missing flag for: InWsUserLoggedOnFlag
   **/
  public char InWsUserLoggedOnFlag_AS;
  /**
   * Attribute for: InWsUserLoggedOnFlag
   **/
  public String InWsUserLoggedOnFlag;
  /**
   * Attribute missing flag for: InWsUserInUsedFlag
   **/
  public char InWsUserInUsedFlag_AS;
  /**
   * Attribute for: InWsUserInUsedFlag
   **/
  public String InWsUserInUsedFlag;
  /**
   * Attribute missing flag for: InWsUserLastLogonDate
   **/
  public char InWsUserLastLogonDate_AS;
  /**
   * Attribute for: InWsUserLastLogonDate
   **/
  public int InWsUserLastLogonDate;
  /**
   * Attribute missing flag for: InWsUserName
   **/
  public char InWsUserName_AS;
  /**
   * Attribute for: InWsUserName
   **/
  public String InWsUserName;
  /**
   * Attribute missing flag for: InWsUserPersonnelNo
   **/
  public char InWsUserPersonnelNo_AS;
  /**
   * Attribute for: InWsUserPersonnelNo
   **/
  public String InWsUserPersonnelNo;
  /**
   * Attribute missing flag for: InWsUserPhoneNumber
   **/
  public char InWsUserPhoneNumber_AS;
  /**
   * Attribute for: InWsUserPhoneNumber
   **/
  public String InWsUserPhoneNumber;
  /**
   * Attribute missing flag for: InWsUserPassword
   **/
  public char InWsUserPassword_AS;
  /**
   * Attribute for: InWsUserPassword
   **/
  public String InWsUserPassword;
  /**
   * Attribute missing flag for: InWsUserPassword32cs
   **/
  public char InWsUserPassword32cs_AS;
  /**
   * Attribute for: InWsUserPassword32cs
   **/
  public String InWsUserPassword32cs;
  // Entity View: IN
  //        Type: WS_FUNCTION
  /**
   * Attribute missing flag for: InWsFunctionNumber
   **/
  public char InWsFunctionNumber_AS;
  /**
   * Attribute for: InWsFunctionNumber
   **/
  public int InWsFunctionNumber;
  // Entity View: IN_PHYSICAL_MAC
  //        Type: WS_WORKSTATION
  /**
   * Attribute missing flag for: InPhysicalMacWsWorkstationMacCode
   **/
  public char InPhysicalMacWsWorkstationMacCode_AS;
  /**
   * Attribute for: InPhysicalMacWsWorkstationMacCode
   **/
  public String InPhysicalMacWsWorkstationMacCode;
  // Entity View: IN_WORKSTATION_LOOKUP_STATUS
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: InWorkstationLookupStatusCsfStringsString100
   **/
  public char InWorkstationLookupStatusCsfStringsString100_AS;
  /**
   * Attribute for: InWorkstationLookupStatusCsfStringsString100
   **/
  public String InWorkstationLookupStatusCsfStringsString100;
  // Entity View: IN_FUNNELGROUP_LOOKUP_STATUS
  //        Type: CSF_STRINGS
  /**
   * Attribute missing flag for: InFunnelgroupLookupStatusCsfStringsString100
   **/
  public char InFunnelgroupLookupStatusCsfStringsString100_AS;
  /**
   * Attribute for: InFunnelgroupLookupStatusCsfStringsString100
   **/
  public String InFunnelgroupLookupStatusCsfStringsString100;
  // Entity View: IN_ASSIGNED_FG_NR_ONLY
  //        Type: WS_WKSTATION_FUNNELGROUP_CONFIG
  /**
   * Attribute missing flag for: 
    InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup
   **/
  public char InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup_AS;
  /**
   * Attribute for: InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup
   **/
  public short InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup;
  /**
   * Default Constructor
   **/
  
  public MENU95S_IA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public MENU95S_IA(MENU95S_IA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static MENU95S_IA getInstance()
  {
    return new MENU95S_IA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new MENU95S_IA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    InWsWorkstationCode_AS = ' ';
    InWsWorkstationCode = "";
    InWsWorkstationMacCode_AS = ' ';
    InWsWorkstationMacCode = "                ";
    InWsWorkstationComputerHostname_AS = ' ';
    InWsWorkstationComputerHostname = "";
    InOrderByFieldIefSuppliedCount_AS = ' ';
    InOrderByFieldIefSuppliedCount = 0;
    InMenuGroup_MA = 0;
    for(int a = 0; a < 200; a++)
    {
      InMenuGroup_AC[a] = ' ';
      InGIefSuppliedSelectChar_AS[a] = ' ';
      InGIefSuppliedSelectChar[a] = " ";
      InGWsFunctionNumber_AS[a] = ' ';
      InGWsFunctionNumber[a] = 0;
      InGWsFunctionTrancode_AS[a] = ' ';
      InGWsFunctionTrancode[a] = "        ";
      InGWsFunctionDescription_AS[a] = ' ';
      InGWsFunctionDescription[a] = "                            ";
    }
    InWsPrinterCode_AS = ' ';
    InWsPrinterCode = "          ";
    InCsfClientServerCommunicationsAction_AS = ' ';
    InCsfClientServerCommunicationsAction = "  ";
    InWsUserNumber_AS = ' ';
    InWsUserNumber = 0;
    InWsUserNumberOfLogonAttempts_AS = ' ';
    InWsUserNumberOfLogonAttempts = 0;
    InWsUserLoggedOnFlag_AS = ' ';
    InWsUserLoggedOnFlag = " ";
    InWsUserInUsedFlag_AS = ' ';
    InWsUserInUsedFlag = " ";
    InWsUserLastLogonDate_AS = ' ';
    InWsUserLastLogonDate = 00000000;
    InWsUserName_AS = ' ';
    InWsUserName = "                            ";
    InWsUserPersonnelNo_AS = ' ';
    InWsUserPersonnelNo = "          ";
    InWsUserPhoneNumber_AS = ' ';
    InWsUserPhoneNumber = "                    ";
    InWsUserPassword_AS = ' ';
    InWsUserPassword = "            ";
    InWsUserPassword32cs_AS = ' ';
    InWsUserPassword32cs = "";
    InWsFunctionNumber_AS = ' ';
    InWsFunctionNumber = 0;
    InPhysicalMacWsWorkstationMacCode_AS = ' ';
    InPhysicalMacWsWorkstationMacCode = "                ";
    InWorkstationLookupStatusCsfStringsString100_AS = ' ';
    InWorkstationLookupStatusCsfStringsString100 = 
"                                                                                                    "
      ;
    InFunnelgroupLookupStatusCsfStringsString100_AS = ' ';
    InFunnelgroupLookupStatusCsfStringsString100 = 
"                                                                                                    "
      ;
    InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup_AS = ' ';
    InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup = 0;
  }
  /**
   * Gets the VDF array for the instance, initialized.
   **/
  
  public static VDF getViewDefinition()
  {
    if ( localVdf == null )
    {
      VDFEntry [] vdfEntries = {
        new VDFEntry((int)1, "", "InWsWorkstation", "WsWorkstation", "Code", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 10, (short)0, null), 
        new VDFEntry((int)2, "", "InWsWorkstation", "WsWorkstation", "MacCode", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 16, (short)0, null), 
        new VDFEntry((int)3, "", "InWsWorkstation", "WsWorkstation", 
          "ComputerHostname", VDFEntry.TYPE_STRING, (short)1, (short)0, 15, (
          short)0, null), 
        new VDFEntry((int)4, "", "InOrderByFieldIefSupplied", "IefSupplied", 
          "Count", VDFEntry.TYPE_INT, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)5, "InMenuGroup", "", "", "MA", VDFEntry.TYPE_INT, (
          short)1, (short)0, 4, (short)0, null), 
        new VDFEntry((int)6, "InMenuGroup", "", "", "AC", VDFEntry.TYPE_CHAR, (
          short)200, (short)0, 1, (short)0, null), 
        new VDFEntry((int)7, "InMenuGroup", "InGIefSupplied", "IefSupplied", 
          "SelectChar", VDFEntry.TYPE_STRING, (short)200, (short)0, 1, (short)0,
           null), 
        new VDFEntry((int)8, "InMenuGroup", "InGWsFunction", "WsFunction", 
          "Number", VDFEntry.TYPE_INT, (short)200, (short)0, 8, (short)0, null),
           
        new VDFEntry((int)9, "InMenuGroup", "InGWsFunction", "WsFunction", 
          "Trancode", VDFEntry.TYPE_STRING, (short)200, (short)0, 8, (short)0, 
          null), 
        new VDFEntry((int)10, "InMenuGroup", "InGWsFunction", "WsFunction", 
          "Description", VDFEntry.TYPE_STRING, (short)200, (short)0, 28, (short)
          0, null), 
        new VDFEntry((int)11, "", "InWsPrinter", "WsPrinter", "Code", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 10, (short)0, null), 
        new VDFEntry((int)12, "", "InCsfClientServerCommunications", 
          "CsfClientServerCommunications", "Action", VDFEntry.TYPE_STRING, (
          short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)13, "", "InWsUser", "WsUser", "Number", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)14, "", "InWsUser", "WsUser", "NumberOfLogonAttempts",
           VDFEntry.TYPE_SHORT, (short)1, (short)0, 2, (short)0, null), 
        new VDFEntry((int)15, "", "InWsUser", "WsUser", "LoggedOnFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)16, "", "InWsUser", "WsUser", "InUsedFlag", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 1, (short)0, null), 
        new VDFEntry((int)17, "", "InWsUser", "WsUser", "LastLogonDate", 
          VDFEntry.TYPE_DATE, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)18, "", "InWsUser", "WsUser", "Name", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 28, (short)0, null), 
        new VDFEntry((int)19, "", "InWsUser", "WsUser", "PersonnelNo", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 10, (short)0, null), 
        new VDFEntry((int)20, "", "InWsUser", "WsUser", "PhoneNumber", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 20, (short)0, null), 
        new VDFEntry((int)21, "", "InWsUser", "WsUser", "Password", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 12, (short)0, null), 
        new VDFEntry((int)22, "", "InWsUser", "WsUser", "Password32cs", 
          VDFEntry.TYPE_STRING, (short)1, (short)0, 32, (short)0, null), 
        new VDFEntry((int)23, "", "InWsFunction", "WsFunction", "Number", 
          VDFEntry.TYPE_INT, (short)1, (short)0, 8, (short)0, null), 
        new VDFEntry((int)24, "", "InPhysicalMacWsWorkstation", "WsWorkstation",
           "MacCode", VDFEntry.TYPE_STRING, (short)1, (short)0, 16, (short)0, 
          null), 
        new VDFEntry((int)25, "", "InWorkstationLookupStatusCsfStrings", 
          "CsfStrings", "String100", VDFEntry.TYPE_STRING, (short)1, (short)0, 
          100, (short)0, null), 
        new VDFEntry((int)26, "", "InFunnelgroupLookupStatusCsfStrings", 
          "CsfStrings", "String100", VDFEntry.TYPE_STRING, (short)1, (short)0, 
          100, (short)0, null), 
        new VDFEntry((int)27, "", 
          "InAssignedFgNrOnlyWsWkstationFunnelgroupConfig", 
          "WsWkstationFunnelgroupConfig", "FunnelGroup", VDFEntry.TYPE_SHORT, (
          short)1, (short)0, 2, (short)0, null), 
      };
      localVdf = new VDF(vdfEntries);
    }
    try {
      VDF result = (VDF)localVdf.clone();
      result.initViewData();
      return result;
    } catch( CloneNotSupportedException e ) {
      return null;
    }
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    VDF vdf = getViewDefinition();
    // predicate view item
    vdf.getEntries()[0].getDataValue().setObject(InWsWorkstationCode);
    // predicate view item
    vdf.getEntries()[1].getDataValue().setObject(InWsWorkstationMacCode);
    // predicate view item
    vdf.getEntries()[2].getDataValue().setObject(
      InWsWorkstationComputerHostname);
    // predicate view item
    vdf.getEntries()[3].getDataValue().setObject(new Integer(
      InOrderByFieldIefSuppliedCount));
    // group view current cardinality
    vdf.getEntries()[4].getDataValue().setObject(new Integer(InMenuGroup_MA));
    // group view active flags
    for(int adim0 = 0; adim0 < 200; adim0++)
    {
      if ( adim0 < InMenuGroup_MA )
      {
        ((VDFEntryObject [])vdf.getEntries()[5].getDataValue().getObject())[
          adim0].setObject(new Character('Y'));
      }
      else 
      {
        ((VDFEntryObject [])vdf.getEntries()[5].getDataValue().getObject())[
          adim0].setObject(new Character('N'));
      }
    }
    vdf.getEntries()[5].setCountUsed((short)InMenuGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 200; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[6].getDataValue().getObject())[adim0]
        .setObject(InGIefSuppliedSelectChar[adim0]);
    }
    vdf.getEntries()[6].setCountUsed((short)InMenuGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 200; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[7].getDataValue().getObject())[adim0]
        .setObject(new Integer(InGWsFunctionNumber[adim0]));
    }
    vdf.getEntries()[7].setCountUsed((short)InMenuGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 200; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[8].getDataValue().getObject())[adim0]
        .setObject(InGWsFunctionTrancode[adim0]);
    }
    vdf.getEntries()[8].setCountUsed((short)InMenuGroup_MA);
    // current cardinality group view items
    for(int adim0 = 0; adim0 < 200; adim0++)
    {
      ((VDFEntryObject [])vdf.getEntries()[9].getDataValue().getObject())[adim0]
        .setObject(InGWsFunctionDescription[adim0]);
    }
    vdf.getEntries()[9].setCountUsed((short)InMenuGroup_MA);
    // predicate view item
    vdf.getEntries()[10].getDataValue().setObject(InWsPrinterCode);
    // predicate view item
    vdf.getEntries()[11].getDataValue().setObject(
      InCsfClientServerCommunicationsAction);
    // predicate view item
    vdf.getEntries()[12].getDataValue().setObject(new Integer(InWsUserNumber));
    // predicate view item
    vdf.getEntries()[13].getDataValue().setObject(new Short(
      InWsUserNumberOfLogonAttempts));
    // predicate view item
    vdf.getEntries()[14].getDataValue().setObject(InWsUserLoggedOnFlag);
    // predicate view item
    vdf.getEntries()[15].getDataValue().setObject(InWsUserInUsedFlag);
    // predicate view item
    vdf.getEntries()[16].getDataValue().setObject(new Integer(
      InWsUserLastLogonDate));
    // predicate view item
    vdf.getEntries()[17].getDataValue().setObject(InWsUserName);
    // predicate view item
    vdf.getEntries()[18].getDataValue().setObject(InWsUserPersonnelNo);
    // predicate view item
    vdf.getEntries()[19].getDataValue().setObject(InWsUserPhoneNumber);
    // predicate view item
    vdf.getEntries()[20].getDataValue().setObject(InWsUserPassword);
    // predicate view item
    vdf.getEntries()[21].getDataValue().setObject(InWsUserPassword32cs);
    // predicate view item
    vdf.getEntries()[22].getDataValue().setObject(new Integer(
      InWsFunctionNumber));
    // predicate view item
    vdf.getEntries()[23].getDataValue().setObject(
      InPhysicalMacWsWorkstationMacCode);
    // predicate view item
    vdf.getEntries()[24].getDataValue().setObject(
      InWorkstationLookupStatusCsfStringsString100);
    // predicate view item
    vdf.getEntries()[25].getDataValue().setObject(
      InFunnelgroupLookupStatusCsfStringsString100);
    // predicate view item
    vdf.getEntries()[26].getDataValue().setObject(new Short(
      InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup));
    return(vdf);
  }
  
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    // predicate view item
    if ( vdf.getEntries()[0].getDataValue().getObject() != null )
    {
      InWsWorkstationCode = ((String)vdf.getEntries()[0].getDataValue()
        .getObject());
    }
    else 
    {
      InWsWorkstationCode = "";
    }
    // predicate view item
    if ( vdf.getEntries()[1].getDataValue().getObject() != null )
    {
      InWsWorkstationMacCode = ((String)vdf.getEntries()[1].getDataValue()
        .getObject());
    }
    else 
    {
      InWsWorkstationMacCode = "                ";
    }
    // predicate view item
    if ( vdf.getEntries()[2].getDataValue().getObject() != null )
    {
      InWsWorkstationComputerHostname = ((String)vdf.getEntries()[2]
        .getDataValue().getObject());
    }
    else 
    {
      InWsWorkstationComputerHostname = "";
    }
    // predicate view item
    if ( vdf.getEntries()[3].getDataValue().getObject() != null )
    {
      InOrderByFieldIefSuppliedCount = ((Integer)vdf.getEntries()[3]
        .getDataValue().getObject()).intValue();
    }
    else 
    {
      InOrderByFieldIefSuppliedCount = 0;
    }
    // group view current cardinality
    if ( vdf.getEntries()[4].getDataValue().getObject() != null )
    {
      InMenuGroup_MA = ((Integer)vdf.getEntries()[4].getDataValue().getObject())
        .intValue();
    }
    else 
    {
      InMenuGroup_MA = ' ';
    }
    // group view active flags
    for(int adim0 = 0; adim0 < InMenuGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[5].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InMenuGroup_AC[adim0] = ((Character)((VDFEntryObject [])vdf.getEntries()
          [5].getDataValue().getObject())[adim0].getObject()).charValue();
      }
      else 
      {
        InMenuGroup_AC[adim0] = ' ';
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InMenuGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[6].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGIefSuppliedSelectChar[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[6].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGIefSuppliedSelectChar[adim0] = " ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InMenuGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[7].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGWsFunctionNumber[adim0] = ((Integer)((VDFEntryObject [])
          vdf.getEntries()[7].getDataValue().getObject())[adim0].getObject())
          .intValue();
      }
      else 
      {
        InGWsFunctionNumber[adim0] = 0;
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InMenuGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[8].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGWsFunctionTrancode[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[8].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGWsFunctionTrancode[adim0] = "        ";
      }
    }
    // current cardinality group view items
    for(int adim0 = 0; adim0 < InMenuGroup_MA; adim0++)
    {
      if ( ((VDFEntryObject [])vdf.getEntries()[9].getDataValue().getObject())[
        adim0].getObject() != null )
      {
        InGWsFunctionDescription[adim0] = ((String)((VDFEntryObject [])
          vdf.getEntries()[9].getDataValue().getObject())[adim0].getObject());
      }
      else 
      {
        InGWsFunctionDescription[adim0] = "                            ";
      }
    }
    // predicate view item
    if ( vdf.getEntries()[10].getDataValue().getObject() != null )
    {
      InWsPrinterCode = ((String)vdf.getEntries()[10].getDataValue().getObject()
        );
    }
    else 
    {
      InWsPrinterCode = "          ";
    }
    // predicate view item
    if ( vdf.getEntries()[11].getDataValue().getObject() != null )
    {
      InCsfClientServerCommunicationsAction = ((String)vdf.getEntries()[11]
        .getDataValue().getObject());
    }
    else 
    {
      InCsfClientServerCommunicationsAction = "  ";
    }
    // predicate view item
    if ( vdf.getEntries()[12].getDataValue().getObject() != null )
    {
      InWsUserNumber = ((Integer)vdf.getEntries()[12].getDataValue().getObject()
        ).intValue();
    }
    else 
    {
      InWsUserNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[13].getDataValue().getObject() != null )
    {
      InWsUserNumberOfLogonAttempts = ((Short)vdf.getEntries()[13].getDataValue(
        ).getObject()).shortValue();
    }
    else 
    {
      InWsUserNumberOfLogonAttempts = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[14].getDataValue().getObject() != null )
    {
      InWsUserLoggedOnFlag = ((String)vdf.getEntries()[14].getDataValue()
        .getObject());
    }
    else 
    {
      InWsUserLoggedOnFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[15].getDataValue().getObject() != null )
    {
      InWsUserInUsedFlag = ((String)vdf.getEntries()[15].getDataValue()
        .getObject());
    }
    else 
    {
      InWsUserInUsedFlag = " ";
    }
    // predicate view item
    if ( vdf.getEntries()[16].getDataValue().getObject() != null )
    {
      InWsUserLastLogonDate = ((Integer)vdf.getEntries()[16].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      InWsUserLastLogonDate = 00000000;
    }
    // predicate view item
    if ( vdf.getEntries()[17].getDataValue().getObject() != null )
    {
      InWsUserName = ((String)vdf.getEntries()[17].getDataValue().getObject());
    }
    else 
    {
      InWsUserName = "                            ";
    }
    // predicate view item
    if ( vdf.getEntries()[18].getDataValue().getObject() != null )
    {
      InWsUserPersonnelNo = ((String)vdf.getEntries()[18].getDataValue()
        .getObject());
    }
    else 
    {
      InWsUserPersonnelNo = "          ";
    }
    // predicate view item
    if ( vdf.getEntries()[19].getDataValue().getObject() != null )
    {
      InWsUserPhoneNumber = ((String)vdf.getEntries()[19].getDataValue()
        .getObject());
    }
    else 
    {
      InWsUserPhoneNumber = "                    ";
    }
    // predicate view item
    if ( vdf.getEntries()[20].getDataValue().getObject() != null )
    {
      InWsUserPassword = ((String)vdf.getEntries()[20].getDataValue().getObject(
        ));
    }
    else 
    {
      InWsUserPassword = "            ";
    }
    // predicate view item
    if ( vdf.getEntries()[21].getDataValue().getObject() != null )
    {
      InWsUserPassword32cs = ((String)vdf.getEntries()[21].getDataValue()
        .getObject());
    }
    else 
    {
      InWsUserPassword32cs = "";
    }
    // predicate view item
    if ( vdf.getEntries()[22].getDataValue().getObject() != null )
    {
      InWsFunctionNumber = ((Integer)vdf.getEntries()[22].getDataValue()
        .getObject()).intValue();
    }
    else 
    {
      InWsFunctionNumber = 0;
    }
    // predicate view item
    if ( vdf.getEntries()[23].getDataValue().getObject() != null )
    {
      InPhysicalMacWsWorkstationMacCode = ((String)vdf.getEntries()[23]
        .getDataValue().getObject());
    }
    else 
    {
      InPhysicalMacWsWorkstationMacCode = "                ";
    }
    // predicate view item
    if ( vdf.getEntries()[24].getDataValue().getObject() != null )
    {
      InWorkstationLookupStatusCsfStringsString100 = ((String)vdf.getEntries()[
        24].getDataValue().getObject());
    }
    else 
    {
      InWorkstationLookupStatusCsfStringsString100 = 
"                                                                                                    "
        ;
    }
    // predicate view item
    if ( vdf.getEntries()[25].getDataValue().getObject() != null )
    {
      InFunnelgroupLookupStatusCsfStringsString100 = ((String)vdf.getEntries()[
        25].getDataValue().getObject());
    }
    else 
    {
      InFunnelgroupLookupStatusCsfStringsString100 = 
"                                                                                                    "
        ;
    }
    // predicate view item
    if ( vdf.getEntries()[26].getDataValue().getObject() != null )
    {
      InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup = ((Short)
        vdf.getEntries()[26].getDataValue().getObject()).shortValue();
    }
    else 
    {
      InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup = 0;
    }
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IImportView orig)
  {
    this.copyFrom((MENU95S_IA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(MENU95S_IA orig)
  {
    InWsWorkstationCode_AS = orig.InWsWorkstationCode_AS;
    InWsWorkstationCode = orig.InWsWorkstationCode;
    InWsWorkstationMacCode_AS = orig.InWsWorkstationMacCode_AS;
    InWsWorkstationMacCode = orig.InWsWorkstationMacCode;
    InWsWorkstationComputerHostname_AS = 
      orig.InWsWorkstationComputerHostname_AS;
    InWsWorkstationComputerHostname = orig.InWsWorkstationComputerHostname;
    InOrderByFieldIefSuppliedCount_AS = orig.InOrderByFieldIefSuppliedCount_AS;
    InOrderByFieldIefSuppliedCount = orig.InOrderByFieldIefSuppliedCount;
    InMenuGroup_MA = orig.InMenuGroup_MA;
    for(int a = 0; a < 200; a++)
    {
      InMenuGroup_AC[a] = orig.InMenuGroup_AC[a];
      InGIefSuppliedSelectChar_AS[a] = orig.InGIefSuppliedSelectChar_AS[a];
      InGIefSuppliedSelectChar[a] = orig.InGIefSuppliedSelectChar[a];
      InGWsFunctionNumber_AS[a] = orig.InGWsFunctionNumber_AS[a];
      InGWsFunctionNumber[a] = orig.InGWsFunctionNumber[a];
      InGWsFunctionTrancode_AS[a] = orig.InGWsFunctionTrancode_AS[a];
      InGWsFunctionTrancode[a] = orig.InGWsFunctionTrancode[a];
      InGWsFunctionDescription_AS[a] = orig.InGWsFunctionDescription_AS[a];
      InGWsFunctionDescription[a] = orig.InGWsFunctionDescription[a];
    }
    InWsPrinterCode_AS = orig.InWsPrinterCode_AS;
    InWsPrinterCode = orig.InWsPrinterCode;
    InCsfClientServerCommunicationsAction_AS = 
      orig.InCsfClientServerCommunicationsAction_AS;
    InCsfClientServerCommunicationsAction = 
      orig.InCsfClientServerCommunicationsAction;
    InWsUserNumber_AS = orig.InWsUserNumber_AS;
    InWsUserNumber = orig.InWsUserNumber;
    InWsUserNumberOfLogonAttempts_AS = orig.InWsUserNumberOfLogonAttempts_AS;
    InWsUserNumberOfLogonAttempts = orig.InWsUserNumberOfLogonAttempts;
    InWsUserLoggedOnFlag_AS = orig.InWsUserLoggedOnFlag_AS;
    InWsUserLoggedOnFlag = orig.InWsUserLoggedOnFlag;
    InWsUserInUsedFlag_AS = orig.InWsUserInUsedFlag_AS;
    InWsUserInUsedFlag = orig.InWsUserInUsedFlag;
    InWsUserLastLogonDate_AS = orig.InWsUserLastLogonDate_AS;
    InWsUserLastLogonDate = orig.InWsUserLastLogonDate;
    InWsUserName_AS = orig.InWsUserName_AS;
    InWsUserName = orig.InWsUserName;
    InWsUserPersonnelNo_AS = orig.InWsUserPersonnelNo_AS;
    InWsUserPersonnelNo = orig.InWsUserPersonnelNo;
    InWsUserPhoneNumber_AS = orig.InWsUserPhoneNumber_AS;
    InWsUserPhoneNumber = orig.InWsUserPhoneNumber;
    InWsUserPassword_AS = orig.InWsUserPassword_AS;
    InWsUserPassword = orig.InWsUserPassword;
    InWsUserPassword32cs_AS = orig.InWsUserPassword32cs_AS;
    InWsUserPassword32cs = orig.InWsUserPassword32cs;
    InWsFunctionNumber_AS = orig.InWsFunctionNumber_AS;
    InWsFunctionNumber = orig.InWsFunctionNumber;
    InPhysicalMacWsWorkstationMacCode_AS = 
      orig.InPhysicalMacWsWorkstationMacCode_AS;
    InPhysicalMacWsWorkstationMacCode = orig.InPhysicalMacWsWorkstationMacCode;
    InWorkstationLookupStatusCsfStringsString100_AS = 
      orig.InWorkstationLookupStatusCsfStringsString100_AS;
    InWorkstationLookupStatusCsfStringsString100 = 
      orig.InWorkstationLookupStatusCsfStringsString100;
    InFunnelgroupLookupStatusCsfStringsString100_AS = 
      orig.InFunnelgroupLookupStatusCsfStringsString100_AS;
    InFunnelgroupLookupStatusCsfStringsString100 = 
      orig.InFunnelgroupLookupStatusCsfStringsString100;
    InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup_AS = 
      orig.InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup_AS;
    InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup = 
      orig.InAssignedFgNrOnlyWsWkstationFunnelgroupConfigFunnelGroup;
  }
}
